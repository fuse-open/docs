{
  "root": {
    "id": {
      "id": "fuse/layouts/layout",
      "parentId": "fuse/layouts",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/layouts/layout",
      "href": "fuse/layouts/layout"
    },
    "titles": {
      "indexTitle": "Layout",
      "fullyQualifiedIndexTitle": "Fuse.Layouts.Layout"
    }
  },
  "descendants": [
    {
      "comment": {
        "brief": "Positions elements along an axis' tick locations.",
        "full": "Positions elements along an axis' tick locations.\n\nConsider using @PlotAxis instead to provide labels for the plot. It will use this layout.",
        "attributes": {
          "advanced": true,
          "experimental": true
        }
      },
      "id": {
        "id": "fuse/charting/plotaxislayout",
        "parentId": "fuse/charting",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/charting/plotaxislayout",
        "href": "fuse/charting/plotaxislayout"
      },
      "titles": {
        "indexTitle": "PlotAxisLayout",
        "fullyQualifiedIndexTitle": "Fuse.Charting.PlotAxisLayout"
      }
    },
    {
      "comment": {
        "brief": "Lays out elements in an a circular way.",
        "full": "Lays out elements in an a circular way.\n\n@CircleLayout must be placed inside a @Panel, and will apply to the elements inside it.\n\nWe can use `StartAngleDegrees` and `EndAngleDegrees` to define how much of the circle will\nbe covered. Here zero degrees equals 3 o'clock.\n\n> Note that `EndAngleDegrees` should be greater than `StartAngleDegrees` to avoid\n> layout calculation issues.\n\n## Example\n\n    <Panel Color=\"#000000\">\n        <CircleLayout />\n        <Circle Fill=\"#ff00ff\" />\n        <Circle Fill=\"#7f7fff\" />\n        <Circle Fill=\"#00ffff\" />\n        <Circle Fill=\"#7fff7f\" />\n        <Circle Fill=\"#ffff00\" />\n        <Circle Fill=\"#ff7f7f\" />\n    </Panel>\n\nThe layout calculation is done by fitting circles into a large circle. The elements inside are all\ntreated as circles, such that arranging them they all just touch the `Radius` edge and each other\n(with a zero arc-spacing)."
      },
      "id": {
        "id": "fuse/layouts/circlelayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/circlelayout",
        "href": "fuse/layouts/circlelayout"
      },
      "titles": {
        "indexTitle": "CircleLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.CircleLayout"
      }
    },
    {
      "comment": {
        "brief": "Lays out elements in vertical or horizontal columns.",
        "full": "Lays out elements in vertical or horizontal columns.\n\nThe columns will use a vertical orientation by default, but this can be changed\nby setting the `Orientation` attribute to `Horizontal`.\n\n## Example\n\n    <Panel>\n        <ColumnLayout />\n        <Each Count=\"10\">\n            <Circle Margin=\"5\" Color=\"Blue\" />\n        </Each>\n    </Panel>"
      },
      "id": {
        "id": "fuse/layouts/columnlayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/columnlayout",
        "href": "fuse/layouts/columnlayout"
      },
      "titles": {
        "indexTitle": "ColumnLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.ColumnLayout"
      }
    },
    {
      "id": {
        "id": "fuse/layouts/defaultlayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/defaultlayout",
        "href": "fuse/layouts/defaultlayout"
      },
      "titles": {
        "indexTitle": "DefaultLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.DefaultLayout"
      }
    },
    {
      "id": {
        "id": "fuse/layouts/docklayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/docklayout",
        "href": "fuse/layouts/docklayout"
      },
      "titles": {
        "indexTitle": "DockLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.DockLayout"
      }
    },
    {
      "id": {
        "id": "fuse/layouts/gridlayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/gridlayout",
        "href": "fuse/layouts/gridlayout"
      },
      "titles": {
        "indexTitle": "GridLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.GridLayout"
      }
    },
    {
      "id": {
        "id": "fuse/layouts/stacklayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/stacklayout",
        "href": "fuse/layouts/stacklayout"
      },
      "titles": {
        "indexTitle": "StackLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.StackLayout"
      }
    },
    {
      "id": {
        "id": "fuse/layouts/wraplayout",
        "parentId": "fuse/layouts",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/layouts/wraplayout",
        "href": "fuse/layouts/wraplayout"
      },
      "titles": {
        "indexTitle": "WrapLayout",
        "fullyQualifiedIndexTitle": "Fuse.Layouts.WrapLayout"
      }
    }
  ]
}