{
  "root": {
    "id": {
      "id": "fuse/triggers/whilebool",
      "parentId": "fuse/triggers",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/triggers/whilebool",
      "href": "fuse/triggers/whilebool"
    },
    "titles": {
      "indexTitle": "WhileBool",
      "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileBool"
    }
  },
  "descendants": [
    {
      "id": {
        "id": "alive/darktheme",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/darktheme",
        "href": "alive/darktheme"
      },
      "titles": {
        "indexTitle": "DarkTheme",
        "fullyQualifiedIndexTitle": "Alive.DarkTheme"
      }
    },
    {
      "id": {
        "id": "alive/fallbacktheme",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/fallbacktheme",
        "href": "alive/fallbacktheme"
      },
      "titles": {
        "indexTitle": "FallbackTheme",
        "fullyQualifiedIndexTitle": "Alive.FallbackTheme"
      }
    },
    {
      "id": {
        "id": "alive/lighttheme",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/lighttheme",
        "href": "alive/lighttheme"
      },
      "titles": {
        "indexTitle": "LightTheme",
        "fullyQualifiedIndexTitle": "Alive.LightTheme"
      }
    },
    {
      "id": {
        "id": "alive/themebase",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "alive/themebase",
        "href": "alive/themebase"
      },
      "titles": {
        "indexTitle": "ThemeBase",
        "fullyQualifiedIndexTitle": "Alive.ThemeBase"
      }
    },
    {
      "id": {
        "id": "fuse/controls/scrollview/defaulttrigger",
        "parentId": "fuse/controls/scrollview",
        "type": "Class",
        "modifiers": [
          "public",
          "partial"
        ]
      },
      "uri": {
        "idUri": "fuse/controls/scrollview/defaulttrigger",
        "href": "fuse/controls/scrollview/defaulttrigger"
      },
      "titles": {
        "indexTitle": "DefaultTrigger",
        "fullyQualifiedIndexTitle": "Fuse.Controls.DefaultTrigger"
      }
    },
    {
      "comment": {
        "brief": "A trigger that is active while its `Value` property is `false`.",
        "full": "A trigger that is active while its `Value` property is `false`.\n\n> *Note*\n>\n> This is the exact opposite from @WhileTrue.\n> Head over there for documentation and examples."
      },
      "id": {
        "id": "fuse/triggers/whilefalse",
        "parentId": "fuse/triggers",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/triggers/whilefalse",
        "href": "fuse/triggers/whilefalse"
      },
      "titles": {
        "indexTitle": "WhileFalse",
        "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileFalse"
      }
    },
    {
      "comment": {
        "brief": "A trigger that is active while its `Value` property is `true`.",
        "full": "A trigger that is active while its `Value` property is `true`.\n\n## Examples\n\nBy default, the value of a `WhileTrue` is `false`.\n\n    <WhileTrue>\n        <!-- Any actions/animators placed here will never be triggered -->\n    </WhileTrue>\n\nYou can, however, use @Set to change its value.\n\n    <Panel Width=\"200\" Height=\"200\" Background=\"#000\">\n        <Clicked>\n            <Set moveToTheRight.Value=\"true\" />\n        </Clicked>\n\n        <WhileTrue ux:Name=\"moveToTheRight\">\n            <Move X=\"200\" Duration=\"0.4\" />\n        </WhileTrue>\n    </Panel>\n\nIts value can also be toggled on and off using @Toggle.\n\n    <Panel Width=\"200\" Height=\"200\" Background=\"#000\">\n        <WhileTrue ux:Name=\"moveToTheRight\">\n            <Move X=\"200\" Duration=\"0.4\" />\n        </WhileTrue>\n\n        <Clicked>\n            <Toggle Target=\"moveToTheRight\" />\n        </Clicked>\n    </Panel>\n\nIt is also particularly useful to data-bind `Value` to an @Observable.\n\nThe following example consists of a @TextBox, as well as a @Button that fades to full transparency while\nthe user has entered less than 6 characters into the @TextBox.\n\n    <JavaScript>\n        var Observable = require(\"FuseJS/Observable\");\n\n        var password = Observable(\"\");\n        var isPasswordInvalid = password.map(function(value) {\n            return value.length < 6;\n        });\n\n        module.exports = {\n            password: password,\n            isPasswordInvalid: isPasswordInvalid\n        };\n    </JavaScript>\n\n    <StackPanel Alignment=\"VerticalCenter\" ItemSpacing=\"50\" Margin=\"50\">\n        <TextBox Value=\"{password}\" IsPassword=\"true\" />\n        <Button Text=\"Log in\" ux:Name=\"loginButton\" />\n\n        <WhileTrue Value=\"{isPasswordInvalid}\">\n            <Change loginButton.Opacity=\"0\" Duration=\"0.3\" />\n        </WhileTrue>\n    </StackPanel>\n\n## Instance\n\nThe children of `WhileTrue` are created whether the `Value` is true or false; this is the standard behavior of all triggers. If you need to prevent item creation when the value is false, consider using an `Instance` instead and bind to the `IsEnabled` property."
      },
      "id": {
        "id": "fuse/triggers/whiletrue",
        "parentId": "fuse/triggers",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/triggers/whiletrue",
        "href": "fuse/triggers/whiletrue"
      },
      "titles": {
        "indexTitle": "WhileTrue",
        "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrue"
      }
    }
  ]
}