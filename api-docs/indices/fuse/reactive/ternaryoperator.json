{
  "root": {
    "id": {
      "id": "fuse/reactive/ternaryoperator",
      "parentId": "fuse/reactive",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/ternaryoperator",
      "href": "fuse/reactive/ternaryoperator"
    },
    "titles": {
      "indexTitle": "TernaryOperator",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.TernaryOperator"
    }
  },
  "descendants": [
    {
      "id": {
        "id": "alive/mixfunction",
        "parentId": "alive",
        "type": "Class",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "alive/mixfunction",
        "href": "alive/mixfunction"
      },
      "titles": {
        "indexTitle": "MixFunction",
        "fullyQualifiedIndexTitle": "Alive.MixFunction"
      }
    },
    {
      "comment": {
        "brief": "Restricts the range of a value to between two numbers.",
        "full": "Restricts the range of a value to between two numbers.\n\n    clamp( value, min, max)\n\nReturns\n- `min` when `value < min`\n- `max` when `value > max`\n- `value` otherwise\n\nValue may be a 1-4 component value. `min` and `max` must both be a single value."
      },
      "id": {
        "id": "fuse/reactive/clamp",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/clamp",
        "href": "fuse/reactive/clamp"
      },
      "titles": {
        "indexTitle": "Clamp",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Clamp"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/conditional",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/conditional",
        "href": "fuse/reactive/conditional"
      },
      "titles": {
        "indexTitle": "Conditional",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Conditional"
      }
    },
    {
      "comment": {
        "brief": "Calculates the linear interpolation between two values.",
        "full": "Calculates the linear interpolation between two values.\n\n    lerp( from, to, step )\n\nWhen step==0 the result is `from`, when step==1 the result is `to`. Partial values are linearly interpolated. Step values <0 and >1 are also supported.\n\nThe input supports a 1-4 component value for `from` and `to`. The result will be same size.\n`step` must always be a single value."
      },
      "id": {
        "id": "fuse/reactive/lerp",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/lerp",
        "href": "fuse/reactive/lerp"
      },
      "titles": {
        "indexTitle": "Lerp",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Lerp"
      }
    }
  ]
}