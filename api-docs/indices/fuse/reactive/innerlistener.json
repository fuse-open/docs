{
  "root": {
    "id": {
      "id": "fuse/reactive/innerlistener",
      "parentId": "fuse/reactive",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/innerlistener",
      "href": "fuse/reactive/innerlistener"
    },
    "titles": {
      "indexTitle": "InnerListener",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.InnerListener"
    }
  },
  "descendants": [
    {
      "comment": {
        "brief": "A base class for common expression subscriptions. This handles the basic bookkeeping. Derived classes should implement `OnArguments` (coming from the base class). The members `ClearData` and `SetData` should be called to set the output state.",
        "full": "A base class for common expression subscriptions. This handles the basic bookkeeping. Derived classes should implement `OnArguments` (coming from the base class). The members `ClearData` and `SetData` should be called to set the output state.\n\nUsing this directly is unsual, consider `ComputeExpression` instead.\n\nDerived classes should implement `OnArguments`",
        "attributes": {
          "advanced": true
        }
      },
      "id": {
        "id": "fuse/reactive/expressionlistener",
        "parentId": "fuse/reactive",
        "type": "Class",
        "modifiers": [
          "public",
          "abstract"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/expressionlistener",
        "href": "fuse/reactive/expressionlistener"
      },
      "titles": {
        "indexTitle": "ExpressionListener",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ExpressionListener"
      }
    },
    {
      "comment": {
        "brief": "Subscribes to many argument expressions used in higher level functions. This collects common\nbehaviour and means to simplify higher-level code.",
        "full": "Subscribes to many argument expressions used in higher level functions. This collects common\nbehaviour and means to simplify higher-level code.\n\nNOTE: The use of InnerListener is questionable but unavoidable at this time.\nhttps://github.com/fuse-open/fuselibs/issues/785\n\n@hide"
      },
      "id": {
        "id": "fuse/reactive/expressionsubscriber",
        "parentId": "fuse/reactive",
        "type": "Class",
        "modifiers": [
          "public",
          "abstract"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/expressionsubscriber",
        "href": "fuse/reactive/expressionsubscriber"
      },
      "titles": {
        "indexTitle": "ExpressionSubscriber",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ExpressionSubscriber"
      }
    }
  ]
}