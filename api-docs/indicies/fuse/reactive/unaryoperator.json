{
  "root": {
    "id": {
      "id": "fuse/reactive/unaryoperator",
      "parentId": "fuse/reactive",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/unaryoperator",
      "href": "fuse/reactive/unaryoperator"
    },
    "titles": {
      "indexTitle": "UnaryOperator",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.UnaryOperator"
    }
  },
  "descendants": [
    {
      "id": {
        "id": "fuse/reactive/abs",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/abs",
        "href": "fuse/reactive/abs"
      },
      "titles": {
        "indexTitle": "Abs",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Abs"
      }
    },
    {
      "comment": {
        "brief": "The invserse trigonometric cosine of the input",
        "full": "The invserse trigonometric cosine of the input"
      },
      "id": {
        "id": "fuse/reactive/acos",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/acos",
        "href": "fuse/reactive/acos"
      },
      "titles": {
        "indexTitle": "Acos",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Acos"
      }
    },
    {
      "comment": {
        "brief": "The invserse trigonometric sine of the input",
        "full": "The invserse trigonometric sine of the input"
      },
      "id": {
        "id": "fuse/reactive/asin",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/asin",
        "href": "fuse/reactive/asin"
      },
      "titles": {
        "indexTitle": "Asin",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Asin"
      }
    },
    {
      "comment": {
        "brief": "The invserse trigonometric tangent of the input",
        "full": "The invserse trigonometric tangent of the input"
      },
      "id": {
        "id": "fuse/reactive/atan",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/atan",
        "href": "fuse/reactive/atan"
      },
      "titles": {
        "indexTitle": "Atan",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Atan"
      }
    },
    {
      "comment": {
        "brief": "The inverse trigonometric tangent of the input components. Like `atan2` but uses the input vector for the X and Y values.",
        "full": "The inverse trigonometric tangent of the input components. Like `atan2` but uses the input vector for the X and Y values.\n\n    atanVector( v ) == atan2( v.Y, v.X )"
      },
      "id": {
        "id": "fuse/reactive/atanvector",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/atanvector",
        "href": "fuse/reactive/atanvector"
      },
      "titles": {
        "indexTitle": "AtanVector",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.AtanVector"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/ceil",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/ceil",
        "href": "fuse/reactive/ceil"
      },
      "titles": {
        "indexTitle": "Ceil",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Ceil"
      }
    },
    {
      "comment": {
        "brief": "The trigonometric cosine of the input angle (in radians)",
        "full": "The trigonometric cosine of the input angle (in radians)"
      },
      "id": {
        "id": "fuse/reactive/cos",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/cos",
        "href": "fuse/reactive/cos"
      },
      "titles": {
        "indexTitle": "Cos",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Cos"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/degreestoradians",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/degreestoradians",
        "href": "fuse/reactive/degreestoradians"
      },
      "titles": {
        "indexTitle": "DegreesToRadians",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.DegreesToRadians"
      }
    },
    {
      "comment": {
        "brief": "True if the rounded value is even, false otherwise",
        "full": "True if the rounded value is even, false otherwise"
      },
      "id": {
        "id": "fuse/reactive/even",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/even",
        "href": "fuse/reactive/even"
      },
      "titles": {
        "indexTitle": "Even",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Even"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/exp",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/exp",
        "href": "fuse/reactive/exp"
      },
      "titles": {
        "indexTitle": "Exp",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Exp"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/exp2",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/exp2",
        "href": "fuse/reactive/exp2"
      },
      "titles": {
        "indexTitle": "Exp2",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Exp2"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/floor",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/floor",
        "href": "fuse/reactive/floor"
      },
      "titles": {
        "indexTitle": "Floor",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Floor"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/fract",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/fract",
        "href": "fuse/reactive/fract"
      },
      "titles": {
        "indexTitle": "Fract",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Fract"
      }
    },
    {
      "comment": {
        "brief": "Returns false if the value exists and is non-null, true otherwise.",
        "full": "Returns false if the value exists and is non-null, true otherwise.\n\nThis is the same condition used in the NullCoalesce operator:\n\n    expr ?? res\n\nIs the same as:\n\n    isNull(expr) ? res : expr"
      },
      "id": {
        "id": "fuse/reactive/isnull",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/isnull",
        "href": "fuse/reactive/isnull"
      },
      "titles": {
        "indexTitle": "IsNull",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.IsNull"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/log",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/log",
        "href": "fuse/reactive/log"
      },
      "titles": {
        "indexTitle": "Log",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Log"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/log2",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/log2",
        "href": "fuse/reactive/log2"
      },
      "titles": {
        "indexTitle": "Log2",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Log2"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/logicalnot",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/logicalnot",
        "href": "fuse/reactive/logicalnot"
      },
      "titles": {
        "indexTitle": "LogicalNot",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.LogicalNot"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/negate",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/negate",
        "href": "fuse/reactive/negate"
      },
      "titles": {
        "indexTitle": "Negate",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Negate"
      }
    },
    {
      "comment": {
        "brief": "True if the rounded value is odd, false otherwise",
        "full": "True if the rounded value is odd, false otherwise"
      },
      "id": {
        "id": "fuse/reactive/odd",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/odd",
        "href": "fuse/reactive/odd"
      },
      "titles": {
        "indexTitle": "Odd",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Odd"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/radianstodegrees",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/radianstodegrees",
        "href": "fuse/reactive/radianstodegrees"
      },
      "titles": {
        "indexTitle": "RadiansToDegrees",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.RadiansToDegrees"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/round",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/round",
        "href": "fuse/reactive/round"
      },
      "titles": {
        "indexTitle": "Round",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Round"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/sign",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/sign",
        "href": "fuse/reactive/sign"
      },
      "titles": {
        "indexTitle": "Sign",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Sign"
      }
    },
    {
      "comment": {
        "brief": "The trigonometric sine of the input angle (in radians)",
        "full": "The trigonometric sine of the input angle (in radians)"
      },
      "id": {
        "id": "fuse/reactive/sin",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/sin",
        "href": "fuse/reactive/sin"
      },
      "titles": {
        "indexTitle": "Sin",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Sin"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/sqrt",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/sqrt",
        "href": "fuse/reactive/sqrt"
      },
      "titles": {
        "indexTitle": "Sqrt",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Sqrt"
      }
    },
    {
      "comment": {
        "brief": "The trigonometric tangent of the input angle (in radians)",
        "full": "The trigonometric tangent of the input angle (in radians)"
      },
      "id": {
        "id": "fuse/reactive/tan",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/tan",
        "href": "fuse/reactive/tan"
      },
      "titles": {
        "indexTitle": "Tan",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Tan"
      }
    },
    {
      "comment": {
        "brief": "Forces a conversion to floating point. This supports any 1-4 component float vector.",
        "full": "Forces a conversion to floating point. This supports any 1-4 component float vector."
      },
      "id": {
        "id": "fuse/reactive/tofloat",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/tofloat",
        "href": "fuse/reactive/tofloat"
      },
      "titles": {
        "indexTitle": "ToFloat",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ToFloat"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/tolower",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/tolower",
        "href": "fuse/reactive/tolower"
      },
      "titles": {
        "indexTitle": "ToLower",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ToLower"
      }
    },
    {
      "comment": {
        "brief": "Forces conversion to a Size or Size2 depending on input size.",
        "full": "Forces conversion to a Size or Size2 depending on input size.\n\nThis is useful when using operators that may not be able to infer the desired types. For example:\n\n    <JavaScript>\n        exports.jsArray = [0.2, 0.4]\n    </JavaScript>\n    <Panel Offset=\"size({jsArray}) * 100%\"/>\n\nThis function follows the conversion rules as though the operand was being converted directly to a `Size` or `Size2` property type. If the input is a `float2`, array, or already a Size2, then it will be converted to a `Size2`, otherwise a `Size` type."
      },
      "id": {
        "id": "fuse/reactive/tosize",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/tosize",
        "href": "fuse/reactive/tosize"
      },
      "titles": {
        "indexTitle": "ToSize",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ToSize"
      }
    },
    {
      "comment": {
        "brief": "Forces conversion to a string value.",
        "full": "Forces conversion to a string value."
      },
      "id": {
        "id": "fuse/reactive/tostring",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/tostring",
        "href": "fuse/reactive/tostring"
      },
      "titles": {
        "indexTitle": "ToString",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ToString"
      }
    },
    {
      "id": {
        "id": "fuse/reactive/toupper",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/toupper",
        "href": "fuse/reactive/toupper"
      },
      "titles": {
        "indexTitle": "ToUpper",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.ToUpper"
      }
    },
    {
      "comment": {
        "brief": "Rounds to the next whole integer closer to zero",
        "full": "Rounds to the next whole integer closer to zero"
      },
      "id": {
        "id": "fuse/reactive/trunc",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/trunc",
        "href": "fuse/reactive/trunc"
      },
      "titles": {
        "indexTitle": "Trunc",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.Trunc"
      }
    },
    {
      "comment": {
        "brief": "Common base for floating point operations",
        "full": "Common base for floating point operations\n\nAll the derived expressions support 1-4 component input values and will return a value of the same size.\n\n[subclass Fuse.Reactive.UnaryFloatOperator]"
      },
      "id": {
        "id": "fuse/reactive/unaryfloatoperator",
        "parentId": "fuse/reactive",
        "type": "Class",
        "modifiers": [
          "public",
          "abstract"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/unaryfloatoperator",
        "href": "fuse/reactive/unaryfloatoperator"
      },
      "titles": {
        "indexTitle": "UnaryFloatOperator",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.UnaryFloatOperator"
      }
    },
    {
      "comment": {
        "brief": "Returns the `W` value of a `float4` value.",
        "full": "Returns the `W` value of a `float4` value."
      },
      "id": {
        "id": "fuse/reactive/vectorw",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/vectorw",
        "href": "fuse/reactive/vectorw"
      },
      "titles": {
        "indexTitle": "VectorW",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.VectorW"
      }
    },
    {
      "comment": {
        "brief": "Returns the `Z` value of a `float3` or `float4` value.",
        "full": "Returns the `Z` value of a `float3` or `float4` value."
      },
      "id": {
        "id": "fuse/reactive/vectorz",
        "parentId": "fuse/reactive",
        "type": "UxClass",
        "modifiers": [
          "public",
          "sealed"
        ]
      },
      "uri": {
        "idUri": "fuse/reactive/vectorz",
        "href": "fuse/reactive/vectorz"
      },
      "titles": {
        "indexTitle": "VectorZ",
        "fullyQualifiedIndexTitle": "Fuse.Reactive.VectorZ"
      }
    }
  ]
}