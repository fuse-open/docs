{
  "root": {
    "id": {
      "id": "fuse/gestures/clickertrigger",
      "parentId": "fuse/gestures",
      "type": "Class",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/gestures/clickertrigger",
      "href": "fuse/gestures/clickertrigger"
    },
    "titles": {
      "indexTitle": "ClickerTrigger",
      "fullyQualifiedIndexTitle": "Fuse.Gestures.ClickerTrigger"
    }
  },
  "descendants": [
    {
      "comment": {
        "brief": "Triggers when a pointer is clicked on a @Visual.",
        "full": "Triggers when a pointer is clicked on a @Visual.\n\nThe `Clicked` trigger is quite similar to the @(Tapped) trigger, but these two triggers differ slightly in the interactions they handle.\nWhile a click represents a pointer being pressed and then released on an element, a tap represents a pointer being both pressed and released within a certain period of time.\n\n# Example\nIn this example, a panel will rotate for 0.4 seconds, then rotate back, when clicked:\n\n    <Panel Background=\"#F00\">\n        <Clicked>\n            <Rotate Degrees=\"90\" Duration=\".4\" DurationBack=\".2\" />\n        </Clicked>\n    </Panel>"
      },
      "id": {
        "id": "fuse/gestures/clicked",
        "parentId": "fuse/gestures",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/gestures/clicked",
        "href": "fuse/gestures/clicked"
      },
      "titles": {
        "indexTitle": "Clicked",
        "fullyQualifiedIndexTitle": "Fuse.Gestures.Clicked"
      }
    },
    {
      "comment": {
        "brief": "Triggers when a pointer is double-clicked on a @Visual.",
        "full": "Triggers when a pointer is double-clicked on a @Visual.\n\nThis `DoubleClicked` trigger is very similar to the `DoubleTapped` trigger, but these two triggers differ slightly in the interactions they handle.\nWhile a click represents a pointer being pressed and then released on an element, a tap represents a pointer being both pressed and released within a certain period of time.\n\n## Example\nThe following example rotates a rectangle if it is double clicked.\n\n    <Panel Width=\"100\" Height=\"100\" Color=\"#F00\" >\n        <DoubleClicked>\n            <Rotate Degrees=\"270\" Easing=\"ExponentialOut\" Duration=\".3\"/>\n        </DoubleClicked>\n    </Panel>"
      },
      "id": {
        "id": "fuse/gestures/doubleclicked",
        "parentId": "fuse/gestures",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/gestures/doubleclicked",
        "href": "fuse/gestures/doubleclicked"
      },
      "titles": {
        "indexTitle": "DoubleClicked",
        "fullyQualifiedIndexTitle": "Fuse.Gestures.DoubleClicked"
      }
    },
    {
      "comment": {
        "brief": "Triggers when a pointer is double-tapped on a @Visual.",
        "full": "Triggers when a pointer is double-tapped on a @Visual.\n\nThis `DoubleTapped` trigger is very similar to the `DoubleClicked` trigger, but these two triggers differ slightly in the interactions they handle.\nWhile a click represents a pointer being pressed and then released on an element, a tap represents a pointer being both pressed and released within a certain period of time.\n\n## Example\nThe following example rotates a rectangle if it is double tapped.\n\n    <Panel Width=\"100\" Height=\"100\" Color=\"#F00\" >\n        <DoubleTapped>\n            <Rotate Degrees=\"270\" Easing=\"ExponentialOut\" Duration=\".3\"/>\n        </DoubleTapped>\n    </Panel>"
      },
      "id": {
        "id": "fuse/gestures/doubletapped",
        "parentId": "fuse/gestures",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/gestures/doubletapped",
        "href": "fuse/gestures/doubletapped"
      },
      "titles": {
        "indexTitle": "DoubleTapped",
        "fullyQualifiedIndexTitle": "Fuse.Gestures.DoubleTapped"
      }
    },
    {
      "comment": {
        "brief": "Triggers when a pointer is held down for a period of time.",
        "full": "Triggers when a pointer is held down for a period of time.\n\nBeing @LongPressed does not prevent other gestures, like @Clicked, from also triggering on the visual."
      },
      "id": {
        "id": "fuse/gestures/longpressed",
        "parentId": "fuse/gestures",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/gestures/longpressed",
        "href": "fuse/gestures/longpressed"
      },
      "titles": {
        "indexTitle": "LongPressed",
        "fullyQualifiedIndexTitle": "Fuse.Gestures.LongPressed"
      }
    },
    {
      "comment": {
        "brief": "Triggers when a pointer is tapped on a @Visual.",
        "full": "Triggers when a pointer is tapped on a @Visual.\n\nThe `Tapped` trigger is quite similar to the @(Clicked) trigger, but these two triggers differ slightly in the interactions they handle.\nWhile a click represents a pointer being pressed and then released on an element, a tap represents a pointer being both pressed and released within a certain period of time.\n\n# Example\nIn this example, a panel will rotate for 0.4 seconds, then rotate back, when tapped:\n\n    <Panel Background=\"#F00\">\n        <Tapped>\n            <Rotate Degrees=\"90\" Duration=\".4\" DurationBack=\".2\" />\n        </Tapped>\n    </Panel>"
      },
      "id": {
        "id": "fuse/gestures/tapped",
        "parentId": "fuse/gestures",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/gestures/tapped",
        "href": "fuse/gestures/tapped"
      },
      "titles": {
        "indexTitle": "Tapped",
        "fullyQualifiedIndexTitle": "Fuse.Gestures.Tapped"
      }
    }
  ]
}