{
  "entity": {
    "base": {
      "id": {
        "id": "fuse/controls/buttonbase",
        "parentId": "fuse/controls",
        "type": "UxClass",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/controls/buttonbase",
        "href": "fuse/controls/buttonbase"
      },
      "titles": {
        "indexTitle": "ButtonBase",
        "fullyQualifiedIndexTitle": "Fuse.Controls.ButtonBase"
      }
    },
    "location": {
      "namespaceTitle": "Basic",
      "namespaceUri": "basic",
      "packageName": "Fuse.BasicTheme",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "uno/ux/propertyobject",
            "title": "Uno.UX.PropertyObject",
            "children": [
              {
                "uri": "fuse/node",
                "title": "Fuse.Node",
                "children": [
                  {
                    "uri": "fuse/visual",
                    "title": "Fuse.Visual",
                    "children": [
                      {
                        "uri": "fuse/elements/element",
                        "title": "Fuse.Elements.Element",
                        "children": [
                          {
                            "uri": "fuse/controls/control",
                            "title": "Fuse.Controls.Control",
                            "children": [
                              {
                                "uri": "fuse/controls/layoutcontrol",
                                "title": "Fuse.Controls.LayoutControl",
                                "children": [
                                  {
                                    "uri": "fuse/controls/panel",
                                    "title": "Fuse.Controls.Panel",
                                    "children": [
                                      {
                                        "uri": "fuse/controls/buttonbase",
                                        "title": "Fuse.Controls.ButtonBase",
                                        "children": [
                                          {
                                            "uri": "basic/button",
                                            "title": "Basic.Button",
                                            "children": [],
                                            "isCurrent": true
                                          }
                                        ],
                                        "isAncestor": true
                                      }
                                    ],
                                    "isAncestor": true
                                  }
                                ],
                                "isAncestor": true
                              }
                            ],
                            "isAncestor": true
                          }
                        ],
                        "isAncestor": true
                      }
                    ],
                    "isAncestor": true
                  }
                ],
                "isAncestor": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "implementedInterfaces": [
      {
        "comment": {
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        },
        "id": {
          "id": "fuse/drawing/isurfacedrawable",
          "parentId": "fuse/drawing",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/drawing/isurfacedrawable",
          "href": "fuse/drawing/isurfacedrawable"
        },
        "titles": {
          "indexTitle": "ISurfaceDrawable",
          "fullyQualifiedIndexTitle": "Fuse.Drawing.ISurfaceDrawable"
        }
      },
      {
        "id": {
          "id": "fuse/triggers/actions/ishow",
          "parentId": "fuse/triggers/actions",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/triggers/actions/ishow",
          "href": "fuse/triggers/actions/ishow"
        },
        "titles": {
          "indexTitle": "IShow",
          "fullyQualifiedIndexTitle": "Fuse.Triggers.Actions.IShow"
        }
      },
      {
        "id": {
          "id": "fuse/triggers/actions/ihide",
          "parentId": "fuse/triggers/actions",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/triggers/actions/ihide",
          "href": "fuse/triggers/actions/ihide"
        },
        "titles": {
          "indexTitle": "IHide",
          "fullyQualifiedIndexTitle": "Fuse.Triggers.Actions.IHide"
        }
      },
      {
        "id": {
          "id": "fuse/triggers/actions/icollapse",
          "parentId": "fuse/triggers/actions",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/triggers/actions/icollapse",
          "href": "fuse/triggers/actions/icollapse"
        },
        "titles": {
          "indexTitle": "ICollapse",
          "fullyQualifiedIndexTitle": "Fuse.Triggers.Actions.ICollapse"
        }
      },
      {
        "id": {
          "id": "fuse/iactualplacement",
          "parentId": "fuse",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/iactualplacement",
          "href": "fuse/iactualplacement"
        },
        "titles": {
          "indexTitle": "IActualPlacement",
          "fullyQualifiedIndexTitle": "Fuse.IActualPlacement"
        }
      },
      {
        "id": {
          "id": "fuse/animations/iresize",
          "parentId": "fuse/animations",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/animations/iresize",
          "href": "fuse/animations/iresize"
        },
        "titles": {
          "indexTitle": "IResize",
          "fullyQualifiedIndexTitle": "Fuse.Animations.IResize"
        }
      },
      {
        "id": {
          "id": "uno/collections/ilist_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ilist_1",
          "href": "uno/collections/ilist_1"
        },
        "titles": {
          "indexTitle": "IList<Node>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IList<Fuse.Node>"
        }
      },
      {
        "id": {
          "id": "uno/ux/ipropertylistener",
          "parentId": "uno/ux",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/ux/ipropertylistener",
          "href": "uno/ux/ipropertylistener"
        },
        "titles": {
          "indexTitle": "IPropertyListener",
          "fullyQualifiedIndexTitle": "Uno.UX.IPropertyListener"
        }
      },
      {
        "id": {
          "id": "fuse/itemplatesource",
          "parentId": "fuse",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/itemplatesource",
          "href": "fuse/itemplatesource"
        },
        "titles": {
          "indexTitle": "ITemplateSource",
          "fullyQualifiedIndexTitle": "Fuse.ITemplateSource"
        }
      },
      {
        "id": {
          "id": "uno/collections/ienumerable_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ienumerable_1",
          "href": "uno/collections/ienumerable_1"
        },
        "titles": {
          "indexTitle": "IEnumerable<Visual>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IEnumerable<Fuse.Visual>"
        }
      },
      {
        "id": {
          "id": "uno/collections/icollection_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/icollection_1",
          "href": "uno/collections/icollection_1"
        },
        "titles": {
          "indexTitle": "ICollection<Node>",
          "fullyQualifiedIndexTitle": "Uno.Collections.ICollection<Fuse.Node>"
        }
      },
      {
        "id": {
          "id": "uno/collections/ienumerable_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ienumerable_1",
          "href": "uno/collections/ienumerable_1"
        },
        "titles": {
          "indexTitle": "IEnumerable<Node>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IEnumerable<Fuse.Node>"
        }
      },
      {
        "id": {
          "id": "uno/collections/ilist_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ilist_1",
          "href": "uno/collections/ilist_1"
        },
        "titles": {
          "indexTitle": "IList<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IList<Fuse.Binding>"
        }
      },
      {
        "comment": {
          "brief": "Interface for objects that can have a script engine representation",
          "full": "Interface for objects that can have a script engine representation"
        },
        "id": {
          "id": "fuse/scripting/iscriptobject",
          "parentId": "fuse/scripting",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/scripting/iscriptobject",
          "href": "fuse/scripting/iscriptobject"
        },
        "titles": {
          "indexTitle": "IScriptObject",
          "fullyQualifiedIndexTitle": "Fuse.Scripting.IScriptObject"
        }
      },
      {
        "id": {
          "id": "fuse/iproperties",
          "parentId": "fuse",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/iproperties",
          "href": "fuse/iproperties"
        },
        "titles": {
          "indexTitle": "IProperties",
          "fullyQualifiedIndexTitle": "Fuse.IProperties"
        }
      },
      {
        "id": {
          "id": "uno/collections/icollection_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/icollection_1",
          "href": "uno/collections/icollection_1"
        },
        "titles": {
          "indexTitle": "ICollection<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.ICollection<Fuse.Binding>"
        }
      },
      {
        "id": {
          "id": "uno/collections/ienumerable_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ienumerable_1",
          "href": "uno/collections/ienumerable_1"
        },
        "titles": {
          "indexTitle": "IEnumerable<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IEnumerable<Fuse.Binding>"
        }
      }
    ],
    "attributes": [
      {
        "id": {
          "id": "uno/compiler/uxgeneratedattribute",
          "parentId": "uno/compiler",
          "type": "Class",
          "modifiers": [
            "public",
            "sealed"
          ]
        },
        "uri": {
          "idUri": "uno/compiler/uxgeneratedattribute",
          "href": "uno/compiler/uxgeneratedattribute"
        },
        "titles": {
          "indexTitle": "UxGeneratedAttribute",
          "fullyQualifiedIndexTitle": "Uno.Compiler.UxGeneratedAttribute"
        }
      }
    ],
    "id": {
      "id": "basic/button",
      "parentId": "basic",
      "type": "Class",
      "modifiers": [
        "public",
        "partial"
      ]
    },
    "uri": {
      "idUri": "basic/button",
      "href": "basic/button"
    },
    "titles": {
      "pageTitle": "Button Class",
      "navigationTitle": "Button Class",
      "fullTitle": "Basic.Button",
      "indexTitle": "Button",
      "fullyQualifiedIndexTitle": "Basic.Button"
    },
    "syntax": {
      "uno": "[Uno.Compiler.UxGenerated]\r\npublic partial class Button : Fuse.Controls.ButtonBase {}"
    }
  },
  "tableOfContents": {
    "uxProperties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/buttonbase",
            "parentId": "fuse/controls",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/buttonbase",
            "href": "fuse/controls/buttonbase"
          },
          "titles": {
            "indexTitle": "ButtonBase",
            "fullyQualifiedIndexTitle": "Fuse.Controls.ButtonBase"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "basic/button/text",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/text",
              "href": "fuse/controls/buttonbase/text",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Text",
              "fullyQualifiedIndexTitle": "Fuse.Controls.ButtonBase.Text"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/panel",
            "parentId": "fuse/controls",
            "type": "UxClass",
            "modifiers": [
              "public",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/panel",
            "href": "fuse/controls/panel"
          },
          "titles": {
            "indexTitle": "Panel",
            "fullyQualifiedIndexTitle": "Fuse.Controls.Panel"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The background color of the panel.\nThis property is a shortcut for setting the `Background` property to a `SolidColor` brush. Supports being set using a `float4` notation, or hexadecimal values(f.ex `#FF00AA`)",
              "full": "The background color of the panel.\nThis property is a shortcut for setting the `Background` property to a `SolidColor` brush. Supports being set using a `float4` notation, or hexadecimal values(f.ex `#FF00AA`)\n\nFor more information on what notations Color supports, check out [this subpage](articles:ux-markup/literals#colors)."
            },
            "returns": {
              "href": "uno/float4",
              "title": "float4",
              "fullyQualifiedTitle": "float4"
            },
            "id": {
              "id": "basic/button/color",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/color",
              "href": "fuse/controls/panel/color",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Color",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Panel.Color"
            }
          },
          {
            "comment": {
              "brief": "Defers the freezing of the panel until the children are no longer busy.",
              "full": "Defers the freezing of the panel until the children are no longer busy.\n\nWhen `None` (the default), the freezing will happen the same frame `IsFrozen` is set to `true`. Otherwise the panel will wait for all children to clear the busy status of this type before doing the freezing."
            },
            "returns": {
              "href": "fuse/triggers/busytaskactivity",
              "title": "BusyTaskActivity",
              "fullyQualifiedTitle": "Fuse.Triggers.BusyTaskActivity"
            },
            "id": {
              "id": "basic/button/deferfreeze",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/deferfreeze",
              "href": "fuse/controls/panel/deferfreeze",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DeferFreeze",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Panel.DeferFreeze"
            }
          },
          {
            "comment": {
              "brief": "When `true` the panel is in a frozen state. This means:\n    - layout of the children is blocked\n    - child invalidation does not invalidate this panel\n    - the visual drawing is captured once and used for all future drawing",
              "full": "When `true` the panel is in a frozen state. This means:\n    - layout of the children is blocked\n    - child invalidation does not invalidate this panel\n    - the visual drawing is captured once and used for all future drawing\n\n`IsFrozen` allows improving performance in some use-cases, such as Navigation, where the children may not be completely stable. This can result from such things as data bindings resolving, deferred items resolving, and images loading. Note that it will also block all intentional animation as well until unfrozen.\n\nWarning: Trigger timing is not blocked at the moment, and animations will jump over the lost time when unfrozen again."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isfrozen",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isfrozen",
              "href": "fuse/controls/panel/isfrozen",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsFrozen",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Panel.IsFrozen"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/layoutcontrol",
            "parentId": "fuse/controls",
            "type": "UxClass",
            "modifiers": [
              "public",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/layoutcontrol",
            "href": "fuse/controls/layoutcontrol"
          },
          "titles": {
            "indexTitle": "LayoutControl",
            "fullyQualifiedIndexTitle": "Fuse.Controls.LayoutControl"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The layout that will be applied to the children.",
              "full": "The layout that will be applied to the children.\n\nThis property is rarely set directly. Instead, you use a subclass of @LayoutControl\nthat already sets this property, such as a @Panel class.\n\n## Available Panel classes\n\n[subclass Fuse.Controls.Panel]\n\n## Available Layout classes\n\n[subclass Fuse.Layouts.Layout]"
            },
            "returns": {
              "href": "fuse/layouts/layout",
              "title": "Layout",
              "fullyQualifiedTitle": "Fuse.Layouts.Layout"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "basic/button/layout",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/layout",
              "href": "fuse/controls/layoutcontrol/layout",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Layout",
              "fullyQualifiedIndexTitle": "Fuse.Controls.LayoutControl.Layout"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/control",
            "parentId": "fuse/controls",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/control",
            "href": "fuse/controls/control"
          },
          "titles": {
            "indexTitle": "Control",
            "fullyQualifiedIndexTitle": "Fuse.Controls.Control"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The brush that will used to paint the background of this control.",
              "full": "The brush that will used to paint the background of this control.\n\nTo set a solid color as background, consider using the @Color property instead.\n\nThis property is automatically set if you put a brush inside the control, e.g.\n\n<Panel>\n    <LinearGradient>\n        <GradientStop Offset=\"0\" Color=\"Black\" />\n        <GradientStop Offset=\"0\" Color=\"Black\" />\n    </LinearGradient>\n</Panel>"
            },
            "returns": {
              "href": "fuse/drawing/brush",
              "title": "Brush",
              "fullyQualifiedTitle": "Fuse.Drawing.Brush"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "basic/button/background",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/background",
              "href": "fuse/controls/control/background",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Background",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.Background"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/elements/element",
            "parentId": "fuse/elements",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/elements/element",
            "href": "fuse/elements/element"
          },
          "titles": {
            "indexTitle": "Element",
            "fullyQualifiedIndexTitle": "Fuse.Elements.Element"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The @Alignment of the `Element`.",
              "full": "The @Alignment of the `Element`.\n\nUsed to position an `Element` within its available space if the `Element` doesn't simply fill that space.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "fuse/elements/alignment",
              "title": "Alignment",
              "fullyQualifiedTitle": "Fuse.Elements.Alignment"
            },
            "id": {
              "id": "basic/button/alignment",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/alignment",
              "href": "fuse/elements/element/alignment",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Alignment",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Alignment"
            }
          },
          {
            "comment": {
              "brief": "A point within the element to treat as its \"epicenter\".",
              "full": "A point within the element to treat as its \"epicenter\".\n\nThe `Anchor` partially specifies how an element is aligned within it's parent. Properties like `Alignment`\nand `X`, `Y` define a location in the parent to place the child, and `Anchor` specifies what child point is\naligned there.\n\nFor example, `<Panel X=\"50\" Y=\"100\" Anchor=\"25%,25%\">` positions the middle of the top-left quarter (25%,25%) of the panel at point 50,100 in the parent.\n\n`Alignment` implies a coordinate and anchor point, for example `<Panel Alignment=\"BottomRight\">` is that same as `<Panel X=\"100%\" Y=\"100%\" Anchor=\"100%,100%\">`. You can use `alignment` and override the anchor, for examlpe `<Panel Alignment=\"BottomRight\" Anchor=\"50%,50%\">` centers the panel at the bottom right point of the parent."
            },
            "returns": {
              "href": "uno/ux/size2",
              "title": "Size2",
              "fullyQualifiedTitle": "Uno.UX.Size2"
            },
            "id": {
              "id": "basic/button/anchor",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/anchor",
              "href": "fuse/elements/element/anchor",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Anchor",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Anchor"
            }
          },
          {
            "comment": {
              "brief": "The aspect ratio that an element must fulfill in layout.",
              "full": "The aspect ratio that an element must fulfill in layout.\n\nThis is the X:Y ratio. `2` is twice as wide as tall and `0.5` is half as wide as tall."
            },
            "returns": {
              "href": "uno/float",
              "title": "float",
              "fullyQualifiedTitle": "float"
            },
            "id": {
              "id": "basic/button/aspect",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/aspect",
              "href": "fuse/elements/element/aspect",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Aspect",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Aspect"
            }
          },
          {
            "comment": {
              "brief": "Determines how the aspect ratio is maintained in a situation when it violates the min or max sizing constraints.",
              "full": "Determines how the aspect ratio is maintained in a situation when it violates the min or max sizing constraints."
            },
            "returns": {
              "href": "fuse/elements/aspectconstraint",
              "title": "AspectConstraint",
              "fullyQualifiedTitle": "Fuse.Elements.AspectConstraint"
            },
            "id": {
              "id": "basic/button/aspectconstraint",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/aspectconstraint",
              "href": "fuse/elements/element/aspectconstraint",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AspectConstraint",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.AspectConstraint"
            }
          },
          {
            "comment": {
              "brief": "The manner in which the size and position of the element is calculated.",
              "full": "The manner in which the size and position of the element is calculated."
            },
            "returns": {
              "href": "fuse/elements/element/boxsizingmode",
              "title": "BoxSizingMode",
              "fullyQualifiedTitle": "Fuse.Elements.BoxSizingMode"
            },
            "id": {
              "id": "basic/button/boxsizing",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/boxsizing",
              "href": "fuse/elements/element/boxsizing",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BoxSizing",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.BoxSizing"
            }
          },
          {
            "comment": {
              "brief": "How the element's visuals are cached while drawing.",
              "full": "How the element's visuals are cached while drawing.\n\nYou generally don't need to modify this as the default uses a heuristical approach to determine what it should and should not cache. Modifying this incorrectly could result in worse performance."
            },
            "returns": {
              "href": "fuse/elements/cachingmode",
              "title": "CachingMode",
              "fullyQualifiedTitle": "Fuse.Elements.CachingMode"
            },
            "id": {
              "id": "basic/button/cachingmode",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/cachingmode",
              "href": "fuse/elements/element/cachingmode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CachingMode",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.CachingMode"
            }
          },
          {
            "comment": {
              "brief": "Clips the child elements to the bounds of this element visually.",
              "full": "Clips the child elements to the bounds of this element visually."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/cliptobounds",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/cliptobounds",
              "href": "fuse/elements/element/cliptobounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ClipToBounds",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ClipToBounds"
            }
          },
          {
            "returns": {
              "href": "uno/ux/size2",
              "title": "Size2",
              "fullyQualifiedTitle": "Uno.UX.Size2"
            },
            "id": {
              "id": "basic/button/explicittransformorigin",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/explicittransformorigin",
              "href": "fuse/elements/element/explicittransformorigin",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ExplicitTransformOrigin",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ExplicitTransformOrigin"
            }
          },
          {
            "comment": {
              "brief": "The height of the `Element`.",
              "full": "The height of the `Element`.\n\nUsed to ensure an element will have a specific height on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/height",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/height",
              "href": "fuse/elements/element/height",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Height",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Height"
            }
          },
          {
            "comment": {
              "brief": "Specifies how hit tests should be performed on this element.",
              "full": "Specifies how hit tests should be performed on this element."
            },
            "returns": {
              "href": "fuse/elements/hittestmode",
              "title": "HitTestMode",
              "fullyQualifiedTitle": "Fuse.Elements.HitTestMode"
            },
            "id": {
              "id": "basic/button/hittestmode",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittestmode",
              "href": "fuse/elements/element/hittestmode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTestMode",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.HitTestMode"
            }
          },
          {
            "comment": {
              "brief": "The height limit for an element using `BoxSizing=\"Limit\"`.",
              "full": "The height limit for an element using `BoxSizing=\"Limit\"`."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/limitheight",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/limitheight",
              "href": "fuse/elements/element/limitheight",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LimitHeight",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.LimitHeight"
            }
          },
          {
            "comment": {
              "brief": "The width limit for an element using `BoxSizing=\"Limit\"`.",
              "full": "The width limit for an element using `BoxSizing=\"Limit\"`."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/limitwidth",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/limitwidth",
              "href": "fuse/elements/element/limitwidth",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LimitWidth",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.LimitWidth"
            }
          },
          {
            "comment": {
              "brief": "The margin of the `Element` in points.",
              "full": "The margin of the `Element` in points.\n\n`Margin` controls the distance from the edges of an element to the corresponding edges of its container.\n\n`Margin` is made up of 4 values; one for each edge of the element. In order, they are left, top, right, and bottom. In UX, they are specified as a comma-separated list:\n\n    <Panel Margin=\"10,20,30,40\" />\n\nThey can also be specified in a shortened form:\n\n    <Panel Margin=\"10\" /> <!-- is expanded to \"10,10,10,10\" -->\n    <Panel Margin=\"10,20\" /> <!-- is expanded to \"10,20,10,20\" -->\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/float4",
              "title": "float4",
              "fullyQualifiedTitle": "float4"
            },
            "id": {
              "id": "basic/button/margin",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/margin",
              "href": "fuse/elements/element/margin",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Margin",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Margin"
            }
          },
          {
            "comment": {
              "brief": "The maximum height of the `Element`.",
              "full": "The maximum height of the `Element`.\n\nUsed to ensure an element will have no greater than the given height on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/maxheight",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/maxheight",
              "href": "fuse/elements/element/maxheight",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "MaxHeight",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.MaxHeight"
            }
          },
          {
            "comment": {
              "brief": "The maximum width of the `Element`.",
              "full": "The maximum width of the `Element`.\n\nUsed to ensure an element will have no greater than the given width on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/maxwidth",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/maxwidth",
              "href": "fuse/elements/element/maxwidth",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "MaxWidth",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.MaxWidth"
            }
          },
          {
            "comment": {
              "brief": "The minimum height of the `Element`.",
              "full": "The minimum height of the `Element`.\n\nUsed to ensure an element will have at least the given height on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/minheight",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/minheight",
              "href": "fuse/elements/element/minheight",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "MinHeight",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.MinHeight"
            }
          },
          {
            "comment": {
              "brief": "The minimum width of the `Element`.",
              "full": "The minimum width of the `Element`.\n\nUsed to ensure an element will have at least the given width on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/minwidth",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/minwidth",
              "href": "fuse/elements/element/minwidth",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "MinWidth",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.MinWidth"
            }
          },
          {
            "comment": {
              "brief": "Offets the position of the element after all other layout has been applied.",
              "full": "Offets the position of the element after all other layout has been applied.\n\nFor example, `<StackPanel Alignment=\"TopCenter\" Offset=\"0,10\">` would position the `StackPanel` 10 points down from the top its parent, after all other layout has been applied (@Margin, @Padding, etc)."
            },
            "returns": {
              "href": "uno/ux/size2",
              "title": "Size2",
              "fullyQualifiedTitle": "Uno.UX.Size2"
            },
            "id": {
              "id": "basic/button/offset",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/offset",
              "href": "fuse/elements/element/offset",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Offset",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Offset"
            }
          },
          {
            "comment": {
              "brief": "The opacity of the element.",
              "full": "The opacity of the element.\n\nWhen `0`, the element will be completely transparent, yet will still be considered for hit testing (it and it's children are still actually part of the UI). To make an element invisble without hit testing set `Visibility=\"Hidden\"`"
            },
            "returns": {
              "href": "uno/float",
              "title": "float",
              "fullyQualifiedTitle": "float"
            },
            "id": {
              "id": "basic/button/opacity",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/opacity",
              "href": "fuse/elements/element/opacity",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Opacity",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Opacity"
            }
          },
          {
            "comment": {
              "brief": "The padding of the `Element` in points.",
              "full": "The padding of the `Element` in points.\n\n`Padding` controls the distance from the edges of an element to the edges of the elements inside it. It's very similar to @Margin, except that it works \"inwards\".\n\n`Padding` is made up of 4 values; one for each edge of the element. In order, they are left, top, right, and bottom. In UX, they are specified as a comma-separated list:\n\n    <Panel Padding=\"10,20,30,40\" />\n\nThey can also be specified in a shortened form:\n\n    <Panel Padding=\"10\" /> <!-- is expanded to \"10,10,10,10\" -->\n    <Panel Padding=\"10,20\" /> <!-- is expanded to \"10,20,10,20\" -->\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/float4",
              "title": "float4",
              "fullyQualifiedTitle": "float4"
            },
            "id": {
              "id": "basic/button/padding",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/padding",
              "href": "fuse/elements/element/padding",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Padding",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Padding"
            }
          },
          {
            "comment": {
              "brief": "The combined `X` and `Y` position of the element.",
              "full": "The combined `X` and `Y` position of the element.\n\nIf using this property avoid using `X` or `Y` properties, as this is an combined alias for those properties. Choose the property that works easier for your desired bindined, expressions and animations."
            },
            "returns": {
              "href": "uno/ux/size2",
              "title": "Size2",
              "fullyQualifiedTitle": "Uno.UX.Size2"
            },
            "id": {
              "id": "basic/button/position",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/position",
              "href": "fuse/elements/element/position",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Position",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Position"
            }
          },
          {
            "comment": {
              "brief": "The combined `Width` and `Height` of the element.",
              "full": "The combined `Width` and `Height` of the element.\n\nIf using this property avoid using `Width` or `Height` as this is a combined alias for those properties. Choose the property that works easier for your desired binding, expressions and animations.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size2",
              "title": "Size2",
              "fullyQualifiedTitle": "Uno.UX.Size2"
            },
            "id": {
              "id": "basic/button/size",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/size",
              "href": "fuse/elements/element/size",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Size",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Size"
            }
          },
          {
            "comment": {
              "brief": "Specifies the origin of transformation used by transformation behaviors and animators such as @Move, @Scale, @Rotation, @Scaling, etc.",
              "full": "Specifies the origin of transformation used by transformation behaviors and animators such as @Move, @Scale, @Rotation, @Scaling, etc.\n\nThe possible values are:\n\n * `Center` (default) Transforms originate at the center of the element.\n * `TopLeft` Transforms originate at the top left corner of the element.\n * `Anchor` Transforms originate around the point specified by the @Element.Anchor property.\n * `HorizontalBoxCenter` Simulates the effect of the element being the front-facing side of a cube in 3D space, using the width of the element for determining the depth of the cube. Without the element being in a @Viewport this will have no illusion of depth, effectively rendering it useless.\n * `VerticalBoxCenter` Like `HorizontalBoxCenter` except it uses the height of the element for determining depth."
            },
            "returns": {
              "href": "fuse/elements/itransformorigin",
              "title": "ITransformOrigin",
              "fullyQualifiedTitle": "Fuse.Elements.ITransformOrigin"
            },
            "id": {
              "id": "basic/button/transformorigin",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/transformorigin",
              "href": "fuse/elements/element/transformorigin",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TransformOrigin",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.TransformOrigin"
            }
          },
          {
            "comment": {
              "brief": "The @Visibility of the `Element`.",
              "full": "The @Visibility of the `Element`.\n\nUsed to determine if the `Element` is displayed on screen, and can also affect its layout.\n\nPossible values:\n- `Visible` - The element is displayed on-screen as usual.\n- `Hidden` - The element will not be displayed on-screen, but will still participate in and affect layout normally.\n- `Collapsed` - The element will not be displayed on-screen or participate in layout.\n\n## Example\n\nIn the following example, only two of the rectangles are visible. The second Rectangle is collapsed,\nso it's not taking up any space at all. The third Rectangle is hidden, so it takes up space, but is not\nvisible. The last Rectangle has no Visibility set, so it defaults to being visible as usual.\n\n    <StackPanel>\n        <Rectangle Visibility=\"Visible\" Color=\"Red\" Height=\"50\"/>\n        <Rectangle Visibility=\"Collapsed\" Color=\"Green\" Height=\"50\"/>\n        <Rectangle Visibility=\"Hidden\" Color=\"Blue\" Height=\"50\"/>\n        <Rectangle Color=\"Yellow\" Height=\"50\"/>\n    </StackPanel>"
            },
            "returns": {
              "href": "fuse/elements/visibility",
              "title": "Visibility",
              "fullyQualifiedTitle": "Fuse.Elements.Visibility"
            },
            "id": {
              "id": "basic/button/visibility",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/visibility",
              "href": "fuse/elements/element/visibility",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Visibility",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Visibility"
            }
          },
          {
            "comment": {
              "brief": "The width of the `Element`.",
              "full": "The width of the `Element`.\n\nUsed to ensure an element will have a specific width on-screen.\n\nSee @Layout for more details."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/width",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/width",
              "href": "fuse/elements/element/width",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Width",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Width"
            }
          },
          {
            "comment": {
              "brief": "The `X` location of the `Element`.",
              "full": "The `X` location of the `Element`.\n\nThis implies `Alignment=TopLeft`, thus by default measures from the top left corner of the parent."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/x",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/x",
              "href": "fuse/elements/element/x",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "X",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.X"
            }
          },
          {
            "comment": {
              "brief": "The `Y` location of the `Element`.",
              "full": "The `Y` location of the `Element`.\n\nThis implies `Alignment=TopLeft`, thus by default measures from the top left corner of the parent."
            },
            "returns": {
              "href": "uno/ux/size",
              "title": "Size",
              "fullyQualifiedTitle": "Uno.UX.Size"
            },
            "id": {
              "id": "basic/button/y",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/y",
              "href": "fuse/elements/element/y",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Y",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Y"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/visual",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/visual",
            "href": "fuse/visual"
          },
          "titles": {
            "indexTitle": "Visual",
            "fullyQualifiedIndexTitle": "Fuse.Visual"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The children of the visual.\nAll nodes placed inside the visual in UX markup are assigned to this list.\nThe order of @Visuals this list determines the order of layout. The Z-order\nof the children is by default equal to this order, but can be manipulated\nseparately using methods like @BringToFront and @SendToBack.",
              "full": "The children of the visual.\nAll nodes placed inside the visual in UX markup are assigned to this list.\nThe order of @Visuals this list determines the order of layout. The Z-order\nof the children is by default equal to this order, but can be manipulated\nseparately using methods like @BringToFront and @SendToBack."
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Node>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Node>"
            },
            "flags": {
              "uxPrimary": true
            },
            "id": {
              "id": "basic/button/children",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/children",
              "href": "fuse/visual/children",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Children",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Children"
            }
          },
          {
            "comment": {
              "brief": "Whether this node is currently interactable.\nDisabled visuals do not receive input focus. However, they can still\nbe visible and block hit test for underlaying objects.",
              "full": "Whether this node is currently interactable.\nDisabled visuals do not receive input focus. However, they can still\nbe visible and block hit test for underlaying objects.\n\nYou can use the @WhileEnabled and @WhileDisabled triggers to specify different styling for\na visual while enabled/disabled."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isenabled",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isenabled",
              "href": "fuse/visual/isenabled",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsEnabled",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsEnabled"
            }
          },
          {
            "comment": {
              "brief": "The layer this visual belongs to in the @Parent container.",
              "full": "The layer this visual belongs to in the @Parent container."
            },
            "returns": {
              "href": "fuse/layer",
              "title": "Layer",
              "fullyQualifiedTitle": "Fuse.Layer"
            },
            "id": {
              "id": "basic/button/layer",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/layer",
              "href": "fuse/visual/layer",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Layer",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Layer"
            }
          },
          {
            "comment": {
              "brief": "Describes how this visual participates in layout.",
              "full": "Describes how this visual participates in layout."
            },
            "returns": {
              "href": "fuse/layoutrole",
              "title": "LayoutRole",
              "fullyQualifiedTitle": "Fuse.LayoutRole"
            },
            "id": {
              "id": "basic/button/layoutrole",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/layoutrole",
              "href": "fuse/visual/layoutrole",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LayoutRole",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LayoutRole"
            }
          },
          {
            "comment": {
              "brief": "The parameter data for this visual, encoded as JSON, provided by a router if this visual represents a navigation page.",
              "full": "The parameter data for this visual, encoded as JSON, provided by a router if this visual represents a navigation page.\n\nWhen this value is set, the parameter can be accessed in JavaScript through the `.Parameter` property on this object.\n\nExample:\n\n    <JavaScript>\n        router.goto(\"profile\", { id: 3 });\n    </JavaScript>\n    ...\n    <Page ux:Name=\"profile\">\n        <JavaScript>\n            profile.Parameter.onValueChanged(module, function(param) {\n                // param holds the deserialized object { id: 3 }\n            });\n        </JavaScript>\n    </Page>"
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "basic/button/parameter",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/parameter",
              "href": "fuse/visual/parameter",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Parameter",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Parameter"
            }
          },
          {
            "comment": {
              "brief": "The list of resources defined at this node.",
              "full": "The list of resources defined at this node."
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Resource>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Uno.UX.Resource>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "basic/button/resources",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/resources",
              "href": "fuse/visual/resources",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resources",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Resources"
            }
          },
          {
            "comment": {
              "brief": "Whether to snap the result of layout of this visual to physical device pixels.",
              "full": "Whether to snap the result of layout of this visual to physical device pixels."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/snaptopixels",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/snaptopixels",
              "href": "fuse/visual/snaptopixels",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SnapToPixels",
              "fullyQualifiedIndexTitle": "Fuse.Visual.SnapToPixels"
            }
          },
          {
            "comment": {
              "brief": "List of templates that will be used to populate this Visual.",
              "full": "List of templates that will be used to populate this Visual.\n\nThis list allows you to place nodes with a `ux:Template=\"key\"` attribute inside a @Visual in UX Markup,\nwhere `key` is the match key to be used when selecting a template.\n\nThis list has many use cases. For example, when populating a view with data, the correct template can be\npicked based on a field    in the data source:\n\n    <StackPanel Items=\"{items}\" MatchKey=\"type\">\n        <SmallProfile ux:Template=\"small_profile\" />\n        <BigProfile ux:Template=\"big_profile\" />\n    </StackPanel>\n\nThe name of the template can also have a special significance in certain contexts, for example when dealing\nwith native control wrappers:\n\n    <Control ux:Class=\"MySlider\">\n        <MyWrappers.iOS.Slider ux:Template=\"iOSAppearance\" />\n        <MyWrappers.Android.Slider ux:Template=\"AndroidAppearance\" />\n        <MyWrappers.Graphics.Slider ux:Template=\"GraphicsAppearance\" />\n    </Control>"
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Template>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Uno.UX.Template>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "basic/button/templates",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/templates",
              "href": "fuse/visual/templates",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Templates",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Templates"
            }
          },
          {
            "comment": {
              "brief": "Specifies a Z-Offset, visuals with higher values are in front of other visuals.",
              "full": "Specifies a Z-Offset, visuals with higher values are in front of other visuals.\n\nThe default value is `0`. Visuals with the same ZOffset are sorted by their natural\nZ-Order according to their position in the `Children`-collection of the parent.\n`BringToFront` and `SendToBack` can be used to modify the natural Z-Order.\n\n`Layer` takes priority. Visuals in different layers are sorted separately."
            },
            "returns": {
              "href": "uno/float",
              "title": "float",
              "fullyQualifiedTitle": "float"
            },
            "id": {
              "id": "basic/button/zoffset",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/zoffset",
              "href": "fuse/visual/zoffset",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ZOffset",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ZOffset"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The list of bindings belonging to this node.",
              "full": "The list of bindings belonging to this node."
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Binding>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Binding>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "basic/button/bindings",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/bindings",
              "href": "fuse/node/bindings",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Bindings",
              "fullyQualifiedIndexTitle": "Fuse.Node.Bindings"
            }
          },
          {
            "comment": {
              "brief": "Run-time name of the node.\nThis property is automatically set using the ux:Name attribute.",
              "full": "Run-time name of the node.\nThis property is automatically set using the ux:Name attribute."
            },
            "returns": {
              "href": "uno/ux/selector",
              "title": "Selector",
              "fullyQualifiedTitle": "Uno.UX.Selector"
            },
            "id": {
              "id": "basic/button/name",
              "parentId": "basic/button",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/name",
              "href": "fuse/node/name",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Name",
              "fullyQualifiedIndexTitle": "Fuse.Node.Name"
            }
          }
        ]
      }
    ],
    "uxEvents": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/elements/element",
            "parentId": "fuse/elements",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/elements/element",
            "href": "fuse/elements/element"
          },
          "titles": {
            "indexTitle": "Element",
            "fullyQualifiedIndexTitle": "Fuse.Elements.Element"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Raised when the element receives a new position and size by the layout engine.",
              "full": "Raised when the element receives a new position and size by the layout engine.\n\nEvent handlers are called with an instance of [PlacedArgs](api:fuse/placedargs).\n\nAll coordinates are in the parent node's local space, in points.\n\n> **Note:** Due to the asynchronous nature of JavaScript and the way it communicates with UX,\n> there is no guarantee of exactly _when_ an event handler will fire. For this reason,\n> **we strongly discourage using `Placed` or JavaScript in general for controlling layout**,\n> as doing so can lead to flickering and other artifacts.\n\n## Example\n\n    <JavaScript>\n        function panelPlaced(args) {\n            console.dir(\"New position:\", [args.x, args.y]);\n            console.dir(\"New size:\", [args.width, args.height]);\n        }\n\n        module.exports = { panelPlaced: panelPlaced };\n    </JavaScript>\n\n    <Panel Placed=\"{panelPlaced}\"/>"
            },
            "returns": {
              "href": "fuse/placedhandler",
              "title": "PlacedHandler (object, PlacedArgs)",
              "fullyQualifiedTitle": "Fuse.PlacedHandler (object, Fuse.PlacedArgs)"
            },
            "id": {
              "id": "basic/button/placed",
              "parentId": "basic/button",
              "type": "UxEvent",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/placed",
              "href": "fuse/elements/element/placed",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Placed",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.Placed"
            }
          }
        ]
      }
    ],
    "jsMethods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/visual",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/visual",
            "href": "fuse/visual"
          },
          "titles": {
            "indexTitle": "Visual",
            "fullyQualifiedIndexTitle": "Fuse.Visual"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Requests that this visual be brought into the visible are of the screen. Typically a containing\n`ScrollView` will scroll to ensure it is visible.",
              "full": "Requests that this visual be brought into the visible are of the screen. Typically a containing\n`ScrollView` will scroll to ensure it is visible.",
              "attributes": {
                "scriptMethod": {
                  "name": "bringIntoView",
                  "parameters": [
                    ""
                  ]
                }
              }
            },
            "parameters": [
              {
                "name": "n",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "basic/button/bringintoview_d61a1318",
              "parentId": "basic/button",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "basic/button/bringintoview_d61a1318",
              "href": "fuse/visual/bringintoview_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "bringIntoView(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.bringIntoView(Fuse.Visual)"
            }
          },
          {
            "comment": {
              "brief": "Registers a function to be called whenever the routing parameter is changed.",
              "full": "Registers a function to be called whenever the routing parameter is changed.\n\nThis is typically used in conjunction with the @Router type that allows parameters to be\nspecified in the @Router.goto and @Router.push operations.\n\n## Example\n\nThis method is deprecated - use the following pattern instead:\n\n    <Panel ux:Name=\"channelView\">\n        <JavaScript>\n            channelView.Parameter.onValueChanged(module, function(param) {\n                // lookup channel with id \"param\"\n            })\n        </JavaScript>",
              "attributes": {
                "scriptMethod": {
                  "name": "onParameterChanged",
                  "parameters": [
                    "callback"
                  ]
                },
                "parameters": [
                  {
                    "name": "callback",
                    "description": "The script method to call when the parameter changes. This is guaranted to becalled at least once at registration time; you don't need to lookup the parameter another way."
                  }
                ]
              }
            },
            "parameters": [
              {
                "name": "v",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "basic/button/onparameterchanged_431663a3",
              "parentId": "basic/button",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "basic/button/onparameterchanged_431663a3",
              "href": "fuse/visual/onparameterchanged_431663a3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "onParameterChanged(Visual, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Visual.onParameterChanged(Fuse.Visual, object[])"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "basic/button",
            "parentId": "basic",
            "type": "Class",
            "modifiers": [
              "public",
              "partial"
            ]
          },
          "uri": {
            "idUri": "basic/button",
            "href": "basic/button"
          },
          "titles": {
            "indexTitle": "Button",
            "fullyQualifiedIndexTitle": "Basic.Button"
          }
        },
        "items": [
          {
            "id": {
              "id": "basic/button/_ctor",
              "parentId": "basic/button",
              "type": "Constructor",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/_ctor",
              "href": "basic/button/_ctor"
            },
            "titles": {
              "indexTitle": "Button",
              "fullyQualifiedIndexTitle": "Basic.Button.Button"
            }
          }
        ]
      }
    ],
    "properties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/control",
            "parentId": "fuse/controls",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/control",
            "href": "fuse/controls/control"
          },
          "titles": {
            "indexTitle": "Control",
            "fullyQualifiedIndexTitle": "Fuse.Controls.Control"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "id": {
              "id": "basic/button/appearance",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/appearance",
              "href": "fuse/controls/control/appearance",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Appearance",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.Appearance"
            }
          },
          {
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "id": {
              "id": "basic/button/graphicsvisual",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/graphicsvisual",
              "href": "fuse/controls/control/graphicsvisual",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GraphicsVisual",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.GraphicsVisual"
            }
          },
          {
            "returns": {
              "href": "fuse/controls/native/iview",
              "title": "IView",
              "fullyQualifiedTitle": "Fuse.Controls.Native.IView"
            },
            "id": {
              "id": "basic/button/nativeview",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/nativeview",
              "href": "fuse/controls/control/nativeview",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "NativeView",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.NativeView"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/elements/element",
            "parentId": "fuse/elements",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/elements/element",
            "href": "fuse/elements/element"
          },
          "titles": {
            "indexTitle": "Element",
            "fullyQualifiedIndexTitle": "Fuse.Elements.Element"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The anchor of element.",
              "full": "The anchor of element.\n\nOnly available after layout of the element is complete."
            },
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "id": {
              "id": "basic/button/actualanchor",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/actualanchor",
              "href": "fuse/elements/element/actualanchor",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ActualAnchor",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ActualAnchor"
            }
          },
          {
            "comment": {
              "brief": "The position of the element, the position of its top-left corner to the top-left corner in the parent.",
              "full": "The position of the element, the position of its top-left corner to the top-left corner in the parent.\n\nOnly available after layout of the element is complete."
            },
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "id": {
              "id": "basic/button/actualposition",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/actualposition",
              "href": "fuse/elements/element/actualposition",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ActualPosition",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ActualPosition"
            }
          },
          {
            "comment": {
              "brief": "The size of the element.",
              "full": "The size of the element.\n\nThis is the resulting size after layout and may not match the requested `Width`, `Height`, or other size properties. Those are all interpreted to produce this resulting size.\n\nOnly available after layout of the element is complete."
            },
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "id": {
              "id": "basic/button/actualsize",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/actualsize",
              "href": "fuse/elements/element/actualsize",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ActualSize",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ActualSize"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/hittestlocalvisualbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittestlocalvisualbounds",
              "href": "fuse/elements/element/hittestlocalvisualbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTestLocalVisualBounds",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.HitTestLocalVisualBounds"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/renderboundswitheffects",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/renderboundswitheffects",
              "href": "fuse/elements/element/renderboundswitheffects",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RenderBoundsWithEffects",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.RenderBoundsWithEffects"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/renderboundswithouteffects",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/renderboundswithouteffects",
              "href": "fuse/elements/element/renderboundswithouteffects",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RenderBoundsWithoutEffects",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.RenderBoundsWithoutEffects"
            }
          },
          {
            "returns": {
              "href": "fuse/elements/itreerenderer",
              "title": "ITreeRenderer",
              "fullyQualifiedTitle": "Fuse.Elements.ITreeRenderer"
            },
            "id": {
              "id": "basic/button/treerenderer",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/treerenderer",
              "href": "fuse/elements/element/treerenderer",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TreeRenderer",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.TreeRenderer"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/visual",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/visual",
            "href": "fuse/visual"
          },
          "titles": {
            "indexTitle": "Visual",
            "fullyQualifiedIndexTitle": "Fuse.Visual"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Returns the origin of this Visual in the viewport (world) space.",
              "full": "Returns the origin of this Visual in the viewport (world) space.\n\nThis is used in layout to calculate pixel snapping."
            },
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "id": {
              "id": "basic/button/absoluteviewportorigin",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/absoluteviewportorigin",
              "href": "fuse/visual/absoluteviewportorigin",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AbsoluteViewportOrigin",
              "fullyQualifiedIndexTitle": "Fuse.Visual.AbsoluteViewportOrigin"
            }
          },
          {
            "returns": {
              "href": "uno/float",
              "title": "float",
              "fullyQualifiedTitle": "float"
            },
            "id": {
              "id": "basic/button/absolutezoom",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/absolutezoom",
              "href": "fuse/visual/absolutezoom",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AbsoluteZoom",
              "fullyQualifiedIndexTitle": "Fuse.Visual.AbsoluteZoom"
            }
          },
          {
            "comment": {
              "brief": "The number of child nodes of this visual.",
              "full": "The number of child nodes of this visual."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "basic/button/childcount",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/childcount",
              "href": "fuse/visual/childcount",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ChildCount",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ChildCount"
            }
          },
          {
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "basic/button/drawcost",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawcost",
              "href": "fuse/visual/drawcost",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawCost",
              "fullyQualifiedIndexTitle": "Fuse.Visual.DrawCost"
            }
          },
          {
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "id": {
              "id": "basic/button/firstvisualchild",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/firstvisualchild",
              "href": "fuse/visual/firstvisualchild",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FirstVisualChild",
              "fullyQualifiedIndexTitle": "Fuse.Visual.FirstVisualChild"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/haschildren",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/haschildren",
              "href": "fuse/visual/haschildren",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasChildren",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HasChildren"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/haspendingremove",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/haspendingremove",
              "href": "fuse/visual/haspendingremove",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasPendingRemove",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HasPendingRemove"
            }
          },
          {
            "comment": {
              "brief": "Whether this visual has any visual child nodes.",
              "full": "Whether this visual has any visual child nodes."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/hasvisualchildren",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/hasvisualchildren",
              "href": "fuse/visual/hasvisualchildren",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasVisualChildren",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HasVisualChildren"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/hittestbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittestbounds",
              "href": "fuse/visual/hittestbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTestBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HitTestBounds"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/hittestchildrenbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittestchildrenbounds",
              "href": "fuse/visual/hittestchildrenbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTestChildrenBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HitTestChildrenBounds"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/hittestlocalbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittestlocalbounds",
              "href": "fuse/visual/hittestlocalbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTestLocalBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HitTestLocalBounds"
            }
          },
          {
            "comment": {
              "brief": "Whether this node is in an enabled context.\nThe context is disabled if one of the ancestor nodes have @IsEnabled set to `false`.",
              "full": "Whether this node is in an enabled context.\nThe context is disabled if one of the ancestor nodes have @IsEnabled set to `false`.\n\nYou can use the @WhileContextEnabled and @WhileContextDisabled triggers to specify different\nstyling for    a visual while the context is enabled or disabled."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/iscontextenabled",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/iscontextenabled",
              "href": "fuse/visual/iscontextenabled",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsContextEnabled",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsContextEnabled"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isinteracting",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isinteracting",
              "href": "fuse/visual/isinteracting",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsInteracting",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsInteracting"
            }
          },
          {
            "comment": {
              "brief": "Returns whether this visual is visible without concern for whether an ancestor visual is hidden or collapsed.",
              "full": "Returns whether this visual is visible without concern for whether an ancestor visual is hidden or collapsed."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/islocalvisible",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/islocalvisible",
              "href": "fuse/visual/islocalvisible",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsLocalVisible",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsLocalVisible"
            }
          },
          {
            "comment": {
              "brief": "Returns whether this visual is currently visible.\nWill return false if any of the ancestor visuals are hidden or collapsed.\nThis property can *not* be used to check whether a visual is hidden because it is occluded by\nanother visual, or is outside the view but otherwise visible.",
              "full": "Returns whether this visual is currently visible.\nWill return false if any of the ancestor visuals are hidden or collapsed.\nThis property can *not* be used to check whether a visual is hidden because it is occluded by\nanother visual, or is outside the view but otherwise visible."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isvisible",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isvisible",
              "href": "fuse/visual/isvisible",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsVisible",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsVisible"
            }
          },
          {
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "id": {
              "id": "basic/button/lastvisualchild",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/lastvisualchild",
              "href": "fuse/visual/lastvisualchild",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LastVisualChild",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LastVisualChild"
            }
          },
          {
            "returns": {
              "href": "fuse/box",
              "title": "Box",
              "fullyQualifiedTitle": "Fuse.Box"
            },
            "id": {
              "id": "basic/button/localbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/localbounds",
              "href": "fuse/visual/localbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalBounds"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/localrenderbounds",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/localrenderbounds",
              "href": "fuse/visual/localrenderbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalRenderBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalRenderBounds"
            }
          },
          {
            "returns": {
              "href": "uno/float4x4",
              "title": "float4x4",
              "fullyQualifiedTitle": "float4x4"
            },
            "id": {
              "id": "basic/button/localtransform",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/localtransform",
              "href": "fuse/visual/localtransform",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalTransform",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalTransform"
            }
          },
          {
            "returns": {
              "href": "fuse/fastmatrix",
              "title": "FastMatrix",
              "fullyQualifiedTitle": "Fuse.FastMatrix"
            },
            "id": {
              "id": "basic/button/localtransforminternal",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/localtransforminternal",
              "href": "fuse/visual/localtransforminternal",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalTransformInternal",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalTransformInternal"
            }
          },
          {
            "returns": {
              "href": "uno/float4x4",
              "title": "float4x4",
              "fullyQualifiedTitle": "float4x4"
            },
            "id": {
              "id": "basic/button/localtransforminverse",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/localtransforminverse",
              "href": "fuse/visual/localtransforminverse",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalTransformInverse",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalTransformInverse"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "basic/button/validframecount",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/validframecount",
              "href": "fuse/visual/validframecount",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ValidFrameCount",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ValidFrameCount"
            }
          },
          {
            "returns": {
              "href": "fuse/controls/native/viewhandle",
              "title": "ViewHandle",
              "fullyQualifiedTitle": "Fuse.Controls.Native.ViewHandle"
            },
            "id": {
              "id": "basic/button/viewhandle",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/viewhandle",
              "href": "fuse/visual/viewhandle",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ViewHandle",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ViewHandle"
            }
          },
          {
            "returns": {
              "href": "fuse/iviewport",
              "title": "IViewport",
              "fullyQualifiedTitle": "Fuse.IViewport"
            },
            "id": {
              "id": "basic/button/viewport",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/viewport",
              "href": "fuse/visual/viewport",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Viewport",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Viewport"
            }
          },
          {
            "comment": {
              "brief": "The number of child visuals of this visual.",
              "full": "The number of child visuals of this visual."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "basic/button/visualchildcount",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/visualchildcount",
              "href": "fuse/visual/visualchildcount",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "VisualChildCount",
              "fullyQualifiedIndexTitle": "Fuse.Visual.VisualChildCount"
            }
          },
          {
            "returns": {
              "href": "fuse/visualcontext",
              "title": "VisualContext",
              "fullyQualifiedTitle": "Fuse.VisualContext"
            },
            "id": {
              "id": "basic/button/visualcontext",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/visualcontext",
              "href": "fuse/visual/visualcontext",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "VisualContext",
              "fullyQualifiedIndexTitle": "Fuse.Visual.VisualContext"
            }
          },
          {
            "returns": {
              "href": "uno/float3",
              "title": "float3",
              "fullyQualifiedTitle": "float3"
            },
            "id": {
              "id": "basic/button/worldposition",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/worldposition",
              "href": "fuse/visual/worldposition",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "WorldPosition",
              "fullyQualifiedIndexTitle": "Fuse.Visual.WorldPosition"
            }
          },
          {
            "returns": {
              "href": "uno/float4x4",
              "title": "float4x4",
              "fullyQualifiedTitle": "float4x4"
            },
            "id": {
              "id": "basic/button/worldtransform",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/worldtransform",
              "href": "fuse/visual/worldtransform",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "WorldTransform",
              "fullyQualifiedIndexTitle": "Fuse.Visual.WorldTransform"
            }
          },
          {
            "returns": {
              "href": "uno/float4x4",
              "title": "float4x4",
              "fullyQualifiedTitle": "float4x4"
            },
            "id": {
              "id": "basic/button/worldtransforminverse",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/worldtransforminverse",
              "href": "fuse/visual/worldtransforminverse",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "WorldTransformInverse",
              "fullyQualifiedIndexTitle": "Fuse.Visual.WorldTransformInverse"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "basic/button/zorderchildcount",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/zorderchildcount",
              "href": "fuse/visual/zorderchildcount",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ZOrderChildCount",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ZOrderChildCount"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The context parent is the semantic parent of this node. It is where non-UI structure should\nbe resolved, like looking for the DataContext, a Navigation, or other semantic item.",
              "full": "The context parent is the semantic parent of this node. It is where non-UI structure should\nbe resolved, like looking for the DataContext, a Navigation, or other semantic item."
            },
            "returns": {
              "href": "fuse/node",
              "title": "Node",
              "fullyQualifiedTitle": "Fuse.Node"
            },
            "id": {
              "id": "basic/button/contextparent",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/contextparent",
              "href": "fuse/node/contextparent",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ContextParent",
              "fullyQualifiedIndexTitle": "Fuse.Node.ContextParent"
            }
          },
          {
            "comment": {
              "brief": "Whether rooting for this node is completed.\nReturns false if unrooting has started.",
              "full": "Whether rooting for this node is completed.\nReturns false if unrooting has started."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isrootingcompleted",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isrootingcompleted",
              "href": "fuse/node/isrootingcompleted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsRootingCompleted",
              "fullyQualifiedIndexTitle": "Fuse.Node.IsRootingCompleted"
            }
          },
          {
            "comment": {
              "brief": "Whether rooting of this node has started.\nNote that even if this property returns true, rooting may not yet be\ncompleted for the node. See also @IsRootingCompleted.",
              "full": "Whether rooting of this node has started.\nNote that even if this property returns true, rooting may not yet be\ncompleted for the node. See also @IsRootingCompleted."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/isrootingstarted",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/isrootingstarted",
              "href": "fuse/node/isrootingstarted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsRootingStarted",
              "fullyQualifiedIndexTitle": "Fuse.Node.IsRootingStarted"
            }
          },
          {
            "comment": {
              "brief": "The parent @Visual of this node. Will return null if the node is not rooted.",
              "full": "The parent @Visual of this node. Will return null if the node is not rooted."
            },
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "id": {
              "id": "basic/button/parent",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/parent",
              "href": "fuse/node/parent",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Parent",
              "fullyQualifiedIndexTitle": "Fuse.Node.Parent"
            }
          },
          {
            "comment": {
              "brief": "A linked list holding data for extrinsic properties.",
              "full": "A linked list holding data for extrinsic properties."
            },
            "returns": {
              "href": "fuse/properties",
              "title": "Properties",
              "fullyQualifiedTitle": "Fuse.Properties"
            },
            "id": {
              "id": "basic/button/properties",
              "parentId": "basic/button",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/properties",
              "href": "fuse/node/properties",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Properties",
              "fullyQualifiedIndexTitle": "Fuse.Node.Properties"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/buttonbase",
            "parentId": "fuse/controls",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/buttonbase",
            "href": "fuse/controls/buttonbase"
          },
          "titles": {
            "indexTitle": "ButtonBase",
            "fullyQualifiedIndexTitle": "Fuse.Controls.ButtonBase"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "value",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/settext_9aa6ac94",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/settext_9aa6ac94",
              "href": "fuse/controls/buttonbase/settext_9aa6ac94",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetText(string, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Controls.ButtonBase.SetText(string, Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/panel",
            "parentId": "fuse/controls",
            "type": "UxClass",
            "modifiers": [
              "public",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/panel",
            "href": "fuse/controls/panel"
          },
          "titles": {
            "indexTitle": "Panel",
            "fullyQualifiedIndexTitle": "Fuse.Controls.Panel"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "value",
                "href": "uno/float4",
                "title": "float4",
                "fullyQualifiedTitle": "float4"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/setcolor_c5d9c956",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/setcolor_c5d9c956",
              "href": "fuse/controls/panel/setcolor_c5d9c956",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetColor(float4, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Panel.SetColor(float4, Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/controls/control",
            "parentId": "fuse/controls",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/controls/control",
            "href": "fuse/controls/control"
          },
          "titles": {
            "indexTitle": "Control",
            "fullyQualifiedIndexTitle": "Fuse.Controls.Control"
          }
        },
        "items": [
          {
            "returns": {
              "href": "fuse/controls/native/iview",
              "title": "IView",
              "fullyQualifiedTitle": "Fuse.Controls.Native.IView"
            },
            "id": {
              "id": "basic/button/createnativeview",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/createnativeview",
              "href": "fuse/controls/control/createnativeview",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CreateNativeView",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.CreateNativeView"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              },
              {
                "name": "opacity",
                "href": "uno/float",
                "title": "float",
                "fullyQualifiedTitle": "float"
              }
            ],
            "id": {
              "id": "basic/button/drawbackground_b2e72fc5",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawbackground_b2e72fc5",
              "href": "fuse/controls/control/drawbackground_b2e72fc5",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawBackground(DrawContext, float)",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.DrawBackground(Fuse.DrawContext, float)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/drawvisual_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawvisual_19711663",
              "href": "fuse/controls/control/drawvisual_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawVisual(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.DrawVisual(Fuse.DrawContext)"
            }
          },
          {
            "id": {
              "id": "basic/button/pushpropertiestonativeview",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/pushpropertiestonativeview",
              "href": "fuse/controls/control/pushpropertiestonativeview",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PushPropertiesToNativeView",
              "fullyQualifiedIndexTitle": "Fuse.Controls.Control.PushPropertiesToNativeView"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/elements/element",
            "parentId": "fuse/elements",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/elements/element",
            "href": "fuse/elements/element"
          },
          "titles": {
            "indexTitle": "Element",
            "fullyQualifiedIndexTitle": "Fuse.Elements.Element"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The provided LayoutParams is guaranteed to have a defined size that should be used\nto layout the padding box.",
              "full": "The provided LayoutParams is guaranteed to have a defined size that should be used\nto layout the padding box.\n\nNOTE: ActualSize and ActualPosition will not be updated at this time."
            },
            "parameters": [
              {
                "name": "lp",
                "href": "fuse/layoutparams",
                "title": "LayoutParams",
                "fullyQualifiedTitle": "Fuse.LayoutParams"
              }
            ],
            "id": {
              "id": "basic/button/arrangepaddingbox_28e7c99e",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/arrangepaddingbox_28e7c99e",
              "href": "fuse/elements/element/arrangepaddingbox_28e7c99e",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ArrangePaddingBox(LayoutParams)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.ArrangePaddingBox(Fuse.LayoutParams)"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/calcrenderbounds",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/calcrenderbounds",
              "href": "fuse/elements/element/calcrenderbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CalcRenderBounds",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.CalcRenderBounds"
            }
          },
          {
            "returns": {
              "href": "fuse/visualbounds",
              "title": "VisualBounds",
              "fullyQualifiedTitle": "Fuse.VisualBounds"
            },
            "id": {
              "id": "basic/button/calcrenderboundswitheffects",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/calcrenderboundswitheffects",
              "href": "fuse/elements/element/calcrenderboundswitheffects",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CalcRenderBoundsWithEffects",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.CalcRenderBoundsWithEffects"
            }
          },
          {
            "returns": {
              "href": "uno/graphics/framebuffer",
              "title": "framebuffer",
              "fullyQualifiedTitle": "framebuffer"
            },
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              },
              {
                "name": "region",
                "href": "uno/rect",
                "title": "Rect",
                "fullyQualifiedTitle": "Uno.Rect"
              },
              {
                "name": "padding",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/captureregion_c35db7eb",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/captureregion_c35db7eb",
              "href": "fuse/elements/element/captureregion_c35db7eb",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CaptureRegion(DrawContext, Rect, float2)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.CaptureRegion(Fuse.DrawContext, Uno.Rect, float2)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/drawnonunderlaychildren_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawnonunderlaychildren_19711663",
              "href": "fuse/elements/element/drawnonunderlaychildren_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawNonUnderlayChildren(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.DrawNonUnderlayChildren(Fuse.DrawContext)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/drawunderlaychildren_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawunderlaychildren_19711663",
              "href": "fuse/elements/element/drawunderlaychildren_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawUnderlayChildren(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.DrawUnderlayChildren(Fuse.DrawContext)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/drawwithchildren_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/drawwithchildren_19711663",
              "href": "fuse/elements/element/drawwithchildren_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DrawWithChildren(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.DrawWithChildren(Fuse.DrawContext)"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/fasttrackdrawwithopacity_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/fasttrackdrawwithopacity_19711663",
              "href": "fuse/elements/element/fasttrackdrawwithopacity_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FastTrackDrawWithOpacity(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.FastTrackDrawWithOpacity(Fuse.DrawContext)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "lp",
                "href": "fuse/layoutparams",
                "title": "LayoutParams",
                "fullyQualifiedTitle": "Fuse.LayoutParams"
              }
            ],
            "id": {
              "id": "basic/button/getcontentsize_28e7c99e",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/getcontentsize_28e7c99e",
              "href": "fuse/elements/element/getcontentsize_28e7c99e",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetContentSize(LayoutParams)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.GetContentSize(Fuse.LayoutParams)"
            }
          },
          {
            "returns": {
              "href": "uno/recti",
              "title": "Recti",
              "fullyQualifiedTitle": "Uno.Recti"
            },
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              },
              {
                "name": "localRegion",
                "href": "fuse/visualbounds",
                "title": "VisualBounds",
                "fullyQualifiedTitle": "Fuse.VisualBounds"
              }
            ],
            "id": {
              "id": "basic/button/getvisibleviewportinvertpixelrect_511d2f01",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/getvisibleviewportinvertpixelrect_511d2f01",
              "href": "fuse/elements/element/getvisibleviewportinvertpixelrect_511d2f01",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetVisibleViewportInvertPixelRect(DrawContext, VisualBounds)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.GetVisibleViewportInvertPixelRect(Fuse.DrawContext, Fuse.VisualBounds)"
            }
          },
          {
            "id": {
              "id": "basic/button/invalidaterenderboundswitheffects",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidaterenderboundswitheffects",
              "href": "fuse/elements/element/invalidaterenderboundswitheffects",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateRenderBoundsWithEffects",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.InvalidateRenderBoundsWithEffects"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "localPoint",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/ispointinside_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/ispointinside_92485797",
              "href": "fuse/elements/element/ispointinside_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsPointInside(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.IsPointInside(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "elm",
                "href": "fuse/elements/element",
                "title": "Element",
                "fullyQualifiedTitle": "Fuse.Elements.Element"
              }
            ],
            "id": {
              "id": "basic/button/isselectionparentof_79416a3b",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/isselectionparentof_79416a3b",
              "href": "fuse/elements/element/isselectionparentof_79416a3b",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsSelectionParentOf(Element)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.IsSelectionParentOf(Fuse.Elements.Element)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/ondraw_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/ondraw_19711663",
              "href": "fuse/elements/element/ondraw_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnDraw(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.OnDraw(Fuse.DrawContext)"
            }
          },
          {
            "parameters": [
              {
                "name": "htc",
                "href": "fuse/hittestcontext",
                "title": "HitTestContext",
                "fullyQualifiedTitle": "Fuse.HitTestContext"
              }
            ],
            "id": {
              "id": "basic/button/onhittestlocalvisual_4415d9f8",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onhittestlocalvisual_4415d9f8",
              "href": "fuse/elements/element/onhittestlocalvisual_4415d9f8",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnHitTestLocalVisual(HitTestContext)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.OnHitTestLocalVisual(Fuse.HitTestContext)"
            }
          },
          {
            "parameters": [
              {
                "name": "value",
                "href": "uno/ux/size2",
                "title": "Size2",
                "fullyQualifiedTitle": "Uno.UX.Size2"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/setexplicittransformorigin_2e0a04ce",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/setexplicittransformorigin_2e0a04ce",
              "href": "fuse/elements/element/setexplicittransformorigin_2e0a04ce",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetExplicitTransformOrigin(Size2, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.SetExplicitTransformOrigin(Uno.UX.Size2, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "value",
                "href": "fuse/elements/hittestmode",
                "title": "HitTestMode",
                "fullyQualifiedTitle": "Fuse.Elements.HitTestMode"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/sethittestmode_8c840d62",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/sethittestmode_8c840d62",
              "href": "fuse/elements/element/sethittestmode_8c840d62",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetHitTestMode(HitTestMode, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.SetHitTestMode(Fuse.Elements.HitTestMode, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "value",
                "href": "uno/float",
                "title": "float",
                "fullyQualifiedTitle": "float"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/setopacity_c9f86e32",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/setopacity_c9f86e32",
              "href": "fuse/elements/element/setopacity_c9f86e32",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetOpacity(float, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.SetOpacity(float, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "value",
                "href": "fuse/elements/visibility",
                "title": "Visibility",
                "fullyQualifiedTitle": "Fuse.Elements.Visibility"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/setvisibility_2bd0b980",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/setvisibility_2bd0b980",
              "href": "fuse/elements/element/setvisibility_2bd0b980",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetVisibility(Visibility, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Fuse.Elements.Element.SetVisibility(Fuse.Elements.Visibility, Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/visual",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/visual",
            "href": "fuse/visual"
          },
          "titles": {
            "indexTitle": "Visual",
            "fullyQualifiedIndexTitle": "Fuse.Visual"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "item",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/add_5070ac8a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/add_5070ac8a",
              "href": "fuse/visual/add_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Add(Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Add(Fuse.Node)"
            }
          },
          {
            "parameters": [
              {
                "name": "cost",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              }
            ],
            "id": {
              "id": "basic/button/adddrawcost_d2d6d9e0",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/adddrawcost_d2d6d9e0",
              "href": "fuse/visual/adddrawcost_d2d6d9e0",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddDrawCost(double)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.AddDrawCost(double)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "position",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              },
              {
                "name": "lp",
                "href": "fuse/layoutparams",
                "title": "LayoutParams",
                "fullyQualifiedTitle": "Fuse.LayoutParams"
              }
            ],
            "id": {
              "id": "basic/button/arrangemarginbox_33c1b1bb",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/arrangemarginbox_33c1b1bb",
              "href": "fuse/visual/arrangemarginbox_33c1b1bb",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ArrangeMarginBox(float2, LayoutParams)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.ArrangeMarginBox(float2, Fuse.LayoutParams)"
            }
          },
          {
            "comment": {
              "attributes": {
                "parameters": [
                  {
                    "name": "id",
                    "description": "identifier of the interaction"
                  },
                  {
                    "name": "cancelled",
                    "description": "will be called if the interaction is cancelled"
                  }
                ]
              }
            },
            "parameters": [
              {
                "name": "id",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "cancelled",
                "href": "uno/action",
                "title": "Action",
                "fullyQualifiedTitle": "Uno.Action"
              }
            ],
            "id": {
              "id": "basic/button/begininteraction_9548f916",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/begininteraction_9548f916",
              "href": "fuse/visual/begininteraction_9548f916",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BeginInteraction(object, Action)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.BeginInteraction(object, Uno.Action)"
            }
          },
          {
            "comment": {
              "brief": "Begins removing a given node, playing all @RemovedAnimations before actual removal.",
              "full": "Begins removing a given node, playing all @RemovedAnimations before actual removal."
            },
            "parameters": [
              {
                "name": "n",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              },
              {
                "name": "then",
                "href": "uno/action_1",
                "title": "Action<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Action<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "basic/button/beginremovechild_257675c9",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/beginremovechild_257675c9",
              "href": "fuse/visual/beginremovechild_257675c9",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BeginRemoveChild(Node, Action<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Visual.BeginRemoveChild(Fuse.Node, Uno.Action<Fuse.Node> (Fuse.Node))"
            }
          },
          {
            "comment": {
              "brief": "Begins removing a given visual, playing all @RemovedAnimations before actual removal.",
              "full": "Begins removing a given visual, playing all @RemovedAnimations before actual removal."
            },
            "parameters": [
              {
                "name": "child",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              },
              {
                "name": "then",
                "href": "uno/action_1",
                "title": "Action<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Action<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "basic/button/beginremovevisual_306a111e",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/beginremovevisual_306a111e",
              "href": "fuse/visual/beginremovevisual_306a111e",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BeginRemoveVisual(Visual, Action<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Visual.BeginRemoveVisual(Fuse.Visual, Uno.Action<Fuse.Node> (Fuse.Node))"
            }
          },
          {
            "id": {
              "id": "basic/button/bringintoview",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/bringintoview",
              "href": "fuse/visual/bringintoview",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BringIntoView",
              "fullyQualifiedIndexTitle": "Fuse.Visual.BringIntoView"
            }
          },
          {
            "comment": {
              "brief": "Brings the given child to the front of the Z-order.\nIn UX markup, use the @BringToFront trigger action instead.",
              "full": "Brings the given child to the front of the Z-order.\nIn UX markup, use the @BringToFront trigger action instead."
            },
            "parameters": [
              {
                "name": "item",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "basic/button/bringtofront_d61a1318",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/bringtofront_d61a1318",
              "href": "fuse/visual/bringtofront_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BringToFront(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.BringToFront(Fuse.Visual)"
            }
          },
          {
            "parameters": [
              {
                "name": "how",
                "href": "fuse/visual/cancelinteractionstype",
                "title": "CancelInteractionsType",
                "fullyQualifiedTitle": "Fuse.CancelInteractionsType"
              }
            ],
            "id": {
              "id": "basic/button/cancelinteractions_e9fe7ccb",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/cancelinteractions_e9fe7ccb",
              "href": "fuse/visual/cancelinteractions_e9fe7ccb",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CancelInteractions(CancelInteractionsType)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.CancelInteractions(Fuse.CancelInteractionsType)"
            }
          },
          {
            "parameters": [
              {
                "name": "dc",
                "href": "fuse/drawcontext",
                "title": "DrawContext",
                "fullyQualifiedTitle": "Fuse.DrawContext"
              }
            ],
            "id": {
              "id": "basic/button/draw_19711663",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "basic/button/draw_19711663",
              "href": "fuse/visual/draw_19711663",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Draw(DrawContext)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Draw(Fuse.DrawContext)"
            }
          },
          {
            "parameters": [
              {
                "name": "id",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "basic/button/endinteraction_a09c80e3",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/endinteraction_a09c80e3",
              "href": "fuse/visual/endinteraction_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EndInteraction(object)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.EndInteraction(object)"
            }
          },
          {
            "returns": {
              "href": "uno/ux/template",
              "title": "Template",
              "fullyQualifiedTitle": "Uno.UX.Template"
            },
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "basic/button/findtemplate_968f99a6",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/findtemplate_968f99a6",
              "href": "fuse/visual/findtemplate_968f99a6",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindTemplate(string)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.FindTemplate(string)"
            }
          },
          {
            "returns": {
              "href": "fuse/iviewport",
              "title": "IViewport",
              "fullyQualifiedTitle": "Fuse.IViewport"
            },
            "id": {
              "id": "basic/button/findviewport",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/findviewport",
              "href": "fuse/visual/findviewport",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindViewport",
              "fullyQualifiedIndexTitle": "Fuse.Visual.FindViewport"
            }
          },
          {
            "comment": {
              "brief": "Returns the first child node of the given type.",
              "full": "Returns the first child node of the given type.\n\nTo get the very first child node (of any type), use `FirstChild<Node>()`."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/firstchild_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/firstchild_1",
              "href": "fuse/visual/firstchild_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FirstChild<T>",
              "fullyQualifiedIndexTitle": "Fuse.Visual.FirstChild<T>"
            }
          },
          {
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "parameters": [
              {
                "name": "windowPoint",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/gethitwindowpoint_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/gethitwindowpoint_92485797",
              "href": "fuse/visual/gethitwindowpoint_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHitWindowPoint(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.GetHitWindowPoint(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "lp",
                "href": "fuse/layoutparams",
                "title": "LayoutParams",
                "fullyQualifiedTitle": "Fuse.LayoutParams"
              }
            ],
            "id": {
              "id": "basic/button/getmarginsize_28e7c99e",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/getmarginsize_28e7c99e",
              "href": "fuse/visual/getmarginsize_28e7c99e",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetMarginSize(LayoutParams)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.GetMarginSize(Fuse.LayoutParams)"
            }
          },
          {
            "returns": {
              "href": "uno/float4x4",
              "title": "float4x4",
              "fullyQualifiedTitle": "float4x4"
            },
            "parameters": [
              {
                "name": "other",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "basic/button/gettransformto_d61a1318",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/gettransformto_d61a1318",
              "href": "fuse/visual/gettransformto_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetTransformTo(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.GetTransformTo(Fuse.Visual)"
            }
          },
          {
            "comment": {
              "brief": "Returns the visual child with the given index.",
              "full": "Returns the visual child with the given index.\n\nFor performance reasons, avoid using this function."
            },
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "parameters": [
              {
                "name": "index",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              }
            ],
            "id": {
              "id": "basic/button/getvisualchild_56ad0a96",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/getvisualchild_56ad0a96",
              "href": "fuse/visual/getvisualchild_56ad0a96",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetVisualChild(int)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.GetVisualChild(int)"
            }
          },
          {
            "comment": {
              "brief": "Get the Visual for a given z-order",
              "full": "Get the Visual for a given z-order\n\nThis method might have a surprisingly high performance impact; avoid calling it in\nperformance sensitive code-paths."
            },
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "parameters": [
              {
                "name": "index",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              }
            ],
            "id": {
              "id": "basic/button/getzorderchild_56ad0a96",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/getzorderchild_56ad0a96",
              "href": "fuse/visual/getzorderchild_56ad0a96",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetZOrderChild(int)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.GetZOrderChild(int)"
            }
          },
          {
            "parameters": [
              {
                "name": "htc",
                "href": "fuse/hittestcontext",
                "title": "HitTestContext",
                "fullyQualifiedTitle": "Fuse.HitTestContext"
              }
            ],
            "id": {
              "id": "basic/button/hittest_4415d9f8",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/hittest_4415d9f8",
              "href": "fuse/visual/hittest_4415d9f8",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HitTest(HitTestContext)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.HitTest(Fuse.HitTestContext)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/ifsnap_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/ifsnap_92485797",
              "href": "fuse/visual/ifsnap_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IfSnap(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IfSnap(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/ifsnapdown_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/ifsnapdown_92485797",
              "href": "fuse/visual/ifsnapdown_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IfSnapDown(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IfSnapDown(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/ifsnapup_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/ifsnapup_92485797",
              "href": "fuse/visual/ifsnapup_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IfSnapUp(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IfSnapUp(float2)"
            }
          },
          {
            "parameters": [
              {
                "name": "index",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              },
              {
                "name": "item",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/insert_28446fec",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/insert_28446fec",
              "href": "fuse/visual/insert_28446fec",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Insert(int, Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Insert(int, Fuse.Node)"
            }
          },
          {
            "comment": {
              "brief": "Inserts a child node after the given sibling node.",
              "full": "Inserts a child node after the given sibling node.\n\nFor performance reasons, this entrypoint is recommended over using `InsertAt`.\n\nTo insert at the beginning of the list, use `null` as the first argument."
            },
            "parameters": [
              {
                "name": "sibling",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              },
              {
                "name": "node",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/insertafter_7ca0a31b",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/insertafter_7ca0a31b",
              "href": "fuse/visual/insertafter_7ca0a31b",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InsertAfter(Node, Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InsertAfter(Fuse.Node, Fuse.Node)"
            }
          },
          {
            "id": {
              "id": "basic/button/invalidatehittestbounds",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidatehittestbounds",
              "href": "fuse/visual/invalidatehittestbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateHitTestBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateHitTestBounds"
            }
          },
          {
            "comment": {
              "brief": "Indicates that this element requires a new layout as some layout parameters or content\nhave changed.",
              "full": "Indicates that this element requires a new layout as some layout parameters or content\nhave changed.\n\nThis does not directly change any sizes or invalidate any cached values. The actual changes done\nduring a call to `ArrangeMarginBox` must invalidate those as appropriate."
            },
            "parameters": [
              {
                "name": "reason",
                "href": "fuse/invalidatelayoutreason",
                "title": "InvalidateLayoutReason",
                "fullyQualifiedTitle": "Fuse.InvalidateLayoutReason"
              }
            ],
            "id": {
              "id": "basic/button/invalidatelayout_f1613bd4",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidatelayout_f1613bd4",
              "href": "fuse/visual/invalidatelayout_f1613bd4",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateLayout(InvalidateLayoutReason)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateLayout(Fuse.InvalidateLayoutReason)"
            }
          },
          {
            "id": {
              "id": "basic/button/invalidatelocaltransform",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidatelocaltransform",
              "href": "fuse/visual/invalidatelocaltransform",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateLocalTransform",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateLocalTransform"
            }
          },
          {
            "comment": {
              "brief": "Indicates the `RenderBounds` have changed and need to be recalculated.",
              "full": "Indicates the `RenderBounds` have changed and need to be recalculated.\n\nThis implies `InvalidateVisual`."
            },
            "id": {
              "id": "basic/button/invalidaterenderbounds",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidaterenderbounds",
              "href": "fuse/visual/invalidaterenderbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateRenderBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateRenderBounds"
            }
          },
          {
            "comment": {
              "brief": "Indicates the visual for this node has changed. This allows the root-level node to know\nthat it must draw, and any caching that it must invalidate the cache for this node.",
              "full": "Indicates the visual for this node has changed. This allows the root-level node to know\nthat it must draw, and any caching that it must invalidate the cache for this node."
            },
            "id": {
              "id": "basic/button/invalidatevisual",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidatevisual",
              "href": "fuse/visual/invalidatevisual",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateVisual",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateVisual"
            }
          },
          {
            "comment": {
              "brief": "Indicates the composition of the visual has changed, but that the visual drawing itself is\nstill valid (for example a position change).",
              "full": "Indicates the composition of the visual has changed, but that the visual drawing itself is\nstill valid (for example a position change)."
            },
            "id": {
              "id": "basic/button/invalidatevisualcomposition",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/invalidatevisualcomposition",
              "href": "fuse/visual/invalidatevisualcomposition",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InvalidateVisualComposition",
              "fullyQualifiedIndexTitle": "Fuse.Visual.InvalidateVisualComposition"
            }
          },
          {
            "comment": {
              "attributes": {
                "returns": {
                  "text": "Yes if the child influences the results of ArrangeMarginBox (size or layout of this node),No if it cannot, and Maybe otherwise (in cases of stretching)\r\n"
                }
              }
            },
            "returns": {
              "href": "fuse/layoutdependent",
              "title": "LayoutDependent",
              "fullyQualifiedTitle": "Fuse.LayoutDependent"
            },
            "parameters": [
              {
                "name": "child",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "basic/button/ismarginboxdependent_d61a1318",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/ismarginboxdependent_d61a1318",
              "href": "fuse/visual/ismarginboxdependent_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsMarginBoxDependent(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.IsMarginBoxDependent(Fuse.Visual)"
            }
          },
          {
            "comment": {
              "brief": "Returns the last child node of the given type.",
              "full": "Returns the last child node of the given type.\n\nTo get the very last child node (of any type), use `LastChild<Node>()`."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/lastchild_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/lastchild_1",
              "href": "fuse/visual/lastchild_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LastChild<T>",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LastChild<T>"
            }
          },
          {
            "comment": {
              "brief": "Converts a coordinate from the local space into the parent space.",
              "full": "Converts a coordinate from the local space into the parent space."
            },
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "localPoint",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/localtoparent_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/localtoparent_92485797",
              "href": "fuse/visual/localtoparent_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "LocalToParent(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.LocalToParent(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "position",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              },
              {
                "name": "lp",
                "href": "fuse/layoutparams",
                "title": "LayoutParams",
                "fullyQualifiedTitle": "Fuse.LayoutParams"
              }
            ],
            "id": {
              "id": "basic/button/onarrangemarginbox_33c1b1bb",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onarrangemarginbox_33c1b1bb",
              "href": "fuse/visual/onarrangemarginbox_33c1b1bb",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnArrangeMarginBox(float2, LayoutParams)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnArrangeMarginBox(float2, Fuse.LayoutParams)"
            }
          },
          {
            "parameters": [
              {
                "name": "args",
                "href": "fuse/pendingremovevisual",
                "title": "PendingRemoveVisual",
                "fullyQualifiedTitle": "Fuse.PendingRemoveVisual"
              }
            ],
            "id": {
              "id": "basic/button/onbeginremovevisual_ad54b4ae",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/onbeginremovevisual_ad54b4ae",
              "href": "fuse/visual/onbeginremovevisual_ad54b4ae",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnBeginRemoveVisual(PendingRemoveVisual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnBeginRemoveVisual(Fuse.PendingRemoveVisual)"
            }
          },
          {
            "parameters": [
              {
                "name": "elm",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/onchildadded_5070ac8a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onchildadded_5070ac8a",
              "href": "fuse/visual/onchildadded_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnChildAdded(Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnChildAdded(Fuse.Node)"
            }
          },
          {
            "parameters": [
              {
                "name": "elm",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/onchildmoved_5070ac8a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onchildmoved_5070ac8a",
              "href": "fuse/visual/onchildmoved_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnChildMoved(Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnChildMoved(Fuse.Node)"
            }
          },
          {
            "parameters": [
              {
                "name": "elm",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/onchildremoved_5070ac8a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onchildremoved_5070ac8a",
              "href": "fuse/visual/onchildremoved_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnChildRemoved(Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnChildRemoved(Fuse.Node)"
            }
          },
          {
            "parameters": [
              {
                "name": "htc",
                "href": "fuse/hittestcontext",
                "title": "HitTestContext",
                "fullyQualifiedTitle": "Fuse.HitTestContext"
              }
            ],
            "id": {
              "id": "basic/button/onhittest_4415d9f8",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onhittest_4415d9f8",
              "href": "fuse/visual/onhittest_4415d9f8",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnHitTest(HitTestContext)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnHitTest(Fuse.HitTestContext)"
            }
          },
          {
            "id": {
              "id": "basic/button/oninvalidatelayout",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/oninvalidatelayout",
              "href": "fuse/visual/oninvalidatelayout",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnInvalidateLayout",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnInvalidateLayout"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "basic/button/oninvalidaterenderbounds",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/oninvalidaterenderbounds",
              "href": "fuse/visual/oninvalidaterenderbounds",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnInvalidateRenderBounds",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnInvalidateRenderBounds"
            }
          },
          {
            "id": {
              "id": "basic/button/oninvalidatevisual",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/oninvalidatevisual",
              "href": "fuse/visual/oninvalidatevisual",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnInvalidateVisual",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnInvalidateVisual"
            }
          },
          {
            "id": {
              "id": "basic/button/oninvalidatevisualcomposition",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/oninvalidatevisualcomposition",
              "href": "fuse/visual/oninvalidatevisualcomposition",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnInvalidateVisualComposition",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnInvalidateVisualComposition"
            }
          },
          {
            "id": {
              "id": "basic/button/oniscontextenabledchanged",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/oniscontextenabledchanged",
              "href": "fuse/visual/oniscontextenabledchanged",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnIsContextEnabledChanged",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnIsContextEnabledChanged"
            }
          },
          {
            "parameters": [
              {
                "name": "isSelected",
                "href": "uno/bool",
                "title": "bool",
                "fullyQualifiedTitle": "bool"
              }
            ],
            "id": {
              "id": "basic/button/onisselectedchanged_f0c97f29",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onisselectedchanged_f0c97f29",
              "href": "fuse/visual/onisselectedchanged_f0c97f29",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnIsSelectedChanged(bool)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnIsSelectedChanged(bool)"
            }
          },
          {
            "id": {
              "id": "basic/button/onisvisiblechanged",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onisvisiblechanged",
              "href": "fuse/visual/onisvisiblechanged",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnIsVisibleChanged",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnIsVisibleChanged"
            }
          },
          {
            "id": {
              "id": "basic/button/onlocalvisiblechanged",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/onlocalvisiblechanged",
              "href": "fuse/visual/onlocalvisiblechanged",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnLocalVisibleChanged",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnLocalVisibleChanged"
            }
          },
          {
            "parameters": [
              {
                "name": "sender",
                "href": "uno/ux/propertyobject",
                "title": "PropertyObject",
                "fullyQualifiedTitle": "Uno.UX.PropertyObject"
              },
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              }
            ],
            "id": {
              "id": "basic/button/onpropertychanged_d60fe086",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onpropertychanged_d60fe086",
              "href": "fuse/visual/onpropertychanged_d60fe086",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(PropertyObject, Selector)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnPropertyChanged(Uno.UX.PropertyObject, Uno.UX.Selector)"
            }
          },
          {
            "id": {
              "id": "basic/button/onrootedprechildren",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onrootedprechildren",
              "href": "fuse/visual/onrootedprechildren",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnRootedPreChildren",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnRootedPreChildren"
            }
          },
          {
            "id": {
              "id": "basic/button/onzorderinvalidated",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onzorderinvalidated",
              "href": "fuse/visual/onzorderinvalidated",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnZOrderInvalidated",
              "fullyQualifiedIndexTitle": "Fuse.Visual.OnZOrderInvalidated"
            }
          },
          {
            "id": {
              "id": "basic/button/performlayout",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/performlayout",
              "href": "fuse/visual/performlayout",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PerformLayout",
              "fullyQualifiedIndexTitle": "Fuse.Visual.PerformLayout"
            }
          },
          {
            "parameters": [
              {
                "name": "clientSize",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/performlayout_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/performlayout_92485797",
              "href": "fuse/visual/performlayout_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PerformLayout(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.PerformLayout(float2)"
            }
          },
          {
            "parameters": [
              {
                "name": "m",
                "href": "fuse/fastmatrix",
                "title": "FastMatrix",
                "fullyQualifiedTitle": "Fuse.FastMatrix"
              }
            ],
            "id": {
              "id": "basic/button/prependimplicittransform_9e22bbd2",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/prependimplicittransform_9e22bbd2",
              "href": "fuse/visual/prependimplicittransform_9e22bbd2",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PrependImplicitTransform(FastMatrix)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.PrependImplicitTransform(Fuse.FastMatrix)"
            }
          },
          {
            "parameters": [
              {
                "name": "m",
                "href": "fuse/fastmatrix",
                "title": "FastMatrix",
                "fullyQualifiedTitle": "Fuse.FastMatrix"
              }
            ],
            "id": {
              "id": "basic/button/prependinversetransformorigin_9e22bbd2",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/prependinversetransformorigin_9e22bbd2",
              "href": "fuse/visual/prependinversetransformorigin_9e22bbd2",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PrependInverseTransformOrigin(FastMatrix)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.PrependInverseTransformOrigin(Fuse.FastMatrix)"
            }
          },
          {
            "parameters": [
              {
                "name": "m",
                "href": "fuse/fastmatrix",
                "title": "FastMatrix",
                "fullyQualifiedTitle": "Fuse.FastMatrix"
              }
            ],
            "id": {
              "id": "basic/button/prependtransformorigin_9e22bbd2",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/prependtransformorigin_9e22bbd2",
              "href": "fuse/visual/prependtransformorigin_9e22bbd2",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PrependTransformOrigin(FastMatrix)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.PrependTransformOrigin(Fuse.FastMatrix)"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "item",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "basic/button/remove_5070ac8a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/remove_5070ac8a",
              "href": "fuse/visual/remove_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Remove(Node)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Remove(Fuse.Node)"
            }
          },
          {
            "comment": {
              "brief": "Removes all children of the given type.",
              "full": "Removes all children of the given type.\n\nTo remove all children (of all types), use `RemoveAllChildren<Node>()`."
            },
            "id": {
              "id": "basic/button/removeallchildren_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/removeallchildren_1",
              "href": "fuse/visual/removeallchildren_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RemoveAllChildren<T>",
              "fullyQualifiedIndexTitle": "Fuse.Visual.RemoveAllChildren<T>"
            }
          },
          {
            "parameters": [
              {
                "name": "cost",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              }
            ],
            "id": {
              "id": "basic/button/removedrawcost_d2d6d9e0",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/removedrawcost_d2d6d9e0",
              "href": "fuse/visual/removedrawcost_d2d6d9e0",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RemoveDrawCost(double)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.RemoveDrawCost(double)"
            }
          },
          {
            "comment": {
              "brief": "Sends the given child to the back of the Z-order.\nIn UX markup, use the @SendToBack trigger action instead.",
              "full": "Sends the given child to the back of the Z-order.\nIn UX markup, use the @SendToBack trigger action instead."
            },
            "parameters": [
              {
                "name": "item",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "basic/button/sendtoback_d61a1318",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/sendtoback_d61a1318",
              "href": "fuse/visual/sendtoback_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SendToBack(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.SendToBack(Fuse.Visual)"
            }
          },
          {
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "value",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "basic/button/setresource_d062e5a9",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/setresource_d062e5a9",
              "href": "fuse/visual/setresource_d062e5a9",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetResource(string, object)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.SetResource(string, object)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/snap_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/snap_92485797",
              "href": "fuse/visual/snap_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Snap(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.Snap(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/snapdown_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/snapdown_92485797",
              "href": "fuse/visual/snapdown_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SnapDown(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.SnapDown(float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "p",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/snapup_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/snapup_92485797",
              "href": "fuse/visual/snapup_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SnapUp(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.SnapUp(float2)"
            }
          },
          {
            "comment": {
              "brief": "Converts a coordinate from the parent space into the local space.",
              "full": "Converts a coordinate from the parent space into the local space.",
              "attributes": {
                "returns": {
                  "text": "true if the result is defined, false is the calculation could not be performed."
                },
                "parameters": [
                  {
                    "name": "result",
                    "description": "The result will be stored here. It is undefined if the return is `false`"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "parentPoint",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              },
              {
                "name": "result",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/tryparenttolocal_35c8f868",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/tryparenttolocal_35c8f868",
              "href": "fuse/visual/tryparenttolocal_35c8f868",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TryParentToLocal(float2, float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.TryParentToLocal(float2, float2)"
            }
          },
          {
            "returns": {
              "href": "uno/float2",
              "title": "float2",
              "fullyQualifiedTitle": "float2"
            },
            "parameters": [
              {
                "name": "windowCoord",
                "href": "uno/float2",
                "title": "float2",
                "fullyQualifiedTitle": "float2"
              }
            ],
            "id": {
              "id": "basic/button/windowtolocal_92485797",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/windowtolocal_92485797",
              "href": "fuse/visual/windowtolocal_92485797",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "WindowToLocal(float2)",
              "fullyQualifiedIndexTitle": "Fuse.Visual.WindowToLocal(float2)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "basic/button/add_cd0f711d",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/add_cd0f711d",
              "href": "fuse/node/add_cd0f711d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Add(Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Add(Fuse.Binding)"
            }
          },
          {
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/findbytype_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/findbytype_1",
              "href": "fuse/node/findbytype_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindByType<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.FindByType<T>"
            }
          },
          {
            "comment": {
              "brief": "Finds the first node with a given name that satisfies the given acceptor.\nThe serach algorithm works as follows: Nodes in the subtree are matched first, then\nit matches the nodes in the subtrees ofthe ancestor nodes by turn all the way to the\nroot. If no matching node is found, the function returns null.",
              "full": "Finds the first node with a given name that satisfies the given acceptor.\nThe serach algorithm works as follows: Nodes in the subtree are matched first, then\nit matches the nodes in the subtrees ofthe ancestor nodes by turn all the way to the\nroot. If no matching node is found, the function returns null."
            },
            "returns": {
              "href": "fuse/node",
              "title": "Node",
              "fullyQualifiedTitle": "Fuse.Node"
            },
            "parameters": [
              {
                "name": "name",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              },
              {
                "name": "acceptor",
                "href": "uno/predicate_1",
                "title": "Predicate<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Predicate<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "basic/button/findnodebyname_66268add",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/findnodebyname_66268add",
              "href": "fuse/node/findnodebyname_66268add",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindNodeByName(Selector, Predicate<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Node.FindNodeByName(Uno.UX.Selector, Uno.Predicate<Fuse.Node> (Fuse.Node))"
            }
          },
          {
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/getnearestancestoroftype_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/getnearestancestoroftype_1",
              "href": "fuse/node/getnearestancestoroftype_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetNearestAncestorOfType<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.GetNearestAncestorOfType<T>"
            }
          },
          {
            "parameters": [
              {
                "name": "index",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              },
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "basic/button/insert_4036b6cf",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/insert_4036b6cf",
              "href": "fuse/node/insert_4036b6cf",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Insert(int, Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Insert(int, Fuse.Binding)"
            }
          },
          {
            "comment": {
              "brief": "Returns the next sibling node of the given type.",
              "full": "Returns the next sibling node of the given type."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/nextsibling_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/nextsibling_1",
              "href": "fuse/node/nextsibling_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "NextSibling<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.NextSibling<T>"
            }
          },
          {
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "newValue",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "basic/button/ondatachanged_d062e5a9",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/ondatachanged_d062e5a9",
              "href": "fuse/node/ondatachanged_d062e5a9",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnDataChanged(string, object)",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnDataChanged(string, object)"
            }
          },
          {
            "comment": {
              "brief": "If you override `OnRooted` you must call `base.OnRooted()` first in your derived class. No other processing should happen first, otherwise you might end up in an undefined state.",
              "full": "If you override `OnRooted` you must call `base.OnRooted()` first in your derived class. No other processing should happen first, otherwise you might end up in an undefined state."
            },
            "id": {
              "id": "basic/button/onrooted",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onrooted",
              "href": "fuse/node/onrooted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnRooted",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnRooted"
            }
          },
          {
            "id": {
              "id": "basic/button/onunrooted",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onunrooted",
              "href": "fuse/node/onunrooted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnUnrooted",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnUnrooted"
            }
          },
          {
            "comment": {
              "brief": "Returns the next sibling node of the given type.",
              "full": "Returns the next sibling node of the given type."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "basic/button/previoussibling_1",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/previoussibling_1",
              "href": "fuse/node/previoussibling_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PreviousSibling<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.PreviousSibling<T>"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "basic/button/remove_cd0f711d",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/remove_cd0f711d",
              "href": "fuse/node/remove_cd0f711d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Remove(Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Remove(Fuse.Binding)"
            }
          },
          {
            "id": {
              "id": "basic/button/softdispose",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/softdispose",
              "href": "fuse/node/softdispose",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SoftDispose",
              "fullyQualifiedIndexTitle": "Fuse.Node.SoftDispose"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "basic/button/subtreetostring",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/subtreetostring",
              "href": "fuse/node/subtreetostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SubtreeToString",
              "fullyQualifiedIndexTitle": "Fuse.Node.SubtreeToString"
            }
          },
          {
            "parameters": [
              {
                "name": "sb",
                "href": "uno/text/stringbuilder",
                "title": "StringBuilder",
                "fullyQualifiedTitle": "Uno.Text.StringBuilder"
              },
              {
                "name": "indent",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              }
            ],
            "id": {
              "id": "basic/button/subtreetostring_efe5f5b8",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/subtreetostring_efe5f5b8",
              "href": "fuse/node/subtreetostring_efe5f5b8",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SubtreeToString(StringBuilder, int)",
              "fullyQualifiedIndexTitle": "Fuse.Node.SubtreeToString(Uno.Text.StringBuilder, int)"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "acceptor",
                "href": "uno/predicate_1",
                "title": "Predicate<object> (object)",
                "fullyQualifiedTitle": "Uno.Predicate<object> (object)"
              },
              {
                "name": "resource",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "basic/button/trygetresource_5317754b",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/trygetresource_5317754b",
              "href": "fuse/node/trygetresource_5317754b",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TryGetResource(string, Predicate<object> (object), object)",
              "fullyQualifiedIndexTitle": "Fuse.Node.TryGetResource(string, Uno.Predicate<object> (object), object)"
            }
          },
          {
            "parameters": [
              {
                "name": "action",
                "href": "uno/action_1",
                "title": "Action<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Action<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "basic/button/visitsubtree_7a20b182",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/visitsubtree_7a20b182",
              "href": "fuse/node/visitsubtree_7a20b182",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "VisitSubtree(Action<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Node.VisitSubtree(Uno.Action<Fuse.Node> (Fuse.Node))"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/ux/propertyobject",
            "parentId": "uno/ux",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "uno/ux/propertyobject",
            "href": "uno/ux/propertyobject"
          },
          "titles": {
            "indexTitle": "PropertyObject",
            "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/addpropertylistener_496a874a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/addpropertylistener_496a874a",
              "href": "uno/ux/propertyobject/addpropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddPropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.AddPropertyListener(Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              }
            ],
            "id": {
              "id": "basic/button/onpropertychanged_16d735f3",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "basic/button/onpropertychanged_16d735f3",
              "href": "uno/ux/propertyobject/onpropertychanged_16d735f3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/onpropertychanged_6422fe92",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/onpropertychanged_6422fe92",
              "href": "uno/ux/propertyobject/onpropertychanged_6422fe92",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "basic/button/removepropertylistener_496a874a",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/removepropertylistener_496a874a",
              "href": "uno/ux/propertyobject/removepropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RemovePropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.RemovePropertyListener(Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "basic/button/equals_a09c80e3",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "basic/button/gethashcode",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "basic/button/gettype",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "basic/button/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "basic/button/tostring",
              "parentId": "basic/button",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "basic/button/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ]
  }
}