{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Selection",
      "namespaceUri": "fuse/selection",
      "packageName": "Fuse.Selection",
      "packageVersion": "2.3.0"
    },
    "parameters": [],
    "returns": {
      "href": "uno/object",
      "title": "object",
      "fullyQualifiedTitle": "object"
    },
    "uxProperties": {},
    "id": {
      "id": "fuse/selection/selection/values",
      "parentId": "fuse/selection/selection",
      "type": "UxProperty",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/selection/selection/values",
      "href": "fuse/selection/selection/values"
    },
    "titles": {
      "pageTitle": "Selection.Values Property",
      "navigationTitle": "Values Property",
      "fullTitle": "Fuse.Selection.Selection.Values",
      "indexTitle": "Values",
      "fullyQualifiedIndexTitle": "Fuse.Selection.Selection.Values"
    },
    "syntax": {
      "uno": "public object Values { get; get; }"
    },
    "comment": {
      "brief": "The current list of selected values. This should be bound to an `IObservableArray` (e.g `FuseJS/Observable`) order to create a 2-way interface for the selected items.",
      "full": "The current list of selected values. This should be bound to an `IObservableArray` (e.g `FuseJS/Observable`) order to create a 2-way interface for the selected items.",
      "examples": "The following example uses @Selection to create a simple list of options. Tap the items to toggle their selection. `Values` is bound to a JavaScript `Observable` in order to track the currently selected items.\n```xml\n\t<Panel ux:Class=\"MyItem\" Color=\"#aaa\">\n\t\t<string ux:Property=\"Label\" />\n\t\t<string ux:Property=\"Value\" />\n\n\t\t<Selectable Value=\"{ReadProperty this.Value}\" />\n\t\t<Text Value=\"{ReadProperty this.Label}\" />\n\n\t\t<WhileSelected>\n\t\t\t<Change this.Color=\"#ffc\" />\n\t\t</WhileSelected>\n\t\t<Tapped>\n\t\t\t<ToggleSelection />\n\t\t</Tapped>\n\t</Panel>\n\n\t<JavaScript>\n\t\tvar Observable = require(\"FuseJS/Observable\");\n\n\t\tvar values = Observable();\n\t\tvar list = Observable(function() {\n\t\t\treturn values.toArray().join(\",\");\n\t\t});\n\n\t\tmodule.exports = {\n\t\t\tvalues: values,\n\t\t\tlist: list\n\t\t};\n\t</JavaScript>\n\n\t<StackPanel>\n\t\t<Selection Values=\"{values}\" />\n\n\t\t<MyItem Label=\"Big Red One\" Value=\"sku-01\" />\n\t\t<MyItem Label=\"Small Green Two\" Value=\"sku-02\" />\n\t\t<MyItem Label=\"Third Last One\" Value=\"sku-03\" />\n\t\t<MyItem Label=\"Four Fore For\" Value=\"sku-04\" />\n\t\t<MyItem Label=\"Point Oh-Five\" Value=\"sku-05\" />\n\n\t\t<Text Value=\"Selected:\" Margin=\"0,10,0,0\" />\n\t\t<Text Value=\"{list}\" />\n\t</StackPanel>\n```"
    }
  },
  "tableOfContents": {}
}