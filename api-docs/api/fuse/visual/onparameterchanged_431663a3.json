{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse",
      "namespaceUri": "fuse",
      "packageName": "Fuse.Nodes",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "v",
        "href": "fuse/visual",
        "title": "Visual",
        "fullyQualifiedTitle": "Fuse.Visual"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "id": {
      "id": "fuse/visual/onparameterchanged_431663a3",
      "parentId": "fuse/visual",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/visual/onparameterchanged_431663a3",
      "href": "fuse/visual/onparameterchanged_431663a3"
    },
    "titles": {
      "pageTitle": "Visual.onParameterChanged Method (Visual, object[])",
      "navigationTitle": "onParameterChanged Method (Visual, object[])",
      "fullTitle": "Fuse.Visual.onParameterChanged",
      "indexTitle": "onParameterChanged(Visual, object[])",
      "fullyQualifiedIndexTitle": "Fuse.Visual.onParameterChanged(Fuse.Visual, object[])"
    },
    "syntax": {
      "uno": "private static voidonParameterChanged(Fuse.Visual v, object[] args) {}"
    },
    "comment": {
      "brief": "Registers a function to be called whenever the routing parameter is changed.",
      "full": "Registers a function to be called whenever the routing parameter is changed.\n\nThis is typically used in conjunction with the @Router type that allows parameters to be\nspecified in the @Router.goto and @Router.push operations.\n\n## Example\n\nThis method is deprecated - use the following pattern instead:\n\n    <Panel ux:Name=\"channelView\">\n        <JavaScript>\n            channelView.Parameter.onValueChanged(module, function(param) {\n                // lookup channel with id \"param\"\n            })\n        </JavaScript>",
      "attributes": {
        "scriptMethod": {
          "name": "onParameterChanged",
          "parameters": [
            "callback"
          ]
        },
        "parameters": [
          {
            "name": "callback",
            "description": "The script method to call when the parameter changes. This is guaranted to becalled at least once at registration time; you don't need to lookup the parameter another way."
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}