{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Gestures",
      "namespaceUri": "fuse/gestures",
      "packageName": "Fuse.Gestures",
      "packageVersion": "1.8.0-rc2"
    },
    "returns": {
      "href": "fuse/gestures/swipetype",
      "title": "SwipeType",
      "fullyQualifiedTitle": "Fuse.Gestures.SwipeType"
    },
    "values": [
      {
        "uri": "fuse/gestures/swipetype/simple",
        "title": "Simple",
        "comment": {
          "brief": "Swipes are completed when the pointer is released\nafter the user has swiped over the entire distance of the @SwipeGesture.",
          "full": "Swipes are completed when the pointer is released\nafter the user has swiped over the entire distance of the @SwipeGesture."
        }
      },
      {
        "uri": "fuse/gestures/swipetype/active",
        "title": "Active",
        "comment": {
          "brief": "Swiping toggles between an active/inactive state.",
          "full": "Swiping toggles between an active/inactive state.\n\nThe @WhileSwipeActive trigger will be active while its source @SwipeGesture has `Type=\"Active\"`\nand has been swiped to its active state.\n\nWe can alter the state of an Active-type @SwipeGesture using\n[SetSwipeActive](api:fuse/gestures/setswipeactive) and/or\n[ToggleSwipeActive](api:fuse/gestures/toggleswipeactive)."
        }
      },
      {
        "uri": "fuse/gestures/swipetype/auto",
        "title": "Auto",
        "comment": {
          "brief": "Swipes are completed when the user has swiped over the entire distance of the @SwipeGesture,\nand further swipes can be initiated without releasing the pointer.",
          "full": "Swipes are completed when the user has swiped over the entire distance of the @SwipeGesture,\nand further swipes can be initiated without releasing the pointer.\n\nSwipes in the same direction cannot be activated in sequence: Left-Left is excluded, but Left-Up-Left would be triggered."
        }
      }
    ],
    "id": {
      "id": "fuse/gestures/swipetype/active",
      "parentId": "fuse/gestures/swipetype",
      "type": "Literal",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/gestures/swipetype/active",
      "href": "fuse/gestures/swipetype/active"
    },
    "titles": {
      "pageTitle": "SwipeType.Active Literal",
      "navigationTitle": "Active Literal",
      "fullTitle": "Fuse.Gestures.SwipeType.Active",
      "indexTitle": "Active",
      "fullyQualifiedIndexTitle": "Fuse.Gestures.SwipeType.Active"
    },
    "syntax": {
      "uno": "public Fuse.Gestures.SwipeType Active;"
    },
    "comment": {
      "brief": "Swiping toggles between an active/inactive state.",
      "full": "Swiping toggles between an active/inactive state.\n\nThe @WhileSwipeActive trigger will be active while its source @SwipeGesture has `Type=\"Active\"`\nand has been swiped to its active state.\n\nWe can alter the state of an Active-type @SwipeGesture using\n[SetSwipeActive](api:fuse/gestures/setswipeactive) and/or\n[ToggleSwipeActive](api:fuse/gestures/toggleswipeactive)."
    }
  },
  "tableOfContents": {}
}