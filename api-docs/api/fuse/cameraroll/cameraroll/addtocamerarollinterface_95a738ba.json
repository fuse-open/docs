{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.CameraRoll",
      "namespaceUri": "fuse/cameraroll",
      "packageName": "Fuse.CameraRoll",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<bool>",
      "fullyQualifiedTitle": "Uno.Threading.Future<bool>"
    },
    "id": {
      "id": "fuse/cameraroll/cameraroll/addtocamerarollinterface_95a738ba",
      "parentId": "fuse/cameraroll/cameraroll",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/cameraroll/cameraroll/addtocamerarollinterface_95a738ba",
      "href": "fuse/cameraroll/cameraroll/addtocamerarollinterface_95a738ba"
    },
    "titles": {
      "pageTitle": "CameraRoll.AddToCameraRollInterface Method (object[])",
      "navigationTitle": "AddToCameraRollInterface Method (object[])",
      "fullTitle": "Fuse.CameraRoll.CameraRoll.AddToCameraRollInterface",
      "indexTitle": "AddToCameraRollInterface(object[])",
      "fullyQualifiedIndexTitle": "Fuse.CameraRoll.CameraRoll.AddToCameraRollInterface(object[])"
    },
    "syntax": {
      "uno": "private static Uno.Threading.Future<bool> AddToCameraRollInterface(object[] args) {}"
    },
    "comment": {
      "brief": "Adds a copy of the Image instance to the system camera roll.",
      "full": "Adds a copy of the Image instance to the system camera roll.\n\nOn Android this is done by copying the image to the application's public image\nstorage directory and notifying the media scanner.\n\nOn iOS this is done by uploading a copy of the image to an asset collection\nnamed after the application within the system photo library.",
      "attributes": {
        "scriptMethod": {
          "name": "publishImage",
          "parameters": [
            "image"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "a Promise that resolves to `true` when/if the publish completed"
        },
        "parameters": [
          {
            "name": "image",
            "typeHint": "Object",
            "description": "The image to publish"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}