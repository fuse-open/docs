{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Triggers",
      "namespaceUri": "fuse/triggers",
      "packageName": "Fuse.Controls.ScrollView",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "s",
        "href": "fuse/triggers/scrolled",
        "title": "Scrolled",
        "fullyQualifiedTitle": "Fuse.Triggers.Scrolled"
      }
    ],
    "id": {
      "id": "fuse/triggers/scrolled/check_149e4102",
      "parentId": "fuse/triggers/scrolled",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/triggers/scrolled/check_149e4102",
      "href": "fuse/triggers/scrolled/check_149e4102"
    },
    "titles": {
      "pageTitle": "Scrolled.check Method (Scrolled)",
      "navigationTitle": "check Method (Scrolled)",
      "fullTitle": "Fuse.Triggers.Scrolled.check",
      "indexTitle": "check(Scrolled)",
      "fullyQualifiedIndexTitle": "Fuse.Triggers.Scrolled.check(Fuse.Triggers.Scrolled)"
    },
    "syntax": {
      "uno": "private static voidcheck(Fuse.Triggers.Scrolled s) {}"
    },
    "comment": {
      "brief": "Checks if the scrollView is currently scrolled to within the target region and then pulses the trigger.",
      "full": "Checks if the scrollView is currently scrolled to within the target region and then pulses the trigger.\n\nThis can be used as part of a self-loading/infinite ScrollView, for example when new content is loaded when the user scrolls to the end. `check()` forces the trigger to fire if it's still in the trigger zone after that new content is added.",
      "attributes": {
        "scriptMethod": {
          "name": "check",
          "parameters": [
            ""
          ]
        }
      }
    }
  },
  "tableOfContents": {}
}