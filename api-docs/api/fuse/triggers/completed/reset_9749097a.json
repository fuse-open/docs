{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Triggers",
      "namespaceUri": "fuse/triggers",
      "packageName": "Fuse.Triggers",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "cp",
        "href": "fuse/triggers/completed",
        "title": "Completed",
        "fullyQualifiedTitle": "Fuse.Triggers.Completed"
      }
    ],
    "id": {
      "id": "fuse/triggers/completed/reset_9749097a",
      "parentId": "fuse/triggers/completed",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/triggers/completed/reset_9749097a",
      "href": "fuse/triggers/completed/reset_9749097a"
    },
    "titles": {
      "pageTitle": "Completed.reset Method (Completed)",
      "navigationTitle": "reset Method (Completed)",
      "fullTitle": "Fuse.Triggers.Completed.reset",
      "indexTitle": "reset(Completed)",
      "fullyQualifiedIndexTitle": "Fuse.Triggers.Completed.reset(Fuse.Triggers.Completed)"
    },
    "syntax": {
      "uno": "private static voidreset(Fuse.Triggers.Completed cp) {}"
    },
    "comment": {
      "brief": "Resets the `Completed` trigger allowing it to trigger again.",
      "full": "Resets the `Completed` trigger allowing it to trigger again.\n\nThis can be useful when you modify many variables that are bound to the UX. You can reset an existing `Completed` trigger, allowing it to pulse again once the results of all those new variables have been reflected in the UI.",
      "attributes": {
        "scriptMethod": {
          "name": "reset",
          "parameters": [
            ""
          ]
        }
      }
    }
  },
  "tableOfContents": {}
}