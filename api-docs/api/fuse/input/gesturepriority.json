{
  "entity": {
    "base": {
      "id": {
        "id": "uno/int",
        "parentId": "uno",
        "type": "Struct",
        "modifiers": [
          "public",
          "intrinsic"
        ]
      },
      "uri": {
        "idUri": "uno/int",
        "href": "uno/int"
      },
      "titles": {
        "indexTitle": "int",
        "fullyQualifiedIndexTitle": "int"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Input",
      "namespaceUri": "fuse/input",
      "packageName": "Fuse.Nodes",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "uno/int",
            "title": "int",
            "children": [
              {
                "uri": "fuse/input/gesturepriority",
                "title": "Fuse.Input.GesturePriority",
                "children": [],
                "isCurrent": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "values": [
      {
        "uri": "fuse/input/gesturepriority/lowest",
        "title": "Lowest",
        "comment": {
          "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
          "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        }
      },
      {
        "uri": "fuse/input/gesturepriority/low",
        "title": "Low",
        "comment": {
          "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
          "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        }
      },
      {
        "uri": "fuse/input/gesturepriority/normal",
        "title": "Normal",
        "comment": {
          "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
          "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        }
      },
      {
        "uri": "fuse/input/gesturepriority/high",
        "title": "High",
        "comment": {
          "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
          "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        }
      },
      {
        "uri": "fuse/input/gesturepriority/highest",
        "title": "Highest",
        "comment": {
          "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
          "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
          "attributes": {
            "advanced": true,
            "experimental": true
          }
        }
      }
    ],
    "id": {
      "id": "fuse/input/gesturepriority",
      "parentId": "fuse/input",
      "type": "Enum",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/input/gesturepriority",
      "href": "fuse/input/gesturepriority"
    },
    "titles": {
      "pageTitle": "GesturePriority Enum",
      "navigationTitle": "GesturePriority Enum",
      "fullTitle": "Fuse.Input.GesturePriority",
      "indexTitle": "GesturePriority",
      "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority"
    },
    "syntax": {
      "uno": "public enum GesturePriority : int {}"
    },
    "comment": {
      "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
      "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
      "attributes": {
        "advanced": true,
        "experimental": true
      }
    }
  },
  "tableOfContents": {
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/input/gesturepriority",
            "parentId": "fuse/input",
            "type": "Enum",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/input/gesturepriority",
            "href": "fuse/input/gesturepriority"
          },
          "titles": {
            "indexTitle": "GesturePriority",
            "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "flag",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/hasflag_98c933fd",
              "parentId": "fuse/input/gesturepriority",
              "type": "Method",
              "modifiers": [
                "public",
                "intrinsic",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/hasflag_98c933fd",
              "href": "fuse/input/gesturepriority/hasflag_98c933fd"
            },
            "titles": {
              "indexTitle": "HasFlag(GesturePriority)",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.HasFlag(Fuse.Input.GesturePriority)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/equals_a09c80e3",
              "parentId": "fuse/input/gesturepriority",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/input/gesturepriority/gethashcode",
              "parentId": "fuse/input/gesturepriority",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/input/gesturepriority/gettype",
              "parentId": "fuse/input/gesturepriority",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/input/gesturepriority/tostring",
              "parentId": "fuse/input/gesturepriority",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ],
    "operators": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/input/gesturepriority",
            "parentId": "fuse/input",
            "type": "Enum",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/input/gesturepriority",
            "href": "fuse/input/gesturepriority"
          },
          "titles": {
            "indexTitle": "GesturePriority",
            "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority"
          }
        },
        "items": [
          {
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "parameters": [
              {
                "name": "operand",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_onescomplement_98c933fd",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_onescomplement_98c933fd",
              "href": "fuse/input/gesturepriority/op_onescomplement_98c933fd"
            },
            "titles": {
              "indexTitle": "~ GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.~ GesturePriority"
            }
          },
          {
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_subtraction_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_subtraction_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_subtraction_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority - GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority - GesturePriority"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_inequality_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_inequality_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_inequality_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority != GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority != GesturePriority"
            }
          },
          {
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_bitwiseand_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_bitwiseand_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_bitwiseand_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority & GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority & GesturePriority"
            }
          },
          {
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_exclusiveor_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_exclusiveor_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_exclusiveor_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority ^ GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority ^ GesturePriority"
            }
          },
          {
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_bitwiseor_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_bitwiseor_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_bitwiseor_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority | GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority | GesturePriority"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "left",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              },
              {
                "name": "right",
                "href": "fuse/input/gesturepriority",
                "title": "GesturePriority",
                "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
              }
            ],
            "id": {
              "id": "fuse/input/gesturepriority/op_equality_89ba8d3d",
              "parentId": "fuse/input/gesturepriority",
              "type": "Operator",
              "modifiers": [
                "public",
                "intrinsic",
                "static",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/op_equality_89ba8d3d",
              "href": "fuse/input/gesturepriority/op_equality_89ba8d3d"
            },
            "titles": {
              "indexTitle": "GesturePriority == GesturePriority",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.GesturePriority == GesturePriority"
            }
          }
        ]
      }
    ],
    "literals": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/input/gesturepriority",
            "parentId": "fuse/input",
            "type": "Enum",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/input/gesturepriority",
            "href": "fuse/input/gesturepriority"
          },
          "titles": {
            "indexTitle": "GesturePriority",
            "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
              "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
              "attributes": {
                "advanced": true,
                "experimental": true
              }
            },
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "id": {
              "id": "fuse/input/gesturepriority/high",
              "parentId": "fuse/input/gesturepriority",
              "type": "Literal",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/high",
              "href": "fuse/input/gesturepriority/high"
            },
            "titles": {
              "indexTitle": "High",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.High"
            }
          },
          {
            "comment": {
              "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
              "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
              "attributes": {
                "advanced": true,
                "experimental": true
              }
            },
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "id": {
              "id": "fuse/input/gesturepriority/highest",
              "parentId": "fuse/input/gesturepriority",
              "type": "Literal",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/highest",
              "href": "fuse/input/gesturepriority/highest"
            },
            "titles": {
              "indexTitle": "Highest",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.Highest"
            }
          },
          {
            "comment": {
              "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
              "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
              "attributes": {
                "advanced": true,
                "experimental": true
              }
            },
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "id": {
              "id": "fuse/input/gesturepriority/low",
              "parentId": "fuse/input/gesturepriority",
              "type": "Literal",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/low",
              "href": "fuse/input/gesturepriority/low"
            },
            "titles": {
              "indexTitle": "Low",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.Low"
            }
          },
          {
            "comment": {
              "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
              "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
              "attributes": {
                "advanced": true,
                "experimental": true
              }
            },
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "id": {
              "id": "fuse/input/gesturepriority/lowest",
              "parentId": "fuse/input/gesturepriority",
              "type": "Literal",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/lowest",
              "href": "fuse/input/gesturepriority/lowest"
            },
            "titles": {
              "indexTitle": "Lowest",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.Lowest"
            }
          },
          {
            "comment": {
              "brief": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.",
              "full": "Priority helps determine which gesture to select if multiple gestures can be captured by the same pointer input.  This applies when two or more gestures are both matching the current user input (such as a Swipe, ScrollView, and Slider all handling a swipe to the right). The item with the highest priority will be used.\n\nThis is not a strict ordering: lower priority gestures can still become active if their `Significance` value is sufficiently higher than a higher priority gesture. The one with more signficance is generally considered a better match even if low priority.",
              "attributes": {
                "advanced": true,
                "experimental": true
              }
            },
            "returns": {
              "href": "fuse/input/gesturepriority",
              "title": "GesturePriority",
              "fullyQualifiedTitle": "Fuse.Input.GesturePriority"
            },
            "id": {
              "id": "fuse/input/gesturepriority/normal",
              "parentId": "fuse/input/gesturepriority",
              "type": "Literal",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/input/gesturepriority/normal",
              "href": "fuse/input/gesturepriority/normal"
            },
            "titles": {
              "indexTitle": "Normal",
              "fullyQualifiedIndexTitle": "Fuse.Input.GesturePriority.Normal"
            }
          }
        ]
      }
    ]
  }
}