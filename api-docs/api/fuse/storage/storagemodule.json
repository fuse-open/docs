{
  "entity": {
    "base": {
      "id": {
        "id": "fuse/scripting/nativemodule",
        "parentId": "fuse/scripting",
        "type": "Class",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/scripting/nativemodule",
        "href": "fuse/scripting/nativemodule"
      },
      "titles": {
        "indexTitle": "NativeModule",
        "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Storage",
      "namespaceUri": "fuse/storage",
      "packageName": "Fuse.Storage",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "fuse/scripting/module",
            "title": "Fuse.Scripting.Module",
            "children": [
              {
                "uri": "fuse/scripting/nativemodule",
                "title": "Fuse.Scripting.NativeModule",
                "children": [
                  {
                    "uri": "fuse/storage/storagemodule",
                    "title": "Fuse.Storage.StorageModule",
                    "children": [],
                    "isCurrent": true
                  }
                ],
                "isAncestor": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse",
      "uxNamespaceUri": "fuse",
      "uxName": "Storage.StorageModule"
    },
    "implementedInterfaces": [
      {
        "id": {
          "id": "fuse/scripting/imoduleprovider",
          "parentId": "fuse/scripting",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/scripting/imoduleprovider",
          "href": "fuse/scripting/imoduleprovider"
        },
        "titles": {
          "indexTitle": "IModuleProvider",
          "fullyQualifiedIndexTitle": "Fuse.Scripting.IModuleProvider"
        }
      },
      {
        "id": {
          "id": "uno/idisposable",
          "parentId": "uno",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/idisposable",
          "href": "uno/idisposable"
        },
        "titles": {
          "indexTitle": "IDisposable",
          "fullyQualifiedIndexTitle": "Uno.IDisposable"
        }
      }
    ],
    "attributes": [
      {
        "id": {
          "id": "uno/ux/uxglobalmoduleattribute",
          "parentId": "uno/ux",
          "type": "Class",
          "modifiers": [
            "public",
            "sealed"
          ]
        },
        "uri": {
          "idUri": "uno/ux/uxglobalmoduleattribute",
          "href": "uno/ux/uxglobalmoduleattribute"
        },
        "titles": {
          "indexTitle": "UXGlobalModuleAttribute",
          "fullyQualifiedIndexTitle": "Uno.UX.UXGlobalModuleAttribute"
        }
      }
    ],
    "id": {
      "id": "fuse/storage/storagemodule",
      "parentId": "fuse/storage",
      "type": "JsModule",
      "modifiers": [
        "public",
        "sealed"
      ]
    },
    "uri": {
      "idUri": "fuse/storage/storagemodule",
      "href": "fuse/storage/storagemodule"
    },
    "titles": {
      "pageTitle": "StorageModule Class",
      "navigationTitle": "StorageModule Class",
      "fullTitle": "Fuse.Storage.StorageModule",
      "indexTitle": "StorageModule",
      "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule"
    },
    "syntax": {
      "uno": "[Uno.UX.UXGlobalModule]\r\npublic sealed class StorageModule : Fuse.Scripting.NativeModule {}",
      "ux": "<Storage.StorageModule />"
    },
    "comment": {
      "brief": "The storage API allows you to read from and write to files in the application directory.",
      "full": "The storage API allows you to read from and write to files in the application directory.\n\n    var Storage = require(\"FuseJS/Storage\");\n\nCheck out the individual functions for documentation on how to use them.",
      "attributes": {
        "scriptModule": "FuseJS/Storage"
      }
    }
  },
  "tableOfContents": {
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/storage/storagemodule",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "uxEvents": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/nativemodule",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/nativemodule",
            "href": "fuse/scripting/nativemodule"
          },
          "titles": {
            "indexTitle": "NativeModule",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/eventhandler",
              "title": "EventHandler (object, EventArgs)",
              "fullyQualifiedTitle": "Uno.EventHandler (object, Uno.EventArgs)"
            },
            "id": {
              "id": "fuse/storage/storagemodule/reset",
              "parentId": "fuse/storage/storagemodule",
              "type": "UxEvent",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/reset",
              "href": "fuse/scripting/nativemodule/reset",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Reset",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule.Reset"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/eventhandler",
              "title": "EventHandler (object, EventArgs)",
              "fullyQualifiedTitle": "Uno.EventHandler (object, Uno.EventArgs)"
            },
            "id": {
              "id": "fuse/storage/storagemodule/evaluated",
              "parentId": "fuse/storage/storagemodule",
              "type": "UxEvent",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/evaluated",
              "href": "fuse/scripting/module/evaluated",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluated",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluated"
            }
          }
        ]
      }
    ],
    "jsMethods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/storage/storagemodule",
            "parentId": "fuse/storage",
            "type": "JsModule",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/storage/storagemodule",
            "href": "fuse/storage/storagemodule"
          },
          "titles": {
            "indexTitle": "StorageModule",
            "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Synchrounously deletes a file inside the application folder.",
              "full": "Synchrounously deletes a file inside the application folder.\n\n    var Storage = require(\"FuseJS/Storage\");\n\n    var success = Storage.deleteSync(\"uselessFile.txt\");\n    if(success) {\n        console.log(\"Deleted file\");\n    }\n    else {\n        console.log(\"An error occured!\");\n    }\n\n> Warning: This call will block until the operation is finished.",
              "attributes": {
                "scriptMethod": {
                  "name": "deleteSync",
                  "parameters": [
                    "filename"
                  ]
                },
                "returns": {
                  "typeHint": "boolean",
                  "text": "`true` if the file was deleted, `false` otherwise."
                },
                "parameters": [
                  {
                    "name": "filename",
                    "typeHint": "String",
                    "description": "The file to delete"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/delete_bbef95e2",
              "parentId": "fuse/storage/storagemodule",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/delete_bbef95e2",
              "href": "fuse/storage/storagemodule/delete_bbef95e2"
            },
            "titles": {
              "indexTitle": "Delete(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.Delete(Fuse.Scripting.Context, object[])"
            }
          },
          {
            "comment": {
              "brief": "Synchrounously reads data from a file inside the application folder.",
              "full": "Synchrounously reads data from a file inside the application folder.\n\n    var Storage = require(\"FuseJS/Storage\");\n\n    var contents = Storage.readSync(\"myfile.txt\");\n    console.log(contents);\n\n> Warning: This call will block until the operation is finished. Use read() if you are reading large amounts of data.",
              "attributes": {
                "scriptMethod": {
                  "name": "readSync",
                  "parameters": [
                    "filename"
                  ]
                },
                "returns": {
                  "typeHint": "String",
                  "text": "The contents of the file"
                },
                "parameters": [
                  {
                    "name": "filename",
                    "typeHint": "String",
                    "description": "The file to read from"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/read_bbef95e2",
              "parentId": "fuse/storage/storagemodule",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/read_bbef95e2",
              "href": "fuse/storage/storagemodule/read_bbef95e2"
            },
            "titles": {
              "indexTitle": "Read(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.Read(Fuse.Scripting.Context, object[])"
            }
          },
          {
            "comment": {
              "brief": "Asynchronously reads a file and returns a promise of its contents.",
              "full": "Asynchronously reads a file and returns a promise of its contents.\n\n    var Storage = require(\"FuseJS/Storage\");\n\n    Storage.read(\"myfile.txt\")\n        .then(function(contents) {\n            console.log(contents);\n        }, function(error) {\n            console.log(error);\n        });",
              "attributes": {
                "scriptMethod": {
                  "name": "read",
                  "parameters": [
                    "filename"
                  ]
                },
                "returns": {
                  "typeHint": "Promise",
                  "text": "A promise of the file's contents."
                },
                "parameters": [
                  {
                    "name": "filename",
                    "typeHint": "String",
                    "description": "The file to read"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/threading/future_1",
              "title": "Future<string>",
              "fullyQualifiedTitle": "Uno.Threading.Future<string>"
            },
            "parameters": [
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/readasync_95a738ba",
              "parentId": "fuse/storage/storagemodule",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/readasync_95a738ba",
              "href": "fuse/storage/storagemodule/readasync_95a738ba"
            },
            "titles": {
              "indexTitle": "ReadAsync(object[])",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.ReadAsync(object[])"
            }
          },
          {
            "comment": {
              "brief": "Synchrounously writes data to a file inside the application folder.",
              "full": "Synchrounously writes data to a file inside the application folder.\n\n    var Storage = require(\"FuseJS/Storage\");\n\n    var success = Storage.writeSync(\"myfile.txt\", \"Hello from Fuse!\");\n    if(success) {\n        console.log(\"Successfully wrote to file\");\n    }\n    else {\n        console.log(\"An error occured!\");\n    }\n\n> Warning: This call will block until the operation is finished. Use write() if you are writing large amounts of data.",
              "attributes": {
                "scriptMethod": {
                  "name": "writeSync",
                  "parameters": [
                    "filename",
                    "contents"
                  ]
                },
                "returns": {
                  "typeHint": "boolean",
                  "text": "`true` if the write was successful, `false` otherwise"
                },
                "parameters": [
                  {
                    "name": "filename",
                    "typeHint": "String",
                    "description": "The file to write to"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/write_bbef95e2",
              "parentId": "fuse/storage/storagemodule",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/write_bbef95e2",
              "href": "fuse/storage/storagemodule/write_bbef95e2"
            },
            "titles": {
              "indexTitle": "Write(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.Write(Fuse.Scripting.Context, object[])"
            }
          },
          {
            "comment": {
              "brief": "Asynchronously writes to a file.",
              "full": "Asynchronously writes to a file.\n\n    var Storage = require(\"FuseJS/Storage\");\n\n    Storage.write(\"myfile.txt\", \"Hello from Fuse!\")\n        .then(function(succeeded) {\n            if(succeeded) {\n                console.log(\"Successfully wrote to file\");\n            }\n            else {\n                console.log(\"Couldn't write to file.\");\n            }\n        });",
              "attributes": {
                "scriptMethod": {
                  "name": "write",
                  "parameters": [
                    "filename",
                    "contents"
                  ]
                },
                "returns": {
                  "typeHint": "Promise",
                  "text": "A promise of a boolean, which will be `true` if the write succeeded."
                },
                "parameters": [
                  {
                    "name": "filename",
                    "typeHint": "String",
                    "description": "The file to write to"
                  },
                  {
                    "name": "contents",
                    "typeHint": "String",
                    "description": "The contents to write to the file"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/threading/future_1",
              "title": "Future<bool>",
              "fullyQualifiedTitle": "Uno.Threading.Future<bool>"
            },
            "parameters": [
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/writeasync_95a738ba",
              "parentId": "fuse/storage/storagemodule",
              "type": "JsMethod",
              "modifiers": [
                "private",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/writeasync_95a738ba",
              "href": "fuse/storage/storagemodule/writeasync_95a738ba"
            },
            "titles": {
              "indexTitle": "WriteAsync(object[])",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.WriteAsync(object[])"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/storage/storagemodule",
            "parentId": "fuse/storage",
            "type": "JsModule",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/storage/storagemodule",
            "href": "fuse/storage/storagemodule"
          },
          "titles": {
            "indexTitle": "StorageModule",
            "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule"
          }
        },
        "items": [
          {
            "id": {
              "id": "fuse/storage/storagemodule/_ctor",
              "parentId": "fuse/storage/storagemodule",
              "type": "Constructor",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/_ctor",
              "href": "fuse/storage/storagemodule/_ctor"
            },
            "titles": {
              "indexTitle": "StorageModule",
              "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.StorageModule"
            }
          }
        ]
      }
    ],
    "properties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/storage/storagemodule/isevaluated",
              "parentId": "fuse/storage/storagemodule",
              "type": "Property",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/isevaluated",
              "href": "fuse/scripting/module/isevaluated",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsEvaluated",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.IsEvaluated"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/nativemodule",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/nativemodule",
            "href": "fuse/scripting/nativemodule"
          },
          "titles": {
            "indexTitle": "NativeModule",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "member",
                "href": "fuse/scripting/nativemember",
                "title": "NativeMember",
                "fullyQualifiedTitle": "Fuse.Scripting.NativeMember"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/addmember_645dc1d4",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/addmember_645dc1d4",
              "href": "fuse/scripting/nativemodule/addmember_645dc1d4",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddMember(NativeMember)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule.AddMember(Fuse.Scripting.NativeMember)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "id": {
              "id": "fuse/storage/storagemodule/dispose",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/dispose",
              "href": "fuse/scripting/module/dispose",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Dispose",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Dispose"
            }
          },
          {
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "result",
                "href": "fuse/scripting/moduleresult",
                "title": "ModuleResult",
                "fullyQualifiedTitle": "Fuse.Scripting.ModuleResult"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/evaluate_0c699bd3",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/evaluate_0c699bd3",
              "href": "fuse/scripting/module/evaluate_0c699bd3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluate(Context, ModuleResult)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluate(Fuse.Scripting.Context, Fuse.Scripting.ModuleResult)"
            }
          },
          {
            "returns": {
              "href": "fuse/scripting/moduleresult",
              "title": "ModuleResult",
              "fullyQualifiedTitle": "Fuse.Scripting.ModuleResult"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "id",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/evaluate_8fde98fd",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/evaluate_8fde98fd",
              "href": "fuse/scripting/module/evaluate_8fde98fd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluate(Context, string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluate(Fuse.Scripting.Context, string)"
            }
          },
          {
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "id",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/evaluateexports_8fde98fd",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/evaluateexports_8fde98fd",
              "href": "fuse/scripting/module/evaluateexports_8fde98fd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EvaluateExports(Context, string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.EvaluateExports(Fuse.Scripting.Context, string)"
            }
          },
          {
            "comment": {
              "brief": "Returns the file source that will be watched by the Context for changes in Fuse preview.\nOverride in subclasses and return correct file source to support live updates\nin Fuse preview.",
              "full": "Returns the file source that will be watched by the Context for changes in Fuse preview.\nOverride in subclasses and return correct file source to support live updates\nin Fuse preview."
            },
            "returns": {
              "href": "uno/ux/filesource",
              "title": "FileSource",
              "fullyQualifiedTitle": "Uno.UX.FileSource"
            },
            "id": {
              "id": "fuse/storage/storagemodule/getfile",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/getfile",
              "href": "fuse/scripting/module/getfile",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetFile",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.GetFile"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/storage/storagemodule/equals_a09c80e3",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/storage/storagemodule/gethashcode",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/storage/storagemodule/gettype",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/storage/storagemodule/tostring",
              "parentId": "fuse/storage/storagemodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/storage/storagemodule/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ]
  }
}