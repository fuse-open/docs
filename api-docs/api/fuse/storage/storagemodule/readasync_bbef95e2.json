{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Storage",
      "namespaceUri": "fuse/storage",
      "packageName": "Fuse.Storage",
      "packageVersion": "2.9.1"
    },
    "parameters": [
      {
        "name": "c",
        "href": "fuse/scripting/context",
        "title": "Context",
        "fullyQualifiedTitle": "Fuse.Scripting.Context"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<string>",
      "fullyQualifiedTitle": "Uno.Threading.Future<string>"
    },
    "id": {
      "id": "fuse/storage/storagemodule/readasync_bbef95e2",
      "parentId": "fuse/storage/storagemodule",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/storage/storagemodule/readasync_bbef95e2",
      "href": "fuse/storage/storagemodule/readasync_bbef95e2"
    },
    "titles": {
      "pageTitle": "StorageModule.ReadAsync Method (Context, object[])",
      "navigationTitle": "ReadAsync Method (Context, object[])",
      "fullTitle": "Fuse.Storage.StorageModule.ReadAsync",
      "indexTitle": "ReadAsync(Context, object[])",
      "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.ReadAsync(Fuse.Scripting.Context, object[])"
    },
    "syntax": {
      "uno": "private static Uno.Threading.Future<string> ReadAsync(Fuse.Scripting.Context c, object[] args) {}"
    },
    "comment": {
      "brief": "Asynchronously reads a file and returns a promise of its contents.",
      "full": "Asynchronously reads a file and returns a promise of its contents.\n\n```js\n    var Storage = require(\"FuseJS/Storage\");\n\n    Storage.read(\"myfile.txt\")\n        .then(function(contents) {\n            console.log(contents);\n        }, function(error) {\n            console.log(error);\n        });\n```",
      "attributes": {
        "scriptMethod": {
          "name": "read",
          "parameters": [
            "filename"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "A promise of the file's contents."
        },
        "parameters": [
          {
            "name": "filename",
            "typeHint": "String",
            "description": "The file to read"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}