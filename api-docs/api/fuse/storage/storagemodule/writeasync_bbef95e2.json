{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Storage",
      "namespaceUri": "fuse/storage",
      "packageName": "Fuse.Storage",
      "packageVersion": "2.8.0"
    },
    "parameters": [
      {
        "name": "c",
        "href": "fuse/scripting/context",
        "title": "Context",
        "fullyQualifiedTitle": "Fuse.Scripting.Context"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<bool>",
      "fullyQualifiedTitle": "Uno.Threading.Future<bool>"
    },
    "id": {
      "id": "fuse/storage/storagemodule/writeasync_bbef95e2",
      "parentId": "fuse/storage/storagemodule",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/storage/storagemodule/writeasync_bbef95e2",
      "href": "fuse/storage/storagemodule/writeasync_bbef95e2"
    },
    "titles": {
      "pageTitle": "StorageModule.WriteAsync Method (Context, object[])",
      "navigationTitle": "WriteAsync Method (Context, object[])",
      "fullTitle": "Fuse.Storage.StorageModule.WriteAsync",
      "indexTitle": "WriteAsync(Context, object[])",
      "fullyQualifiedIndexTitle": "Fuse.Storage.StorageModule.WriteAsync(Fuse.Scripting.Context, object[])"
    },
    "syntax": {
      "uno": "private static Uno.Threading.Future<bool> WriteAsync(Fuse.Scripting.Context c, object[] args) {}"
    },
    "comment": {
      "brief": "Asynchronously writes to a file.",
      "full": "Asynchronously writes to a file.\n\n```js\n    var Storage = require(\"FuseJS/Storage\");\n\n    Storage.write(\"myfile.txt\", \"Hello from Fuse!\")\n        .then(function(succeeded) {\n            if(succeeded) {\n                console.log(\"Successfully wrote to file\");\n            }\n            else {\n                console.log(\"Couldn't write to file.\");\n            }\n        });\n```",
      "attributes": {
        "scriptMethod": {
          "name": "write",
          "parameters": [
            "filename",
            "contents"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "A promise of a boolean, which will be `true` if the write succeeded."
        },
        "parameters": [
          {
            "name": "filename",
            "typeHint": "String",
            "description": "The file to write to"
          },
          {
            "name": "contents",
            "typeHint": "String",
            "description": "The contents to write to the file"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}