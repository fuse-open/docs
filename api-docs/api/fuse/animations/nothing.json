{
  "entity": {
    "base": {
      "id": {
        "id": "fuse/animations/trackanimator",
        "parentId": "fuse/animations",
        "type": "Class",
        "modifiers": [
          "public",
          "abstract"
        ]
      },
      "uri": {
        "idUri": "fuse/animations/trackanimator",
        "href": "fuse/animations/trackanimator"
      },
      "titles": {
        "indexTitle": "TrackAnimator",
        "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Animations",
      "namespaceUri": "fuse/animations",
      "packageName": "Fuse.Animations",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "uno/ux/propertyobject",
            "title": "Uno.UX.PropertyObject",
            "children": [
              {
                "uri": "fuse/animations/animator",
                "title": "Fuse.Animations.Animator",
                "children": [
                  {
                    "uri": "fuse/animations/trackanimator",
                    "title": "Fuse.Animations.TrackAnimator",
                    "children": [
                      {
                        "uri": "fuse/animations/nothing",
                        "title": "Fuse.Animations.Nothing",
                        "children": [],
                        "isCurrent": true
                      }
                    ],
                    "isAncestor": true
                  }
                ],
                "isAncestor": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse.Animations",
      "uxNamespaceUri": "fuse/animations",
      "uxName": "Nothing"
    },
    "id": {
      "id": "fuse/animations/nothing",
      "parentId": "fuse/animations",
      "type": "UxClass",
      "modifiers": [
        "public",
        "sealed"
      ]
    },
    "uri": {
      "idUri": "fuse/animations/nothing",
      "href": "fuse/animations/nothing"
    },
    "titles": {
      "pageTitle": "Nothing Class",
      "navigationTitle": "Nothing Class",
      "fullTitle": "Fuse.Animations.Nothing",
      "indexTitle": "Nothing",
      "fullyQualifiedIndexTitle": "Fuse.Animations.Nothing"
    },
    "syntax": {
      "uno": "public sealed class Nothing : Fuse.Animations.TrackAnimator {}",
      "ux": "<Nothing />"
    },
    "comment": {
      "brief": "Allows you to artificially extend the timeline",
      "full": "Allows you to artificially extend the timeline\n\nAll animations for a `Trigger` share a common timeline, which ends when the last animation has completed. In some rare cases, you may want to artificially extend the timeline. This can be done using `Nothing`. Logically, it is a blank animation with a set length, forcing the length of the timeline to be at least the duration of the `Nothing`."
    }
  },
  "tableOfContents": {
    "uxProperties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/animations/trackanimator",
            "parentId": "fuse/animations",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/animations/trackanimator",
            "href": "fuse/animations/trackanimator"
          },
          "titles": {
            "indexTitle": "TrackAnimator",
            "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "How long to wait, from the end of the backward timeline, before the animator starts changing the value.",
              "full": "How long to wait, from the end of the backward timeline, before the animator starts changing the value."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/animations/nothing/delayback",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/delayback",
              "href": "fuse/animations/trackanimator/delayback",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DelayBack",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.DelayBack"
            }
          },
          {
            "comment": {
              "brief": "For a continuous track: The duration of the change of the value.",
              "full": "For a continuous track: The duration of the change of the value."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/animations/nothing/duration",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/duration",
              "href": "fuse/animations/trackanimator/duration",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Duration",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.Duration"
            }
          },
          {
            "comment": {
              "brief": "For a continuous track: The duraciton of the change of the value in the backward timeline.",
              "full": "For a continuous track: The duraciton of the change of the value in the backward timeline."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/animations/nothing/durationback",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/durationback",
              "href": "fuse/animations/trackanimator/durationback",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DurationBack",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.DurationBack"
            }
          },
          {
            "comment": {
              "brief": "For a continuous track: This specifies the transition easing between a source and target value.",
              "full": "For a continuous track: This specifies the transition easing between a source and target value."
            },
            "returns": {
              "href": "fuse/animations/easing",
              "title": "Easing",
              "fullyQualifiedTitle": "Fuse.Animations.Easing"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/animations/nothing/easing",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/easing",
              "href": "fuse/animations/trackanimator/easing",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Easing",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.Easing"
            }
          },
          {
            "comment": {
              "brief": "For a continuous track: This specified the easing for the backward timeline.",
              "full": "For a continuous track: This specified the easing for the backward timeline."
            },
            "returns": {
              "href": "fuse/animations/easing",
              "title": "Easing",
              "fullyQualifiedTitle": "Fuse.Animations.Easing"
            },
            "id": {
              "id": "fuse/animations/nothing/easingback",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/easingback",
              "href": "fuse/animations/trackanimator/easingback",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EasingBack",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.EasingBack"
            }
          },
          {
            "comment": {
              "brief": "Specifies how the @Keyframes are interpolated.",
              "full": "Specifies how the @Keyframes are interpolated."
            },
            "returns": {
              "href": "fuse/animations/keyframeinterpolation",
              "title": "KeyframeInterpolation",
              "fullyQualifiedTitle": "Fuse.Animations.KeyframeInterpolation"
            },
            "id": {
              "id": "fuse/animations/nothing/keyframeinterpolation",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/keyframeinterpolation",
              "href": "fuse/animations/trackanimator/keyframeinterpolation",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "KeyframeInterpolation",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.KeyframeInterpolation"
            }
          },
          {
            "comment": {
              "brief": "The list of keyframes for this animator.",
              "full": "The list of keyframes for this animator.\n\nIf no keyframes are specified, the animator simply uses the @Easing and @Duration properties to determine\ninterpolation between start and end values.\n\nFor the cases where we want to specify several steps for an animation, we can specify keyframes.\n\nExample:\n\n    <Move RelativeTo=\"ParentSize\">\n        <Keyframe X=\"10\" Time=\"0.5\"/>\n        <Keyframe X=\"15\" Time=\"1\"/>\n        <Keyframe X=\"5\" Time=\"2\"/>\n    </Move>\n\nThis @(Move) animator will first animate X to 10 over 0.5 second, then from 10 to 15 over 0.5 second. Finally, it will go from an\nX of 15 to 5 over 1 second.    Here is an example of using @Keyframes with a @Change animator:\n\n    <Page>\n        <SolidColor ux:Name=\"background\" Color=\"#f00\"/>\n        <ActivatingAnimation>\n            <Change Target=\"background.Color\">\n                <Keyframe Value=\"#0f0\" TimeDelta=\"0.25\"/>\n                <Keyframe Value=\"#f00\" TimeDelta=\"0.25\"/>\n                <Keyframe Value=\"#ff0\" TimeDelta=\"0.25\"/>\n                <Keyframe Value=\"#0ff\" TimeDelta=\"0.25\"/>\n            </Change>\n        </ActivatingAnimation>\n    </Page>\n\nThis time we use `TimeDelta` instead of time. With `TimeDelta` we can specify time as a relative term instead of absolute.\nThis means that the order of the @Keyframes matter, but it lets us reason about the keyframes in terms of\ntheir duration instead of their absolute time on the timeline.",
              "attributes": {
                "topic": "Keyframes"
              }
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Keyframe>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Animations.Keyframe>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/animations/nothing/keyframes",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/keyframes",
              "href": "fuse/animations/trackanimator/keyframes",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Keyframes",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.Keyframes"
            }
          },
          {
            "returns": {
              "href": "fuse/animations/itrackprovider",
              "title": "ITrackProvider",
              "fullyQualifiedTitle": "Fuse.Animations.ITrackProvider"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/animations/nothing/provider",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/provider",
              "href": "fuse/animations/trackanimator/provider",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Provider",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.Provider"
            }
          },
          {
            "comment": {
              "brief": "Allows the value set by this animator to be increased or decreased in significance (the default is 1).",
              "full": "Allows the value set by this animator to be increased or decreased in significance (the default is 1).\n\nThis is used for `MixOp=\"Weight\"`. When two animators are active the value of the target attribute will be the weighted average of the applied animators."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/animations/nothing/weight",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/weight",
              "href": "fuse/animations/trackanimator/weight",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Weight",
              "fullyQualifiedIndexTitle": "Fuse.Animations.TrackAnimator.Weight"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/animations/animator",
            "parentId": "fuse/animations",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/animations/animator",
            "href": "fuse/animations/animator"
          },
          "titles": {
            "indexTitle": "Animator",
            "fullyQualifiedIndexTitle": "Fuse.Animations.Animator"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Seconds from the start of the trigger until this animator should play.",
              "full": "Seconds from the start of the trigger until this animator should play.\n\nNote that some triggers are often played backwards in some scenarios. Delay will then be measured\nfrom the end of the animation, to when this animator should be completed."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/animations/nothing/delay",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/delay",
              "href": "fuse/animations/animator/delay",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Delay",
              "fullyQualifiedIndexTitle": "Fuse.Animations.Animator.Delay"
            }
          },
          {
            "comment": {
              "brief": "How to mix this animator when there are multiple conflicting animators affecting the target.",
              "full": "How to mix this animator when there are multiple conflicting animators affecting the target."
            },
            "returns": {
              "href": "fuse/animations/mixop",
              "title": "MixOp",
              "fullyQualifiedTitle": "Fuse.Animations.MixOp"
            },
            "id": {
              "id": "fuse/animations/nothing/mixop",
              "parentId": "fuse/animations/nothing",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/mixop",
              "href": "fuse/animations/animator/mixop",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "MixOp",
              "fullyQualifiedIndexTitle": "Fuse.Animations.Animator.MixOp"
            }
          }
        ]
      }
    ],
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/animations/nothing",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/animations/nothing/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/animations/nothing",
            "parentId": "fuse/animations",
            "type": "UxClass",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/animations/nothing",
            "href": "fuse/animations/nothing"
          },
          "titles": {
            "indexTitle": "Nothing",
            "fullyQualifiedIndexTitle": "Fuse.Animations.Nothing"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Creates a new Nothing",
              "full": "Creates a new Nothing"
            },
            "id": {
              "id": "fuse/animations/nothing/_ctor",
              "parentId": "fuse/animations/nothing",
              "type": "Constructor",
              "modifiers": [
                "public",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/_ctor",
              "href": "fuse/animations/nothing/_ctor"
            },
            "titles": {
              "indexTitle": "Nothing",
              "fullyQualifiedIndexTitle": "Fuse.Animations.Nothing.Nothing"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "uno/ux/propertyobject",
            "parentId": "uno/ux",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "uno/ux/propertyobject",
            "href": "uno/ux/propertyobject"
          },
          "titles": {
            "indexTitle": "PropertyObject",
            "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/addpropertylistener_496a874a",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/addpropertylistener_496a874a",
              "href": "uno/ux/propertyobject/addpropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddPropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.AddPropertyListener(Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/onpropertychanged_16d735f3",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/onpropertychanged_16d735f3",
              "href": "uno/ux/propertyobject/onpropertychanged_16d735f3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/onpropertychanged_6422fe92",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/onpropertychanged_6422fe92",
              "href": "uno/ux/propertyobject/onpropertychanged_6422fe92",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/removepropertylistener_496a874a",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/removepropertylistener_496a874a",
              "href": "uno/ux/propertyobject/removepropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RemovePropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.RemovePropertyListener(Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/animations/nothing/equals_a09c80e3",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/animations/nothing/gethashcode",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/animations/nothing/gettype",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/animations/nothing/tostring",
              "parentId": "fuse/animations/nothing",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ],
    "fields": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/animations/animator",
            "parentId": "fuse/animations",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/animations/animator",
            "href": "fuse/animations/animator"
          },
          "titles": {
            "indexTitle": "Animator",
            "fullyQualifiedIndexTitle": "Fuse.Animations.Animator"
          }
        },
        "items": [
          {
            "returns": {
              "href": "fuse/animations/imixer",
              "title": "IMixer",
              "fullyQualifiedTitle": "Fuse.Animations.IMixer"
            },
            "id": {
              "id": "fuse/animations/nothing/mixer",
              "parentId": "fuse/animations/nothing",
              "type": "Field",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/animations/nothing/mixer",
              "href": "fuse/animations/animator/mixer",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Mixer",
              "fullyQualifiedIndexTitle": "Fuse.Animations.Animator.Mixer"
            }
          }
        ]
      }
    ]
  }
}