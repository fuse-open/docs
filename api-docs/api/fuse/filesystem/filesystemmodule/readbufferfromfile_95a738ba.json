{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.FileSystem",
      "namespaceUri": "fuse/filesystem",
      "packageName": "Fuse.FileSystem",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<byte[]>",
      "fullyQualifiedTitle": "Uno.Threading.Future<byte[]>"
    },
    "id": {
      "id": "fuse/filesystem/filesystemmodule/readbufferfromfile_95a738ba",
      "parentId": "fuse/filesystem/filesystemmodule",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fuse/filesystem/filesystemmodule/readbufferfromfile_95a738ba",
      "href": "fuse/filesystem/filesystemmodule/readbufferfromfile_95a738ba"
    },
    "titles": {
      "pageTitle": "FileSystemModule.ReadBufferFromFile Method (object[])",
      "navigationTitle": "ReadBufferFromFile Method (object[])",
      "fullTitle": "Fuse.FileSystem.FileSystemModule.ReadBufferFromFile",
      "indexTitle": "ReadBufferFromFile(object[])",
      "fullyQualifiedIndexTitle": "Fuse.FileSystem.FileSystemModule.ReadBufferFromFile(object[])"
    },
    "syntax": {
      "uno": "private Uno.Threading.Future<byte[]> ReadBufferFromFile(object[] args) {}"
    },
    "comment": {
      "brief": "Asynchronously reads a file and returns a Promise of an ArrayBuffer with its contents.",
      "full": "Asynchronously reads a file and returns a Promise of an ArrayBuffer with its contents.\n\n## Example\n\n    var FileSystem = require(\"FuseJS/FileSystem\");\n\n    FileSystem.readBufferFromFile(\"myfile.txt\")\n        .then(function(contents) {\n            console.log(contents);\n        }, function(error) {\n            console.log(error);\n        });",
      "attributes": {
        "scriptMethod": {
          "name": "readBufferFromFile",
          "parameters": [
            "filename"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "A Promise of the file's contents as an ArrayBuffer."
        },
        "parameters": [
          {
            "name": "filename",
            "typeHint": "String",
            "description": "Path to file"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}