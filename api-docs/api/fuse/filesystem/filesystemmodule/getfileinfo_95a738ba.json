{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.FileSystem",
      "namespaceUri": "fuse/filesystem",
      "packageName": "Fuse.FileSystem",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<FileSystemInfo>",
      "fullyQualifiedTitle": "Uno.Threading.Future<Uno.IO.FileSystemInfo>"
    },
    "id": {
      "id": "fuse/filesystem/filesystemmodule/getfileinfo_95a738ba",
      "parentId": "fuse/filesystem/filesystemmodule",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fuse/filesystem/filesystemmodule/getfileinfo_95a738ba",
      "href": "fuse/filesystem/filesystemmodule/getfileinfo_95a738ba"
    },
    "titles": {
      "pageTitle": "FileSystemModule.GetFileInfo Method (object[])",
      "navigationTitle": "GetFileInfo Method (object[])",
      "fullTitle": "Fuse.FileSystem.FileSystemModule.GetFileInfo",
      "indexTitle": "GetFileInfo(object[])",
      "fullyQualifiedIndexTitle": "Fuse.FileSystem.FileSystemModule.GetFileInfo(object[])"
    },
    "syntax": {
      "uno": "private Uno.Threading.Future<Uno.IO.FileSystemInfo> GetFileInfo(object[] args) {}"
    },
    "comment": {
      "brief": "Asynchronously gets info about a file.",
      "full": "Asynchronously gets info about a file.\n\nThe returned object has the following properties:\n\n* `size` –  size of file\n* `exists` –  a boolean value stating whether file exists\n* `lastWriteTime` –  A `Date` stating when file was last changed\n* `lastAccessTime` –  A `Date` stating when file was accessed\n\n## Example\n\n    var FileSystem = require(\"FuseJS/FileSystem\");\n\n    FileSystem.writeTextToFileSync(\"some-file.txt\", \"hello there\");\n    FileSystem.getFileInfo(\"some-file.txt\")\n        .then(function(fileInfo) {\n            console.log(\"file was modified on \" + fileInfo.lastWriteTime);\n        })\n        .catch(function(error) {\n            \"failed stat \" + error\n        });",
      "attributes": {
        "scriptMethod": {
          "name": "getFileInfo",
          "parameters": [
            "path"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "A Promise of an object containing info about the file."
        },
        "parameters": [
          {
            "name": "path",
            "typeHint": "String",
            "description": "Path to a file"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}