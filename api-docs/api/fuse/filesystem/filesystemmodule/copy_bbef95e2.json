{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.FileSystem",
      "namespaceUri": "fuse/filesystem",
      "packageName": "Fuse.FileSystem",
      "packageVersion": "2.9.1"
    },
    "parameters": [
      {
        "name": "context",
        "href": "fuse/scripting/context",
        "title": "Context",
        "fullyQualifiedTitle": "Fuse.Scripting.Context"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<Nothing>",
      "fullyQualifiedTitle": "Uno.Threading.Future<Fuse.FileSystem.Nothing>"
    },
    "id": {
      "id": "fuse/filesystem/filesystemmodule/copy_bbef95e2",
      "parentId": "fuse/filesystem/filesystemmodule",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fuse/filesystem/filesystemmodule/copy_bbef95e2",
      "href": "fuse/filesystem/filesystemmodule/copy_bbef95e2"
    },
    "titles": {
      "pageTitle": "FileSystemModule.Copy Method (Context, object[])",
      "navigationTitle": "Copy Method (Context, object[])",
      "fullTitle": "Fuse.FileSystem.FileSystemModule.Copy",
      "indexTitle": "Copy(Context, object[])",
      "fullyQualifiedIndexTitle": "Fuse.FileSystem.FileSystemModule.Copy(Fuse.Scripting.Context, object[])"
    },
    "syntax": {
      "uno": "private Uno.Threading.Future<Fuse.FileSystem.Nothing> Copy(Fuse.Scripting.Context context, object[] args) {}"
    },
    "comment": {
      "brief": "Asynchronously copies a file or directory recursively from source to destination path",
      "full": "Asynchronously copies a file or directory recursively from source to destination path\n\n## Example\n```js\n    FileSystem = require(\"FuseJS/FileSystem\");\n\n    FileSystem.writeTextToFile(\"to-be-copied.txt\", \"hello world\")\n        .then(function() {\n            return FileSystem.copy(\"to-be-copied.txt\", \"destination-reached.txt\");\n        })\n        .catch(function(err) {\n            console.log(\"Unable to copy file\");\n        });\n```",
      "attributes": {
        "scriptMethod": {
          "name": "copy",
          "parameters": [
            "source",
            "destination"
          ]
        },
        "returns": {
          "text": "Promise of nothing"
        },
        "parameters": [
          {
            "name": "source",
            "typeHint": "String",
            "description": "Source path"
          },
          {
            "name": "destination",
            "typeHint": "String",
            "description": "Destination path"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}