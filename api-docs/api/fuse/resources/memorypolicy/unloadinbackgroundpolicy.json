{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Resources",
      "namespaceUri": "fuse/resources",
      "packageName": "Fuse.Common",
      "packageVersion": "1.8.0-rc2"
    },
    "returns": {
      "href": "fuse/resources/memorypolicy",
      "title": "MemoryPolicy",
      "fullyQualifiedTitle": "Fuse.Resources.MemoryPolicy"
    },
    "attributes": [
      {
        "parameters": [
          "UnloadInBackground"
        ],
        "id": {
          "id": "uno/ux/uxglobalresourceattribute",
          "parentId": "uno/ux",
          "type": "Class",
          "modifiers": [
            "public",
            "sealed"
          ]
        },
        "uri": {
          "idUri": "uno/ux/uxglobalresourceattribute",
          "href": "uno/ux/uxglobalresourceattribute"
        },
        "titles": {
          "indexTitle": "UXGlobalResourceAttribute",
          "fullyQualifiedIndexTitle": "Uno.UX.UXGlobalResourceAttribute"
        }
      }
    ],
    "id": {
      "id": "fuse/resources/memorypolicy/unloadinbackgroundpolicy",
      "parentId": "fuse/resources/memorypolicy",
      "type": "Field",
      "modifiers": [
        "public",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/resources/memorypolicy/unloadinbackgroundpolicy",
      "href": "fuse/resources/memorypolicy/unloadinbackgroundpolicy"
    },
    "titles": {
      "pageTitle": "MemoryPolicy.UnloadInBackgroundPolicy Field",
      "navigationTitle": "UnloadInBackgroundPolicy Field",
      "fullTitle": "Fuse.Resources.MemoryPolicy.UnloadInBackgroundPolicy",
      "indexTitle": "UnloadInBackgroundPolicy",
      "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnloadInBackgroundPolicy"
    },
    "syntax": {
      "uno": "[Uno.UX.UXGlobalResource(alias = \"UnloadInBackground\")]\r\npublic static Fuse.Resources.MemoryPolicy UnloadInBackgroundPolicy;"
    },
    "comment": {
      "brief": "Unloads the resource only when going into the background. This is meant primarily for internal resource use, where there is an alternate mechanism for cleaning unused items. Using it on high level resources, like Image, might cause memory exhaustion problems.",
      "full": "Unloads the resource only when going into the background. This is meant primarily for internal resource use, where there is an alternate mechanism for cleaning unused items. Using it on high level resources, like Image, might cause memory exhaustion problems.",
      "attributes": {
        "advanced": true
      }
    }
  },
  "tableOfContents": {}
}