{
  "entity": {
    "base": {
      "id": {
        "id": "uno/object",
        "parentId": "uno",
        "type": "Class",
        "modifiers": [
          "public",
          "intrinsic"
        ]
      },
      "uri": {
        "idUri": "uno/object",
        "href": "uno/object"
      },
      "titles": {
        "indexTitle": "object",
        "fullyQualifiedIndexTitle": "object"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Resources",
      "namespaceUri": "fuse/resources",
      "packageName": "Fuse.Common",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "fuse/resources/memorypolicy",
            "title": "Fuse.Resources.MemoryPolicy",
            "children": [],
            "isCurrent": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse.Resources",
      "uxNamespaceUri": "fuse/resources",
      "uxName": "MemoryPolicy"
    },
    "id": {
      "id": "fuse/resources/memorypolicy",
      "parentId": "fuse/resources",
      "type": "UxClass",
      "modifiers": [
        "public",
        "sealed"
      ]
    },
    "uri": {
      "idUri": "fuse/resources/memorypolicy",
      "href": "fuse/resources/memorypolicy"
    },
    "titles": {
      "pageTitle": "MemoryPolicy Class",
      "navigationTitle": "MemoryPolicy Class",
      "fullTitle": "Fuse.Resources.MemoryPolicy",
      "indexTitle": "MemoryPolicy",
      "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy"
    },
    "syntax": {
      "uno": "public sealed class MemoryPolicy {}",
      "ux": "<MemoryPolicy />"
    },
    "comment": {
      "brief": "Specifies a hint for how a resource should be managed in memory.",
      "full": "Specifies a hint for how a resource should be managed in memory.\n\nThese settings are suggestions for how a resource may be loaded into memory, how it may be kept in memory, and when it can be unloaded. How these suggestions are interpreted will ultimately depend on the specific resource and what type it is."
    }
  },
  "tableOfContents": {
    "uxProperties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/resources/memorypolicy",
            "parentId": "fuse/resources",
            "type": "UxClass",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/resources/memorypolicy",
            "href": "fuse/resources/memorypolicy"
          },
          "titles": {
            "indexTitle": "MemoryPolicy",
            "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Allows a resource that is currently in use to be freed. For very static display components this can often work since the visuals may be cached anyway.",
              "full": "Allows a resource that is currently in use to be freed. For very static display components this can often work since the visuals may be cached anyway."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/allowpinnedfree",
              "parentId": "fuse/resources/memorypolicy",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/allowpinnedfree",
              "href": "fuse/resources/memorypolicy/allowpinnedfree"
            },
            "titles": {
              "indexTitle": "AllowPinnedFree",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.AllowPinnedFree"
            }
          },
          {
            "comment": {
              "brief": "Specifies that a resource loaded from a bundle should be loaded as soon as possible during application startup.",
              "full": "Specifies that a resource loaded from a bundle should be loaded as soon as possible during application startup."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/bundlepreload",
              "parentId": "fuse/resources/memorypolicy",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/bundlepreload",
              "href": "fuse/resources/memorypolicy/bundlepreload"
            },
            "titles": {
              "indexTitle": "BundlePreload",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.BundlePreload"
            }
          },
          {
            "comment": {
              "brief": "Specifies the resource should be unloaded when the application goes to the background.",
              "full": "Specifies the resource should be unloaded when the application goes to the background."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/unloadinbackground",
              "parentId": "fuse/resources/memorypolicy",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/unloadinbackground",
              "href": "fuse/resources/memorypolicy/unloadinbackground"
            },
            "titles": {
              "indexTitle": "UnloadInBackground",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnloadInBackground"
            }
          },
          {
            "comment": {
              "brief": "Specifies that a resource which is currently not visible (hidden), can be unpinned, and thus released.",
              "full": "Specifies that a resource which is currently not visible (hidden), can be unpinned, and thus released."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/unpininvisible",
              "parentId": "fuse/resources/memorypolicy",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/unpininvisible",
              "href": "fuse/resources/memorypolicy/unpininvisible"
            },
            "titles": {
              "indexTitle": "UnpinInvisible",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnpinInvisible"
            }
          },
          {
            "comment": {
              "brief": "Specififes a timeout after which an unused resource can be released.",
              "full": "Specififes a timeout after which an unused resource can be released."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/unusedtimeout",
              "parentId": "fuse/resources/memorypolicy",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/unusedtimeout",
              "href": "fuse/resources/memorypolicy/unusedtimeout"
            },
            "titles": {
              "indexTitle": "UnusedTimeout",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnusedTimeout"
            }
          }
        ]
      }
    ],
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/resources/memorypolicy/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/resources/memorypolicy",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/resources/memorypolicy",
            "parentId": "fuse/resources",
            "type": "UxClass",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/resources/memorypolicy",
            "href": "fuse/resources/memorypolicy"
          },
          "titles": {
            "indexTitle": "MemoryPolicy",
            "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Creates a new MemoryPolicy",
              "full": "Creates a new MemoryPolicy"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/_ctor",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Constructor",
              "modifiers": [
                "public",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/_ctor",
              "href": "fuse/resources/memorypolicy/_ctor"
            },
            "titles": {
              "indexTitle": "MemoryPolicy",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.MemoryPolicy"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/resources/memorypolicy/equals_a09c80e3",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/gethashcode",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/gettype",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/tostring",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ],
    "fields": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/resources/memorypolicy",
            "parentId": "fuse/resources",
            "type": "UxClass",
            "modifiers": [
              "public",
              "sealed"
            ]
          },
          "uri": {
            "idUri": "fuse/resources/memorypolicy",
            "href": "fuse/resources/memorypolicy"
          },
          "titles": {
            "indexTitle": "MemoryPolicy",
            "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "This policy causes the resource to be loaded when the application starts and keep it in memory as long as possible.",
              "full": "This policy causes the resource to be loaded when the application starts and keep it in memory as long as possible."
            },
            "returns": {
              "href": "fuse/resources/memorypolicy",
              "title": "MemoryPolicy",
              "fullyQualifiedTitle": "Fuse.Resources.MemoryPolicy"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/preloadretain",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Field",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/preloadretain",
              "href": "fuse/resources/memorypolicy/preloadretain"
            },
            "titles": {
              "indexTitle": "PreloadRetain",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.PreloadRetain"
            }
          },
          {
            "comment": {
              "brief": "This policy causes the resource to be loaded as required and then unloads it as soon as possible when no longer required (after a  timeout of 1s).\nThis is useful when you have several images being loaded dynamically one after the other in your app.",
              "full": "This policy causes the resource to be loaded as required and then unloads it as soon as possible when no longer required (after a  timeout of 1s).\nThis is useful when you have several images being loaded dynamically one after the other in your app."
            },
            "returns": {
              "href": "fuse/resources/memorypolicy",
              "title": "MemoryPolicy",
              "fullyQualifiedTitle": "Fuse.Resources.MemoryPolicy"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/quickunload",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Field",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/quickunload",
              "href": "fuse/resources/memorypolicy/quickunload"
            },
            "titles": {
              "indexTitle": "QuickUnload",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.QuickUnload"
            }
          },
          {
            "comment": {
              "brief": "Unloads the resource only when going into the background. This is meant primarily for internal resource use, where there is an alternate mechanism for cleaning unused items. Using it on high level resources, like Image, might cause memory exhaustion problems.",
              "full": "Unloads the resource only when going into the background. This is meant primarily for internal resource use, where there is an alternate mechanism for cleaning unused items. Using it on high level resources, like Image, might cause memory exhaustion problems.",
              "attributes": {
                "advanced": true
              }
            },
            "returns": {
              "href": "fuse/resources/memorypolicy",
              "title": "MemoryPolicy",
              "fullyQualifiedTitle": "Fuse.Resources.MemoryPolicy"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/unloadinbackgroundpolicy",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Field",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/unloadinbackgroundpolicy",
              "href": "fuse/resources/memorypolicy/unloadinbackgroundpolicy"
            },
            "titles": {
              "indexTitle": "UnloadInBackgroundPolicy",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnloadInBackgroundPolicy"
            }
          },
          {
            "comment": {
              "brief": "This policy causes the resource to be loaded as required and then unloads it when no longer required (after a  timeout of 60s).",
              "full": "This policy causes the resource to be loaded as required and then unloads it when no longer required (after a  timeout of 60s)."
            },
            "returns": {
              "href": "fuse/resources/memorypolicy",
              "title": "MemoryPolicy",
              "fullyQualifiedTitle": "Fuse.Resources.MemoryPolicy"
            },
            "id": {
              "id": "fuse/resources/memorypolicy/unloadunused",
              "parentId": "fuse/resources/memorypolicy",
              "type": "Field",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/resources/memorypolicy/unloadunused",
              "href": "fuse/resources/memorypolicy/unloadunused"
            },
            "titles": {
              "indexTitle": "UnloadUnused",
              "fullyQualifiedIndexTitle": "Fuse.Resources.MemoryPolicy.UnloadUnused"
            }
          }
        ]
      }
    ]
  }
}