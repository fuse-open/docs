{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Elements",
      "namespaceUri": "fuse/elements",
      "packageName": "Fuse.Elements",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [],
    "returns": {
      "href": "fuse/elements/itransformorigin",
      "title": "ITransformOrigin",
      "fullyQualifiedTitle": "Fuse.Elements.ITransformOrigin"
    },
    "uxProperties": {},
    "id": {
      "id": "fuse/elements/element/transformorigin",
      "parentId": "fuse/elements/element",
      "type": "UxProperty",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/elements/element/transformorigin",
      "href": "fuse/elements/element/transformorigin"
    },
    "titles": {
      "pageTitle": "Element.TransformOrigin Property",
      "navigationTitle": "TransformOrigin Property",
      "fullTitle": "Fuse.Elements.Element.TransformOrigin",
      "indexTitle": "TransformOrigin",
      "fullyQualifiedIndexTitle": "Fuse.Elements.Element.TransformOrigin"
    },
    "syntax": {
      "uno": "public Fuse.Elements.ITransformOrigin TransformOrigin { get; get; }"
    },
    "comment": {
      "brief": "Specifies the origin of transformation used by transformation behaviors and animators such as @Move, @Scale, @Rotation, @Scaling, etc.",
      "full": "Specifies the origin of transformation used by transformation behaviors and animators such as @Move, @Scale, @Rotation, @Scaling, etc.\n\nThe possible values are:\n\n * `Center` (default) Transforms originate at the center of the element.\n * `TopLeft` Transforms originate at the top left corner of the element.\n * `Anchor` Transforms originate around the point specified by the @Element.Anchor property.\n * `HorizontalBoxCenter` Simulates the effect of the element being the front-facing side of a cube in 3D space, using the width of the element for determining the depth of the cube. Without the element being in a @Viewport this will have no illusion of depth, effectively rendering it useless.\n * `VerticalBoxCenter` Like `HorizontalBoxCenter` except it uses the height of the element for determining depth."
    }
  },
  "tableOfContents": {}
}