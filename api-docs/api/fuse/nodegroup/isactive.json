{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse",
      "namespaceUri": "fuse",
      "packageName": "Fuse.Nodes",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [],
    "returns": {
      "href": "uno/bool",
      "title": "bool",
      "fullyQualifiedTitle": "bool"
    },
    "uxProperties": {},
    "id": {
      "id": "fuse/nodegroup/isactive",
      "parentId": "fuse/nodegroup",
      "type": "UxProperty",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/nodegroup/isactive",
      "href": "fuse/nodegroup/isactive"
    },
    "titles": {
      "pageTitle": "NodeGroup.IsActive Property",
      "navigationTitle": "IsActive Property",
      "fullTitle": "Fuse.NodeGroup.IsActive",
      "indexTitle": "IsActive",
      "fullyQualifiedIndexTitle": "Fuse.NodeGroup.IsActive"
    },
    "syntax": {
      "uno": "public bool IsActive { get; get; }"
    },
    "comment": {
      "brief": "When `true` (the default) the contained nodes and resources will be added to the parent node. When `false` they will be removed.",
      "full": "When `true` (the default) the contained nodes and resources will be added to the parent node. When `false` they will be removed.\n\nLike a Visual, the templates added to the NodeGroup are not instantiated when rooted. They are made available for lookup in other classes that need a source, such as `Each.TemplateSource`.  You can use @Instance if you need to instantiate templates at rooting time."
    }
  },
  "tableOfContents": {}
}