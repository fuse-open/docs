{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.ImageTools",
      "namespaceUri": "fuse/imagetools",
      "packageName": "Fuse.ImageTools",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<byte[]>",
      "fullyQualifiedTitle": "Uno.Threading.Future<byte[]>"
    },
    "id": {
      "id": "fuse/imagetools/imagetools/bufferfromimageinterface_95a738ba",
      "parentId": "fuse/imagetools/imagetools",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fuse/imagetools/imagetools/bufferfromimageinterface_95a738ba",
      "href": "fuse/imagetools/imagetools/bufferfromimageinterface_95a738ba"
    },
    "titles": {
      "pageTitle": "ImageTools.BufferFromImageInterface Method (object[])",
      "navigationTitle": "BufferFromImageInterface Method (object[])",
      "fullTitle": "Fuse.ImageTools.ImageTools.BufferFromImageInterface",
      "indexTitle": "BufferFromImageInterface(object[])",
      "fullyQualifiedIndexTitle": "Fuse.ImageTools.ImageTools.BufferFromImageInterface(object[])"
    },
    "syntax": {
      "uno": "private Uno.Threading.Future<byte[]> BufferFromImageInterface(object[] args) {}"
    },
    "comment": {
      "brief": "Retrieves the underlying image data for an image as an ArrayBuffer.",
      "full": "Retrieves the underlying image data for an image as an ArrayBuffer.\n\n## Example\n\n    // Here image is expected to be an `Image` object\n    var ImageTools = require(\"FuseJS/ImageTools\");\n    ImageTools.getBufferFromImage(image)\n        .then(function(buf) { console.log(\"Image contains \" + buf.byteLength + \" bytes\"); });",
      "attributes": {
        "scriptMethod": {
          "name": "getBufferFromImage",
          "parameters": [
            "image"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "a Promise of an ArrayBuffer of image data"
        },
        "parameters": [
          {
            "name": "image",
            "typeHint": "Object",
            "description": "The image to fetch data for"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}