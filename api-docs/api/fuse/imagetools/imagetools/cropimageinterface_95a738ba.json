{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.ImageTools",
      "namespaceUri": "fuse/imagetools",
      "packageName": "Fuse.ImageTools",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<Image>",
      "fullyQualifiedTitle": "Uno.Threading.Future<Fuse.ImageTools.Image>"
    },
    "id": {
      "id": "fuse/imagetools/imagetools/cropimageinterface_95a738ba",
      "parentId": "fuse/imagetools/imagetools",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fuse/imagetools/imagetools/cropimageinterface_95a738ba",
      "href": "fuse/imagetools/imagetools/cropimageinterface_95a738ba"
    },
    "titles": {
      "pageTitle": "ImageTools.CropImageInterface Method (object[])",
      "navigationTitle": "CropImageInterface Method (object[])",
      "fullTitle": "Fuse.ImageTools.ImageTools.CropImageInterface",
      "indexTitle": "CropImageInterface(object[])",
      "fullyQualifiedIndexTitle": "Fuse.ImageTools.ImageTools.CropImageInterface(object[])"
    },
    "syntax": {
      "uno": "private Uno.Threading.Future<Fuse.ImageTools.Image> CropImageInterface(object[] args) {}"
    },
    "comment": {
      "brief": "Crops the supplied `image`, and returns a Promise of the transformed Image.",
      "full": "Crops the supplied `image`, and returns a Promise of the transformed Image.\n\nThe `options` parameter must be an object with one or more of the following properties defined:\n\n* `x` - X offset for cropped image, from left\n* `y` - Y offset for cropped image, from top\n* `width` - Width of cropped image\n* `height` - Height of cropped image\n* `performInPlace` - Boolean value determining whether the existing image will replaced\n\n## Example\n\n    // Here we assume that we have an existing image variable `originalImage`\n    var ImageTools = require(\"FuseJS/ImageTools\");\n\n    var options = {\n        width: 10, // Width of cropped image\n        height: 10 // Height of cropped image\n    };\n\n    ImageTools.crop(originalImage, options)\n        .then(function(newImage) { console.log(\"Path of cropped image is \" + newImage.path); });",
      "attributes": {
        "scriptMethod": {
          "name": "crop",
          "parameters": [
            "image",
            "options"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "a Promise of an Image"
        },
        "parameters": [
          {
            "name": "image",
            "typeHint": "Object",
            "description": "The image to crop"
          },
          {
            "name": "options",
            "typeHint": "Object",
            "description": "The crop options"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}