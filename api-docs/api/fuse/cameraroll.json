{
  "entity": {
    "id": {
      "id": "fuse/cameraroll",
      "parentId": "fuse",
      "type": "Namespace",
      "modifiers": []
    },
    "uri": {
      "idUri": "fuse/cameraroll",
      "href": "fuse/cameraroll"
    },
    "titles": {
      "pageTitle": "Fuse.CameraRoll Namespace",
      "navigationTitle": "Fuse.CameraRoll Namespace",
      "fullTitle": "Fuse.CameraRoll",
      "indexTitle": "Fuse.CameraRoll",
      "fullyQualifiedIndexTitle": "Fuse.CameraRoll"
    },
    "syntax": {
      "uno": "namespace CameraRoll {}"
    }
  },
  "tableOfContents": {
    "jsModules": [
      {
        "items": [
          {
            "comment": {
              "brief": "Allows adding images to- and fetching images from the system image gallery.",
              "full": "Allows adding images to- and fetching images from the system image gallery.\n\nFuse represents images as frozen JavaScript Image objects, consisting of a path, a filename, a width and a height.\nOnce created or acquired, Images can be passed around to other APIs to use, fetch or alter their underlying data.\nAll images are temporary \"scratch images\" until storage has been specified either through publishing to the CameraRoll or other.\n\nUsing this API on Android will request the `WRITE_EXTERNAL_STORAGE` and `READ_EXTERNAL_STORAGE` permissions.\n\n> **Note:** You need to add a package reference to `Fuse.CameraRoll` to use this API.\n\n## Examples\n\nRequesting an image from the camera roll:\n\n    var cameraRoll = require(\"FuseJS/CameraRoll\");\n\n    cameraRoll.getImage()\n        .then(function(image) {\n            // Will be called if the user successfully selected an image.\n        }, function(error) {\n            // Will be called if the user aborted the selection or if an error occurred.\n        });\n\nTaking a picture with the camera and adding it to the camera roll:\n\n    var cameraRoll = require(\"FuseJS/CameraRoll\");\n    var camera = require(\"FuseJS/Camera\");\n\n    camera.takePicture(640, 480)\n        .then(function(image) {\n            return cameraRoll.publishImage(image);\n        })\n        .then(function() {\n            // Will be called if the image was successfully added to the camera roll.\n        }, function(error) {\n            // Will called if an error occurred.\n        });\n\n> **Note**: You also need to add a package reference to `Fuse.Camera` for the above example to work.",
              "attributes": {
                "scriptModule": "FuseJS/CameraRoll"
              }
            },
            "id": {
              "id": "fuse/cameraroll/cameraroll",
              "parentId": "fuse/cameraroll",
              "type": "JsModule",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/cameraroll/cameraroll",
              "href": "fuse/cameraroll/cameraroll"
            },
            "titles": {
              "indexTitle": "CameraRoll",
              "fullyQualifiedIndexTitle": "Fuse.CameraRoll.CameraRoll"
            }
          }
        ]
      }
    ]
  }
}