{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Navigation",
      "namespaceUri": "fuse/navigation",
      "packageName": "Fuse.Navigation",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "c",
        "href": "fuse/scripting/context",
        "title": "Context",
        "fullyQualifiedTitle": "Fuse.Scripting.Context"
      },
      {
        "name": "r",
        "href": "fuse/navigation/router",
        "title": "Router",
        "fullyQualifiedTitle": "Fuse.Navigation.Router"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/object",
      "title": "object",
      "fullyQualifiedTitle": "object"
    },
    "id": {
      "id": "fuse/navigation/router/getroute_eca3d620",
      "parentId": "fuse/navigation/router",
      "type": "JsMethod",
      "modifiers": [
        "private",
        "static"
      ]
    },
    "uri": {
      "idUri": "fuse/navigation/router/getroute_eca3d620",
      "href": "fuse/navigation/router/getroute_eca3d620"
    },
    "titles": {
      "pageTitle": "Router.GetRoute Method (Context, Router, object[])",
      "navigationTitle": "GetRoute Method (Context, Router, object[])",
      "fullTitle": "Fuse.Navigation.Router.GetRoute",
      "indexTitle": "GetRoute(Context, Router, object[])",
      "fullyQualifiedIndexTitle": "Fuse.Navigation.Router.GetRoute(Fuse.Scripting.Context, Fuse.Navigation.Router, object[])"
    },
    "syntax": {
      "uno": "private static object GetRoute(Fuse.Scripting.Context c, Fuse.Navigation.Router r, object[] args) {}"
    },
    "comment": {
      "brief": "Requests the current route (async) and calls a callback when ready.",
      "full": "Requests the current route (async) and calls a callback when ready.\n\nThe callback receives an array on the form `[path, parameter]+`.\n\nExample:\n\n    router.getRoute(function(route) {\n        route[0] // first path segment\n        route[1] // first parameter\n        route[2] // second path segment\n        route[3] // second parameter\n        // and so on\n    })",
      "attributes": {
        "scriptMethod": {
          "name": "getRoute",
          "parameters": [
            "callback"
          ]
        }
      }
    }
  },
  "tableOfContents": {}
}