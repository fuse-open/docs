{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Expressions",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "first",
        "href": "uno/object",
        "title": "object",
        "fullyQualifiedTitle": "object"
      },
      {
        "name": "second",
        "href": "uno/object",
        "title": "object",
        "fullyQualifiedTitle": "object"
      },
      {
        "name": "third",
        "href": "uno/object",
        "title": "object",
        "fullyQualifiedTitle": "object"
      },
      {
        "name": "result",
        "href": "uno/object",
        "title": "object",
        "fullyQualifiedTitle": "object"
      }
    ],
    "returns": {
      "href": "uno/bool",
      "title": "bool",
      "fullyQualifiedTitle": "bool"
    },
    "id": {
      "id": "fuse/reactive/ternaryoperator/trycompute_bc09d377",
      "parentId": "fuse/reactive/ternaryoperator",
      "type": "Method",
      "modifiers": [
        "protected",
        "virtual"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/ternaryoperator/trycompute_bc09d377",
      "href": "fuse/reactive/ternaryoperator/trycompute_bc09d377"
    },
    "titles": {
      "pageTitle": "TernaryOperator.TryCompute Method (object, object, object, object)",
      "navigationTitle": "TryCompute Method (object, object, object, object)",
      "fullTitle": "Fuse.Reactive.TernaryOperator.TryCompute",
      "indexTitle": "TryCompute(object, object, object, object)",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.TernaryOperator.TryCompute(object, object, object, object)"
    },
    "syntax": {
      "uno": "protected virtual bool TryCompute(object first, object second, object third, out object result) {}"
    }
  },
  "tableOfContents": {}
}