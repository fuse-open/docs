{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Expressions",
      "packageVersion": "1.8.0-rc2"
    },
    "returns": {
      "href": "fuse/reactive/computeexpression/flags",
      "title": "Flags",
      "fullyQualifiedTitle": "Fuse.Reactive.Flags"
    },
    "values": [
      {
        "uri": "fuse/reactive/computeexpression/flags/none",
        "title": "None"
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/optional0",
        "title": "Optional0"
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/optional1",
        "title": "Optional1"
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/optional2",
        "title": "Optional2"
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/optional3",
        "title": "Optional3"
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/alloptional",
        "title": "AllOptional",
        "comment": {
          "brief": "All arguments to the expression are optional. `Compute` will be called when HasValue is false for individual, or all, values",
          "full": "All arguments to the expression are optional. `Compute` will be called when HasValue is false for individual, or all, values"
        }
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/omitcomputewarning",
        "title": "OmitComputeWarning",
        "comment": {
          "brief": "A warning should not be emitted when `Compute` returns false, indicating this is an expected condition, or the derived class will emit its own diagnostics",
          "full": "A warning should not be emitted when `Compute` returns false, indicating this is an expected condition, or the derived class will emit its own diagnostics"
        }
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/deprecatedvirtualflags",
        "title": "DeprecatedVirtualFlags",
        "comment": {
          "attributes": {
            "deprecated": true
          }
        }
      },
      {
        "uri": "fuse/reactive/computeexpression/flags/deprecatedvirtualunary",
        "title": "DeprecatedVirtualUnary",
        "comment": {
          "attributes": {
            "deprecated": true
          }
        }
      }
    ],
    "id": {
      "id": "fuse/reactive/computeexpression/flags/alloptional",
      "parentId": "fuse/reactive/computeexpression/flags",
      "type": "Literal",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/computeexpression/flags/alloptional",
      "href": "fuse/reactive/computeexpression/flags/alloptional"
    },
    "titles": {
      "pageTitle": "Flags.AllOptional Literal",
      "navigationTitle": "AllOptional Literal",
      "fullTitle": "Fuse.Reactive.ComputeExpression.Flags.AllOptional",
      "indexTitle": "AllOptional",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.Flags.AllOptional"
    },
    "syntax": {
      "uno": "public Fuse.Reactive.Flags AllOptional;"
    },
    "comment": {
      "brief": "All arguments to the expression are optional. `Compute` will be called when HasValue is false for individual, or all, values",
      "full": "All arguments to the expression are optional. `Compute` will be called when HasValue is false for individual, or all, values"
    }
  },
  "tableOfContents": {}
}