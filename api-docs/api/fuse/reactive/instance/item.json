{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Bindings",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [],
    "returns": {
      "href": "uno/object",
      "title": "object",
      "fullyQualifiedTitle": "object"
    },
    "uxProperties": {},
    "id": {
      "id": "fuse/reactive/instance/item",
      "parentId": "fuse/reactive/instance",
      "type": "UxProperty",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/instance/item",
      "href": "fuse/reactive/instance/item"
    },
    "titles": {
      "pageTitle": "Instance.Item Property",
      "navigationTitle": "Item Property",
      "fullTitle": "Fuse.Reactive.Instance.Item",
      "indexTitle": "Item",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.Instance.Item"
    },
    "syntax": {
      "uno": "public object Item { get; get; }"
    },
    "comment": {
      "brief": "A data context for the instantiated item.",
      "full": "A data context for the instantiated item.\n\nThis works with features like `MatchKey`, behaving like an `Each` with a single item in it.\n\nFor example, you may have part of the UI depend on the type of data being viewed:\n\n    <Instance Item=\"{card}\" MatchKey=\"type\">\n        <NumericCard ux:Template=\"number\"/>\n        <FaceCard ux:Template=\"face\"/>\n        <JokerCard ux:Template=\"joker\"/>\n    </Instance>"
    }
  },
  "tableOfContents": {}
}