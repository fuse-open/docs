{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Expressions",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "fuse/reactive/expression/argument",
        "title": "Argument[]",
        "fullyQualifiedTitle": "Fuse.Reactive.Argument[]"
      }
    ],
    "id": {
      "id": "fuse/reactive/expressionsubscriber/onarguments_32782760",
      "parentId": "fuse/reactive/expressionsubscriber",
      "type": "Method",
      "modifiers": [
        "protected",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/expressionsubscriber/onarguments_32782760",
      "href": "fuse/reactive/expressionsubscriber/onarguments_32782760"
    },
    "titles": {
      "pageTitle": "ExpressionSubscriber.OnArguments Method (Argument[])",
      "navigationTitle": "OnArguments Method (Argument[])",
      "fullTitle": "Fuse.Reactive.ExpressionSubscriber.OnArguments",
      "indexTitle": "OnArguments(Argument[])",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.ExpressionSubscriber.OnArguments(Fuse.Reactive.Argument[])"
    },
    "syntax": {
      "uno": "protected abstract voidOnArguments(Fuse.Reactive.Argument[] args) {}"
    },
    "comment": {
      "brief": "Will only be called if all non-optional arguments have been provided.",
      "full": "Will only be called if all non-optional arguments have been provided.\n\nIt is the implementers responsibility to call `SetData` or `ClearData` as appropriate.  Note that this class will however call `ClearData` on its own if not all optional arguments are provided, or there is an error."
    }
  },
  "tableOfContents": {}
}