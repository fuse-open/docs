{
  "entity": {
    "base": {
      "id": {
        "id": "fuse/triggers/whiletrigger",
        "parentId": "fuse/triggers",
        "type": "Class",
        "modifiers": [
          "public",
          "abstract"
        ]
      },
      "uri": {
        "idUri": "fuse/triggers/whiletrigger",
        "href": "fuse/triggers/whiletrigger"
      },
      "titles": {
        "indexTitle": "WhileTrigger",
        "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Bindings",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "uno/ux/propertyobject",
            "title": "Uno.UX.PropertyObject",
            "children": [
              {
                "uri": "fuse/node",
                "title": "Fuse.Node",
                "children": [
                  {
                    "uri": "fuse/behavior",
                    "title": "Fuse.Behavior",
                    "children": [
                      {
                        "uri": "fuse/nodegroupbase",
                        "title": "Fuse.NodeGroupBase",
                        "children": [
                          {
                            "uri": "fuse/triggers/trigger",
                            "title": "Fuse.Triggers.Trigger",
                            "children": [
                              {
                                "uri": "fuse/triggers/whiletrigger",
                                "title": "Fuse.Triggers.WhileTrigger",
                                "children": [
                                  {
                                    "uri": "fuse/reactive/whilecount",
                                    "title": "Fuse.Reactive.WhileCount",
                                    "children": [],
                                    "isCurrent": true
                                  }
                                ],
                                "isAncestor": true
                              }
                            ],
                            "isAncestor": true
                          }
                        ],
                        "isAncestor": true
                      }
                    ],
                    "isAncestor": true
                  }
                ],
                "isAncestor": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse.Reactive",
      "uxNamespaceUri": "fuse/reactive",
      "uxName": "WhileCount"
    },
    "implementedInterfaces": [
      {
        "id": {
          "id": "uno/collections/ilist_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ilist_1",
          "href": "uno/collections/ilist_1"
        },
        "titles": {
          "indexTitle": "IList<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IList<Fuse.Binding>"
        }
      },
      {
        "comment": {
          "brief": "Interface for objects that can have a script engine representation",
          "full": "Interface for objects that can have a script engine representation"
        },
        "id": {
          "id": "fuse/scripting/iscriptobject",
          "parentId": "fuse/scripting",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/scripting/iscriptobject",
          "href": "fuse/scripting/iscriptobject"
        },
        "titles": {
          "indexTitle": "IScriptObject",
          "fullyQualifiedIndexTitle": "Fuse.Scripting.IScriptObject"
        }
      },
      {
        "id": {
          "id": "fuse/iproperties",
          "parentId": "fuse",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/iproperties",
          "href": "fuse/iproperties"
        },
        "titles": {
          "indexTitle": "IProperties",
          "fullyQualifiedIndexTitle": "Fuse.IProperties"
        }
      },
      {
        "id": {
          "id": "uno/collections/icollection_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/icollection_1",
          "href": "uno/collections/icollection_1"
        },
        "titles": {
          "indexTitle": "ICollection<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.ICollection<Fuse.Binding>"
        }
      },
      {
        "id": {
          "id": "uno/collections/ienumerable_1",
          "parentId": "uno/collections",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/collections/ienumerable_1",
          "href": "uno/collections/ienumerable_1"
        },
        "titles": {
          "indexTitle": "IEnumerable<Binding>",
          "fullyQualifiedIndexTitle": "Uno.Collections.IEnumerable<Fuse.Binding>"
        }
      }
    ],
    "id": {
      "id": "fuse/reactive/whilecount",
      "parentId": "fuse/reactive",
      "type": "UxClass",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/whilecount",
      "href": "fuse/reactive/whilecount"
    },
    "titles": {
      "pageTitle": "WhileCount Class",
      "navigationTitle": "WhileCount Class",
      "fullTitle": "Fuse.Reactive.WhileCount",
      "indexTitle": "WhileCount",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount"
    },
    "syntax": {
      "uno": "public class WhileCount : Fuse.Triggers.WhileTrigger {}",
      "ux": "<WhileCount />"
    },
    "comment": {
      "brief": "Active when the number of items in a collection fulfills some criteria.",
      "full": "Active when the number of items in a collection fulfills some criteria.\n\nThe collection is specified with `Items`.\n\n`WhileCount` accepts a combination of properties that form an open or closed range of numbers to test against. The trigger is active while the count of items matches.\n\n- `EqualTo` is used on its own and the item count must match this number.\n- Using just `LessThan` or `LessThanEqual` the count of items must be less than, or less than or equal to, this number.\n- Using juse `GreaterThan` or `GreaterThanEqual` the count of items must be greater than, or greater than or equal to, this number.\n- Using both a `LessThan` or `LessThanEqual` and `GreaterThan` or `GreaterThanEqual` creates a closed range to compare. The number of items must be within this range.\n\nThis example shows how to use @WhileCount and @WhileEmpty with an @Observable:\n\n    <JavaScript>\n        var Observable = require(\"FuseJS/Observable\");\n        module.exports = {\n            friends: Observable(\"Alice\", \"Bob\", \"Courtney\")\n        }\n    </JavaScript>\n    <WhileEmpty Items=\"{friends}\">\n        <Text>Your friends list is empty.</Text>\n    </WhileEmpty>\n    <WhileCount Items=\"{friends}\" EqualTo=\"1\">\n        <Text>Your have 1 friend.</Text>\n    </WhileCount>\n    <WhileCount Items=\"{friends}\" GreaterThan=\"3\" >\n        <Text>You have more than 3 friends.</Text>\n    </WhileCount>\n    <WhileCount Items=\"{friends}\" GreaterThanEqual=\"1\" LessThanEqual=\"3\" >\n        <Text>You have 1-3 friends.</Text>\n    </WhileCount>\n    <WhileCount Items=\"{friends}\" GreaterThanEqual=\"2\" LessThanEqual=\"5\" Invert=\"true\">\n        <Text>You do not have 2-5 friends.</Text>\n    </WhileCount>"
    }
  },
  "tableOfContents": {
    "uxProperties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/reactive/whilecount",
            "parentId": "fuse/reactive",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/reactive/whilecount",
            "href": "fuse/reactive/whilecount"
          },
          "titles": {
            "indexTitle": "WhileCount",
            "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Active when the count of the collection is equal to the provided value.",
              "full": "Active when the count of the collection is equal to the provided value."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/equalto",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/equalto",
              "href": "fuse/reactive/whilecount/equalto"
            },
            "titles": {
              "indexTitle": "EqualTo",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.EqualTo"
            }
          },
          {
            "comment": {
              "brief": "Active when the count of the collection is greater than the provided value.",
              "full": "Active when the count of the collection is greater than the provided value."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/greaterthan",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/greaterthan",
              "href": "fuse/reactive/whilecount/greaterthan"
            },
            "titles": {
              "indexTitle": "GreaterThan",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.GreaterThan"
            }
          },
          {
            "comment": {
              "brief": "Active when the count of the collection is greater than the provided value.",
              "full": "Active when the count of the collection is greater than the provided value."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/greaterthanequal",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/greaterthanequal",
              "href": "fuse/reactive/whilecount/greaterthanequal"
            },
            "titles": {
              "indexTitle": "GreaterThanEqual",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.GreaterThanEqual"
            }
          },
          {
            "comment": {
              "brief": "Specifies the collection whose item count will be compared.",
              "full": "Specifies the collection whose item count will be compared."
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "id": {
              "id": "fuse/reactive/whilecount/items",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/items",
              "href": "fuse/reactive/whilecount/items"
            },
            "titles": {
              "indexTitle": "Items",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.Items"
            }
          },
          {
            "comment": {
              "brief": "Active when the count of the collection is less than the provided value.",
              "full": "Active when the count of the collection is less than the provided value."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/lessthan",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/lessthan",
              "href": "fuse/reactive/whilecount/lessthan"
            },
            "titles": {
              "indexTitle": "LessThan",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.LessThan"
            }
          },
          {
            "comment": {
              "brief": "Active when the count of the collection is less than or equal to the provided value.",
              "full": "Active when the count of the collection is less than or equal to the provided value."
            },
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/lessthanequal",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/lessthanequal",
              "href": "fuse/reactive/whilecount/lessthanequal"
            },
            "titles": {
              "indexTitle": "LessThanEqual",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.LessThanEqual"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/triggers/whiletrigger",
            "parentId": "fuse/triggers",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/triggers/whiletrigger",
            "href": "fuse/triggers/whiletrigger"
          },
          "titles": {
            "indexTitle": "WhileTrigger",
            "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Inverts the trigger so it will be active when it would normally be inactive, and vice versa.",
              "full": "Inverts the trigger so it will be active when it would normally be inactive, and vice versa."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/invert",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/invert",
              "href": "fuse/triggers/whiletrigger/invert",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Invert",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger.Invert"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/triggers/trigger",
            "parentId": "fuse/triggers",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/triggers/trigger",
            "href": "fuse/triggers/trigger"
          },
          "titles": {
            "indexTitle": "Trigger",
            "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "A list of actions that execute with the trigger. These may react on simple direction\nchanges, or at specific time offsets.",
              "full": "A list of actions that execute with the trigger. These may react on simple direction\nchanges, or at specific time offsets."
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<TriggerAction>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Triggers.Actions.TriggerAction>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/actions",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/actions",
              "href": "fuse/triggers/trigger/actions",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Actions",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Actions"
            }
          },
          {
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Animator>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Animations.Animator>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/animators",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/animators",
              "href": "fuse/triggers/trigger/animators",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Animators",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Animators"
            }
          },
          {
            "comment": {
              "brief": "Specifies an explicit backward animation instead of using the implied backward animation\nof the animators involved. Be aware that actions are not part of the animation.",
              "full": "Specifies an explicit backward animation instead of using the implied backward animation\nof the animators involved. Be aware that actions are not part of the animation.\n\nTriggers normally use the same animators when deactivating as they do when they activate. There are however\nanimations that require a different set of animators when animating back from the active state. For this purpose\none can bind a new set of animators to the `BackwardAnimation` property like so:\n\n    <Panel Width=\"100\" Height=\"100\" Color=\"#00b2ee\">\n        <WhilePressed>\n            <Rotate Degrees=\"90\" Duration=\"0.5\" />\n            <Scale Factor=\"1.5\" Duration=\"1\" Easing=\"QuadraticInOut\" />\n            <TriggerAnimation ux:Binding=\"BackwardAnimation\">\n                <Scale Factor=\"1.5\" Duration=\"1\" Easing=\"QuadraticInOut\" />\n            </TriggerAnimation>\n        </WhilePressed>\n    </Panel>\n\nIn this example, the @Panel only rotates when pressed. When the pointer is released, it does not animate back.\nNote that the effect of the animators are still reversed. The only difference is that they loose their duration."
            },
            "returns": {
              "href": "fuse/animations/triggeranimation",
              "title": "TriggerAnimation",
              "fullyQualifiedTitle": "Fuse.Animations.TriggerAnimation"
            },
            "id": {
              "id": "fuse/reactive/whilecount/backwardanimation",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/backwardanimation",
              "href": "fuse/triggers/trigger/backwardanimation",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BackwardAnimation",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.BackwardAnimation"
            }
          },
          {
            "comment": {
              "brief": "Specifies how changes in state are handled while initializing and rooting the trigger.",
              "full": "Specifies how changes in state are handled while initializing and rooting the trigger.\n\nIn some cases, a trigger is rooted to the visual tree while in its active state. In these cases,\none could expect one of two things to happen;\n  1. the animation plays from the start as soon as the trigger is rooted.\n  2. the trigger jumps instantly to the end of the animation.\n\nOne can use the `Bypass` property to differentiate between these. The default is `Bypass=\"Standard\"`,\nwhich corresponds to case 2. If one wants the effect of case 2, one can use `Bypass=\"Never\"` instead."
            },
            "returns": {
              "href": "fuse/triggers/triggerbypassmode",
              "title": "TriggerBypassMode",
              "fullyQualifiedTitle": "Fuse.Triggers.TriggerBypassMode"
            },
            "id": {
              "id": "fuse/reactive/whilecount/bypass",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bypass",
              "href": "fuse/triggers/trigger/bypass",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Bypass",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Bypass"
            }
          },
          {
            "comment": {
              "brief": "If there is a transition between forward/backward playback and two timeilnes are being\nused (implicit or explicit) this specifies the cross-fade time.",
              "full": "If there is a transition between forward/backward playback and two timeilnes are being\nused (implicit or explicit) this specifies the cross-fade time."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/reactive/whilecount/crossfadeduration",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/crossfadeduration",
              "href": "fuse/triggers/trigger/crossfadeduration",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "CrossFadeDuration",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.CrossFadeDuration"
            }
          },
          {
            "comment": {
              "brief": "Stretches the duration of the animation to fill up this period of time.",
              "full": "Stretches the duration of the animation to fill up this period of time."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/reactive/whilecount/stretchduration",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/stretchduration",
              "href": "fuse/triggers/trigger/stretchduration",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "StretchDuration",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.StretchDuration"
            }
          },
          {
            "comment": {
              "brief": "Specifies a multiplier to the elapsed time for animation playback.",
              "full": "Specifies a multiplier to the elapsed time for animation playback."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/reactive/whilecount/timemultiplier",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/timemultiplier",
              "href": "fuse/triggers/trigger/timemultiplier",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TimeMultiplier",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.TimeMultiplier"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/nodegroupbase",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/nodegroupbase",
            "href": "fuse/nodegroupbase"
          },
          "titles": {
            "indexTitle": "NodeGroupBase",
            "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Nodes to add to the Parent when this trigger is any non-deactivated state (Progress > 0)",
              "full": "Nodes to add to the Parent when this trigger is any non-deactivated state (Progress > 0)"
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Node>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Node>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/nodes",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/nodes",
              "href": "fuse/nodegroupbase/nodes",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Nodes",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.Nodes"
            }
          },
          {
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Resource>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Uno.UX.Resource>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/resources",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/resources",
              "href": "fuse/nodegroupbase/resources",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resources",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.Resources"
            }
          },
          {
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Template>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Uno.UX.Template>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/templates",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/templates",
              "href": "fuse/nodegroupbase/templates",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Templates",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.Templates"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The list of bindings belonging to this node.",
              "full": "The list of bindings belonging to this node."
            },
            "returns": {
              "href": "uno/collections/ilist_1",
              "title": "IList<Binding>",
              "fullyQualifiedTitle": "Uno.Collections.IList<Fuse.Binding>"
            },
            "flags": {
              "uxContent": true
            },
            "id": {
              "id": "fuse/reactive/whilecount/bindings",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bindings",
              "href": "fuse/node/bindings",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Bindings",
              "fullyQualifiedIndexTitle": "Fuse.Node.Bindings"
            }
          },
          {
            "comment": {
              "brief": "Run-time name of the node.\nThis property is automatically set using the ux:Name attribute.",
              "full": "Run-time name of the node.\nThis property is automatically set using the ux:Name attribute."
            },
            "returns": {
              "href": "uno/ux/selector",
              "title": "Selector",
              "fullyQualifiedTitle": "Uno.UX.Selector"
            },
            "id": {
              "id": "fuse/reactive/whilecount/name",
              "parentId": "fuse/reactive/whilecount",
              "type": "UxProperty",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/name",
              "href": "fuse/node/name",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Name",
              "fullyQualifiedIndexTitle": "Fuse.Node.Name"
            }
          }
        ]
      }
    ],
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/reactive/whilecount",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/reactive/whilecount",
            "parentId": "fuse/reactive",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/reactive/whilecount",
            "href": "fuse/reactive/whilecount"
          },
          "titles": {
            "indexTitle": "WhileCount",
            "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Creates a new WhileCount",
              "full": "Creates a new WhileCount"
            },
            "id": {
              "id": "fuse/reactive/whilecount/_ctor",
              "parentId": "fuse/reactive/whilecount",
              "type": "Constructor",
              "modifiers": [
                "public",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/_ctor",
              "href": "fuse/reactive/whilecount/_ctor"
            },
            "titles": {
              "indexTitle": "WhileCount",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.WhileCount.WhileCount"
            }
          }
        ]
      }
    ],
    "properties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/triggers/trigger",
            "parentId": "fuse/triggers",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/triggers/trigger",
            "href": "fuse/triggers/trigger"
          },
          "titles": {
            "indexTitle": "Trigger",
            "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/hasactions",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/hasactions",
              "href": "fuse/triggers/trigger/hasactions",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasActions",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.HasActions"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/hasanimators",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/hasanimators",
              "href": "fuse/triggers/trigger/hasanimators",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasAnimators",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.HasAnimators"
            }
          },
          {
            "comment": {
              "brief": "`true` if there is an explicit backward animation.",
              "full": "`true` if there is an explicit backward animation."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/hasbackwardanimation",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/hasbackwardanimation",
              "href": "fuse/triggers/trigger/hasbackwardanimation",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "HasBackwardAnimation",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.HasBackwardAnimation"
            }
          },
          {
            "comment": {
              "brief": "The current progress of the trigger.",
              "full": "The current progress of the trigger.\n\nTriggers are defined over a progress range from 0...1. How a trigger plays over its progress depends on the\ntype of trigger. A trigger at 0 progress is completely deactivated. Content added via the trigger is removed at this time.\nAny progress above 0 will have the content added. Certain animators may delay the removal of content until their animation is completed."
            },
            "returns": {
              "href": "uno/double",
              "title": "double",
              "fullyQualifiedTitle": "double"
            },
            "id": {
              "id": "fuse/reactive/whilecount/progress",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/progress",
              "href": "fuse/triggers/trigger/progress",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Progress",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Progress"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "The context parent is the semantic parent of this node. It is where non-UI structure should\nbe resolved, like looking for the DataContext, a Navigation, or other semantic item.",
              "full": "The context parent is the semantic parent of this node. It is where non-UI structure should\nbe resolved, like looking for the DataContext, a Navigation, or other semantic item."
            },
            "returns": {
              "href": "fuse/node",
              "title": "Node",
              "fullyQualifiedTitle": "Fuse.Node"
            },
            "id": {
              "id": "fuse/reactive/whilecount/contextparent",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/contextparent",
              "href": "fuse/node/contextparent",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ContextParent",
              "fullyQualifiedIndexTitle": "Fuse.Node.ContextParent"
            }
          },
          {
            "comment": {
              "brief": "Whether rooting for this node is completed.\nReturns false if unrooting has started.",
              "full": "Whether rooting for this node is completed.\nReturns false if unrooting has started."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/isrootingcompleted",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/isrootingcompleted",
              "href": "fuse/node/isrootingcompleted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsRootingCompleted",
              "fullyQualifiedIndexTitle": "Fuse.Node.IsRootingCompleted"
            }
          },
          {
            "comment": {
              "brief": "Whether rooting of this node has started.\nNote that even if this property returns true, rooting may not yet be\ncompleted for the node. See also @IsRootingCompleted.",
              "full": "Whether rooting of this node has started.\nNote that even if this property returns true, rooting may not yet be\ncompleted for the node. See also @IsRootingCompleted."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/whilecount/isrootingstarted",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/isrootingstarted",
              "href": "fuse/node/isrootingstarted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsRootingStarted",
              "fullyQualifiedIndexTitle": "Fuse.Node.IsRootingStarted"
            }
          },
          {
            "comment": {
              "brief": "The parent @Visual of this node. Will return null if the node is not rooted.",
              "full": "The parent @Visual of this node. Will return null if the node is not rooted."
            },
            "returns": {
              "href": "fuse/visual",
              "title": "Visual",
              "fullyQualifiedTitle": "Fuse.Visual"
            },
            "id": {
              "id": "fuse/reactive/whilecount/parent",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/parent",
              "href": "fuse/node/parent",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Parent",
              "fullyQualifiedIndexTitle": "Fuse.Node.Parent"
            }
          },
          {
            "comment": {
              "brief": "A linked list holding data for extrinsic properties.",
              "full": "A linked list holding data for extrinsic properties."
            },
            "returns": {
              "href": "fuse/properties",
              "title": "Properties",
              "fullyQualifiedTitle": "Fuse.Properties"
            },
            "id": {
              "id": "fuse/reactive/whilecount/properties",
              "parentId": "fuse/reactive/whilecount",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/properties",
              "href": "fuse/node/properties",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Properties",
              "fullyQualifiedIndexTitle": "Fuse.Node.Properties"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/triggers/whiletrigger",
            "parentId": "fuse/triggers",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/triggers/whiletrigger",
            "href": "fuse/triggers/whiletrigger"
          },
          "titles": {
            "indexTitle": "WhileTrigger",
            "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Call in situations where the bypassing is forced. This should be rare since during rooting the normal bypass mechanism of the trigger will apply.",
              "full": "Call in situations where the bypassing is forced. This should be rare since during rooting the normal bypass mechanism of the trigger will apply."
            },
            "parameters": [
              {
                "name": "on",
                "href": "uno/bool",
                "title": "bool",
                "fullyQualifiedTitle": "bool"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/bypasssetactive_f0c97f29",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bypasssetactive_f0c97f29",
              "href": "fuse/triggers/whiletrigger/bypasssetactive_f0c97f29",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BypassSetActive(bool)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger.BypassSetActive(bool)"
            }
          },
          {
            "parameters": [
              {
                "name": "on",
                "href": "uno/bool",
                "title": "bool",
                "fullyQualifiedTitle": "bool"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/setactive_f0c97f29",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/setactive_f0c97f29",
              "href": "fuse/triggers/whiletrigger/setactive_f0c97f29",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SetActive(bool)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.WhileTrigger.SetActive(bool)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/triggers/trigger",
            "parentId": "fuse/triggers",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/triggers/trigger",
            "href": "fuse/triggers/trigger"
          },
          "titles": {
            "indexTitle": "Trigger",
            "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Activates the trigger (target progress of 1).",
              "full": "Activates the trigger (target progress of 1).\n\nThis uses the appropriate Direct or Bypass operation."
            },
            "parameters": [
              {
                "name": "done",
                "href": "uno/action",
                "title": "Action",
                "fullyQualifiedTitle": "Uno.Action"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/activate_4ffda79d",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/activate_4ffda79d",
              "href": "fuse/triggers/trigger/activate_4ffda79d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Activate(Action)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Activate(Uno.Action)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/bypassactivate",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bypassactivate",
              "href": "fuse/triggers/trigger/bypassactivate",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BypassActivate",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.BypassActivate"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/bypassdeactivate",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bypassdeactivate",
              "href": "fuse/triggers/trigger/bypassdeactivate",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BypassDeactivate",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.BypassDeactivate"
            }
          },
          {
            "parameters": [
              {
                "name": "progress",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              },
              {
                "name": "direction",
                "href": "fuse/animations/animationvariant",
                "title": "AnimationVariant",
                "fullyQualifiedTitle": "Fuse.Animations.AnimationVariant"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/bypassseek_6a293bdd",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/bypassseek_6a293bdd",
              "href": "fuse/triggers/trigger/bypassseek_6a293bdd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "BypassSeek(double, AnimationVariant)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.BypassSeek(double, Fuse.Animations.AnimationVariant)"
            }
          },
          {
            "comment": {
              "brief": "Deactivates the trigger (target progress of 0).",
              "full": "Deactivates the trigger (target progress of 0).\n\nThis uses the appropriate Direct or Bypass operation."
            },
            "id": {
              "id": "fuse/reactive/whilecount/deactivate",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/deactivate",
              "href": "fuse/triggers/trigger/deactivate",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Deactivate",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Deactivate"
            }
          },
          {
            "parameters": [
              {
                "name": "done",
                "href": "uno/action",
                "title": "Action",
                "fullyQualifiedTitle": "Uno.Action"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/directactivate_4ffda79d",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/directactivate_4ffda79d",
              "href": "fuse/triggers/trigger/directactivate_4ffda79d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DirectActivate(Action)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.DirectActivate(Uno.Action)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/directdeactivate",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/directdeactivate",
              "href": "fuse/triggers/trigger/directdeactivate",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DirectDeactivate",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.DirectDeactivate"
            }
          },
          {
            "parameters": [
              {
                "name": "progress",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              },
              {
                "name": "direction",
                "href": "fuse/animations/animationvariant",
                "title": "AnimationVariant",
                "fullyQualifiedTitle": "Fuse.Animations.AnimationVariant"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/directseek_6a293bdd",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/directseek_6a293bdd",
              "href": "fuse/triggers/trigger/directseek_6a293bdd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "DirectSeek(double, AnimationVariant)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.DirectSeek(double, Fuse.Animations.AnimationVariant)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/inversepulse",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/inversepulse",
              "href": "fuse/triggers/trigger/inversepulse",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "InversePulse",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.InversePulse"
            }
          },
          {
            "parameters": [
              {
                "name": "state",
                "href": "fuse/triggers/triggerplaystate",
                "title": "TriggerPlayState",
                "fullyQualifiedTitle": "Fuse.Triggers.TriggerPlayState"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/onplaystatechanged_9a36bd1c",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onplaystatechanged_9a36bd1c",
              "href": "fuse/triggers/trigger/onplaystatechanged_9a36bd1c",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPlayStateChanged(TriggerPlayState)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.OnPlayStateChanged(Fuse.Triggers.TriggerPlayState)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/onprogresschanged",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onprogresschanged",
              "href": "fuse/triggers/trigger/onprogresschanged",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnProgressChanged",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.OnProgressChanged"
            }
          },
          {
            "comment": {
              "brief": "Play the trigger from where it currently is to the end.",
              "full": "Play the trigger from where it currently is to the end.",
              "attributes": {
                "parameters": [
                  {
                    "name": "on",
                    "description": "whether to play to progress=1 (true) or to progress=0 (false)"
                  },
                  {
                    "name": "done",
                    "description": "an action to execute when the progress reaches the desired state (is done)"
                  }
                ]
              }
            },
            "parameters": [
              {
                "name": "on",
                "href": "uno/bool",
                "title": "bool",
                "fullyQualifiedTitle": "bool"
              },
              {
                "name": "done",
                "href": "uno/action",
                "title": "Action",
                "fullyQualifiedTitle": "Uno.Action"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/playend_5aeaad09",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/playend_5aeaad09",
              "href": "fuse/triggers/trigger/playend_5aeaad09",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PlayEnd(bool, Action)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.PlayEnd(bool, Uno.Action)"
            }
          },
          {
            "comment": {
              "brief": "Plays to a specific progress with the given animation variant.",
              "full": "Plays to a specific progress with the given animation variant.\n\nPlaying follows the duration of time according to the animators in the trigger. Actions\nare executed appropriately."
            },
            "parameters": [
              {
                "name": "progress",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              },
              {
                "name": "variant",
                "href": "fuse/animations/animationvariant",
                "title": "AnimationVariant",
                "fullyQualifiedTitle": "Fuse.Animations.AnimationVariant"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/playto_6a293bdd",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/playto_6a293bdd",
              "href": "fuse/triggers/trigger/playto_6a293bdd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PlayTo(double, AnimationVariant)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.PlayTo(double, Fuse.Animations.AnimationVariant)"
            }
          },
          {
            "comment": {
              "brief": "Plays the trigger to progress 1 then back to 0.",
              "full": "Plays the trigger to progress 1 then back to 0.\n\nThis is intended for use in event/pulse-ilke triggers such as `Clicked`."
            },
            "id": {
              "id": "fuse/reactive/whilecount/pulse",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/pulse",
              "href": "fuse/triggers/trigger/pulse",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Pulse",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Pulse"
            }
          },
          {
            "comment": {
              "brief": "Plays the trigger starting at progress=1 down to 0.",
              "full": "Plays the trigger starting at progress=1 down to 0.\n\nThis is a special pulse for inverted animation triggers such as `AddingAnimation`."
            },
            "id": {
              "id": "fuse/reactive/whilecount/pulsebackward",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/pulsebackward",
              "href": "fuse/triggers/trigger/pulsebackward",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PulseBackward",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.PulseBackward"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/recreateanimationstate",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/recreateanimationstate",
              "href": "fuse/triggers/trigger/recreateanimationstate",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RecreateAnimationState",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.RecreateAnimationState"
            }
          },
          {
            "comment": {
              "brief": "Indicates the trigger is bound to the layout of a visual. This will keep the trigger in Bypass\nmode until after the first layout of the element is obtained. This is required since layout\ndoes not happen in the same root grouping/update phase as the creation of the element, yet\nnot having a layout should qualify as part of the rooting period.",
              "full": "Indicates the trigger is bound to the layout of a visual. This will keep the trigger in Bypass\nmode until after the first layout of the element is obtained. This is required since layout\ndoes not happen in the same root grouping/update phase as the creation of the element, yet\nnot having a layout should qualify as part of the rooting period.\n\nA trigger that deals with layout should call this during its rooting."
            },
            "parameters": [
              {
                "name": "visual",
                "href": "fuse/visual",
                "title": "Visual",
                "fullyQualifiedTitle": "Fuse.Visual"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/requirelayout_d61a1318",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/requirelayout_d61a1318",
              "href": "fuse/triggers/trigger/requirelayout_d61a1318",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RequireLayout(Visual)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.RequireLayout(Fuse.Visual)"
            }
          },
          {
            "comment": {
              "brief": "Seeks to a specific progress with the given animation variant.",
              "full": "Seeks to a specific progress with the given animation variant.\n\nTime is skipped over in seek and the animator's jump directly to the target progress. In non-bypass\nmode the actions will still be triggered (this is important to support user seeking operations\non gestures). In bypass mode the actions will be skipped."
            },
            "parameters": [
              {
                "name": "progress",
                "href": "uno/double",
                "title": "double",
                "fullyQualifiedTitle": "double"
              },
              {
                "name": "direction",
                "href": "fuse/animations/animationvariant",
                "title": "AnimationVariant",
                "fullyQualifiedTitle": "Fuse.Animations.AnimationVariant"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/seek_6a293bdd",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/seek_6a293bdd",
              "href": "fuse/triggers/trigger/seek_6a293bdd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Seek(double, AnimationVariant)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Seek(double, Fuse.Animations.AnimationVariant)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/start",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/start",
              "href": "fuse/triggers/trigger/start",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Start",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Start"
            }
          },
          {
            "parameters": [
              {
                "name": "force",
                "href": "uno/bool",
                "title": "bool",
                "fullyQualifiedTitle": "bool"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/stop_f0c97f29",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/stop_f0c97f29",
              "href": "fuse/triggers/trigger/stop_f0c97f29",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Stop(bool)",
              "fullyQualifiedIndexTitle": "Fuse.Triggers.Trigger.Stop(bool)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/nodegroupbase",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/nodegroupbase",
            "href": "fuse/nodegroupbase"
          },
          "titles": {
            "indexTitle": "NodeGroupBase",
            "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/ux/template",
              "title": "Template",
              "fullyQualifiedTitle": "Uno.UX.Template"
            },
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/findtemplate_968f99a6",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/findtemplate_968f99a6",
              "href": "fuse/nodegroupbase/findtemplate_968f99a6",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindTemplate(string)",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.FindTemplate(string)"
            }
          },
          {
            "parameters": [
              {
                "name": "n",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/onnodeadded_5070ac8a",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onnodeadded_5070ac8a",
              "href": "fuse/nodegroupbase/onnodeadded_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnNodeAdded(Node)",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.OnNodeAdded(Fuse.Node)"
            }
          },
          {
            "parameters": [
              {
                "name": "n",
                "href": "fuse/node",
                "title": "Node",
                "fullyQualifiedTitle": "Fuse.Node"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/onnoderemoved_5070ac8a",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onnoderemoved_5070ac8a",
              "href": "fuse/nodegroupbase/onnoderemoved_5070ac8a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnNodeRemoved(Node)",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase.OnNodeRemoved(Fuse.Node)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/node",
            "parentId": "fuse",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract",
              "partial"
            ]
          },
          "uri": {
            "idUri": "fuse/node",
            "href": "fuse/node"
          },
          "titles": {
            "indexTitle": "Node",
            "fullyQualifiedIndexTitle": "Fuse.Node"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/add_cd0f711d",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/add_cd0f711d",
              "href": "fuse/node/add_cd0f711d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Add(Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Add(Fuse.Binding)"
            }
          },
          {
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "fuse/reactive/whilecount/findbytype_1",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/findbytype_1",
              "href": "fuse/node/findbytype_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindByType<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.FindByType<T>"
            }
          },
          {
            "comment": {
              "brief": "Finds the first node with a given name that satisfies the given acceptor.\nThe serach algorithm works as follows: Nodes in the subtree are matched first, then\nit matches the nodes in the subtrees ofthe ancestor nodes by turn all the way to the\nroot. If no matching node is found, the function returns null.",
              "full": "Finds the first node with a given name that satisfies the given acceptor.\nThe serach algorithm works as follows: Nodes in the subtree are matched first, then\nit matches the nodes in the subtrees ofthe ancestor nodes by turn all the way to the\nroot. If no matching node is found, the function returns null."
            },
            "returns": {
              "href": "fuse/node",
              "title": "Node",
              "fullyQualifiedTitle": "Fuse.Node"
            },
            "parameters": [
              {
                "name": "name",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              },
              {
                "name": "acceptor",
                "href": "uno/predicate_1",
                "title": "Predicate<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Predicate<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/findnodebyname_66268add",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/findnodebyname_66268add",
              "href": "fuse/node/findnodebyname_66268add",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "FindNodeByName(Selector, Predicate<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Node.FindNodeByName(Uno.UX.Selector, Uno.Predicate<Fuse.Node> (Fuse.Node))"
            }
          },
          {
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "fuse/reactive/whilecount/getnearestancestoroftype_1",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/getnearestancestoroftype_1",
              "href": "fuse/node/getnearestancestoroftype_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetNearestAncestorOfType<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.GetNearestAncestorOfType<T>"
            }
          },
          {
            "parameters": [
              {
                "name": "index",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              },
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/insert_4036b6cf",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/insert_4036b6cf",
              "href": "fuse/node/insert_4036b6cf",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Insert(int, Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Insert(int, Fuse.Binding)"
            }
          },
          {
            "comment": {
              "brief": "Returns the next sibling node of the given type.",
              "full": "Returns the next sibling node of the given type."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "fuse/reactive/whilecount/nextsibling_1",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/nextsibling_1",
              "href": "fuse/node/nextsibling_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "NextSibling<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.NextSibling<T>"
            }
          },
          {
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "newValue",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/ondatachanged_d062e5a9",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/ondatachanged_d062e5a9",
              "href": "fuse/node/ondatachanged_d062e5a9",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnDataChanged(string, object)",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnDataChanged(string, object)"
            }
          },
          {
            "comment": {
              "brief": "If you override `OnRooted` you must call `base.OnRooted()` first in your derived class. No other processing should happen first, otherwise you might end up in an undefined state.",
              "full": "If you override `OnRooted` you must call `base.OnRooted()` first in your derived class. No other processing should happen first, otherwise you might end up in an undefined state."
            },
            "id": {
              "id": "fuse/reactive/whilecount/onrooted",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onrooted",
              "href": "fuse/node/onrooted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnRooted",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnRooted"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/onunrooted",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onunrooted",
              "href": "fuse/node/onunrooted",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnUnrooted",
              "fullyQualifiedIndexTitle": "Fuse.Node.OnUnrooted"
            }
          },
          {
            "comment": {
              "brief": "Returns the next sibling node of the given type.",
              "full": "Returns the next sibling node of the given type."
            },
            "returns": {
              "isVirtual": true,
              "title": "T",
              "fullyQualifiedTitle": "Fuse.T"
            },
            "id": {
              "id": "fuse/reactive/whilecount/previoussibling_1",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/previoussibling_1",
              "href": "fuse/node/previoussibling_1",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "PreviousSibling<T>",
              "fullyQualifiedIndexTitle": "Fuse.Node.PreviousSibling<T>"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "item",
                "href": "fuse/binding",
                "title": "Binding",
                "fullyQualifiedTitle": "Fuse.Binding"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/remove_cd0f711d",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/remove_cd0f711d",
              "href": "fuse/node/remove_cd0f711d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Remove(Binding)",
              "fullyQualifiedIndexTitle": "Fuse.Node.Remove(Fuse.Binding)"
            }
          },
          {
            "id": {
              "id": "fuse/reactive/whilecount/softdispose",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/softdispose",
              "href": "fuse/node/softdispose",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SoftDispose",
              "fullyQualifiedIndexTitle": "Fuse.Node.SoftDispose"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/reactive/whilecount/subtreetostring",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/subtreetostring",
              "href": "fuse/node/subtreetostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SubtreeToString",
              "fullyQualifiedIndexTitle": "Fuse.Node.SubtreeToString"
            }
          },
          {
            "parameters": [
              {
                "name": "sb",
                "href": "uno/text/stringbuilder",
                "title": "StringBuilder",
                "fullyQualifiedTitle": "Uno.Text.StringBuilder"
              },
              {
                "name": "indent",
                "href": "uno/int",
                "title": "int",
                "fullyQualifiedTitle": "int"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/subtreetostring_efe5f5b8",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/subtreetostring_efe5f5b8",
              "href": "fuse/node/subtreetostring_efe5f5b8",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "SubtreeToString(StringBuilder, int)",
              "fullyQualifiedIndexTitle": "Fuse.Node.SubtreeToString(Uno.Text.StringBuilder, int)"
            }
          },
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              },
              {
                "name": "acceptor",
                "href": "uno/predicate_1",
                "title": "Predicate<object> (object)",
                "fullyQualifiedTitle": "Uno.Predicate<object> (object)"
              },
              {
                "name": "resource",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/trygetresource_5317754b",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/trygetresource_5317754b",
              "href": "fuse/node/trygetresource_5317754b",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "TryGetResource(string, Predicate<object> (object), object)",
              "fullyQualifiedIndexTitle": "Fuse.Node.TryGetResource(string, Uno.Predicate<object> (object), object)"
            }
          },
          {
            "parameters": [
              {
                "name": "action",
                "href": "uno/action_1",
                "title": "Action<Node> (Node)",
                "fullyQualifiedTitle": "Uno.Action<Fuse.Node> (Fuse.Node)"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/visitsubtree_7a20b182",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/visitsubtree_7a20b182",
              "href": "fuse/node/visitsubtree_7a20b182",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "VisitSubtree(Action<Node> (Node))",
              "fullyQualifiedIndexTitle": "Fuse.Node.VisitSubtree(Uno.Action<Fuse.Node> (Fuse.Node))"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/ux/propertyobject",
            "parentId": "uno/ux",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "uno/ux/propertyobject",
            "href": "uno/ux/propertyobject"
          },
          "titles": {
            "indexTitle": "PropertyObject",
            "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/addpropertylistener_496a874a",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/addpropertylistener_496a874a",
              "href": "uno/ux/propertyobject/addpropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddPropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.AddPropertyListener(Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/onpropertychanged_16d735f3",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onpropertychanged_16d735f3",
              "href": "uno/ux/propertyobject/onpropertychanged_16d735f3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector)"
            }
          },
          {
            "parameters": [
              {
                "name": "property",
                "href": "uno/ux/selector",
                "title": "Selector",
                "fullyQualifiedTitle": "Uno.UX.Selector"
              },
              {
                "name": "origin",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/onpropertychanged_6422fe92",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "protected",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/onpropertychanged_6422fe92",
              "href": "uno/ux/propertyobject/onpropertychanged_6422fe92",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "OnPropertyChanged(Selector, IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.OnPropertyChanged(Uno.UX.Selector, Uno.UX.IPropertyListener)"
            }
          },
          {
            "parameters": [
              {
                "name": "listener",
                "href": "uno/ux/ipropertylistener",
                "title": "IPropertyListener",
                "fullyQualifiedTitle": "Uno.UX.IPropertyListener"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/removepropertylistener_496a874a",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/removepropertylistener_496a874a",
              "href": "uno/ux/propertyobject/removepropertylistener_496a874a",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "RemovePropertyListener(IPropertyListener)",
              "fullyQualifiedIndexTitle": "Uno.UX.PropertyObject.RemovePropertyListener(Uno.UX.IPropertyListener)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/reactive/whilecount/equals_a09c80e3",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/whilecount/gethashcode",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/reactive/whilecount/gettype",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/reactive/whilecount/tostring",
              "parentId": "fuse/reactive/whilecount",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/whilecount/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ]
  }
}