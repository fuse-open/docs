{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Expressions",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "context",
        "href": "fuse/reactive/icontext",
        "title": "IContext",
        "fullyQualifiedTitle": "Fuse.Reactive.IContext"
      },
      {
        "name": "listener",
        "href": "fuse/reactive/ilistener",
        "title": "IListener",
        "fullyQualifiedTitle": "Fuse.Reactive.IListener"
      }
    ],
    "returns": {
      "href": "uno/idisposable",
      "title": "IDisposable",
      "fullyQualifiedTitle": "Uno.IDisposable"
    },
    "id": {
      "id": "fuse/reactive/expression/subscribe_b0797a5a",
      "parentId": "fuse/reactive/expression",
      "type": "Method",
      "modifiers": [
        "public",
        "abstract"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/expression/subscribe_b0797a5a",
      "href": "fuse/reactive/expression/subscribe_b0797a5a"
    },
    "titles": {
      "pageTitle": "Expression.Subscribe Method (IContext, IListener)",
      "navigationTitle": "Subscribe Method (IContext, IListener)",
      "fullTitle": "Fuse.Reactive.Expression.Subscribe",
      "indexTitle": "Subscribe(IContext, IListener)",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.Expression.Subscribe(Fuse.Reactive.IContext, Fuse.Reactive.IListener)"
    },
    "syntax": {
      "uno": "public abstract Uno.IDisposable Subscribe(Fuse.Reactive.IContext context, Fuse.Reactive.IListener listener) {}"
    },
    "comment": {
      "brief": "See `IExpression.Subscribe` for docs.",
      "full": "See `IExpression.Subscribe` for docs."
    }
  },
  "tableOfContents": {}
}