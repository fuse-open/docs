{
  "entity": {
    "base": {
      "id": {
        "id": "uno/object",
        "parentId": "uno",
        "type": "Class",
        "modifiers": [
          "public",
          "intrinsic"
        ]
      },
      "uri": {
        "idUri": "uno/object",
        "href": "uno/object"
      },
      "titles": {
        "indexTitle": "object",
        "fullyQualifiedIndexTitle": "object"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Reactive",
      "namespaceUri": "fuse/reactive",
      "packageName": "Fuse.Reactive.Expressions",
      "packageVersion": "1.8.0-rc2"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "fuse/reactive/expression/argument",
            "title": "Fuse.Reactive.Argument",
            "children": [],
            "isCurrent": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse.Reactive",
      "uxNamespaceUri": "fuse/reactive",
      "uxName": "Argument"
    },
    "id": {
      "id": "fuse/reactive/expression/argument",
      "parentId": "fuse/reactive/expression",
      "type": "UxClass",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/reactive/expression/argument",
      "href": "fuse/reactive/expression/argument"
    },
    "titles": {
      "pageTitle": "Argument Class",
      "navigationTitle": "Argument Class",
      "fullTitle": "Fuse.Reactive.Expression.Argument",
      "indexTitle": "Argument",
      "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument"
    },
    "syntax": {
      "uno": "public class Argument {}",
      "ux": "<Argument />"
    },
    "comment": {
      "brief": "Holds information about an argument to an Expression",
      "full": "Holds information about an argument to an Expression",
      "attributes": {
        "advanced": true
      }
    }
  },
  "tableOfContents": {
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/reactive/expression/argument/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/reactive/expression/argument",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/reactive/expression/argument",
            "parentId": "fuse/reactive/expression",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/reactive/expression/argument",
            "href": "fuse/reactive/expression/argument"
          },
          "titles": {
            "indexTitle": "Argument",
            "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Creates a new Argument",
              "full": "Creates a new Argument"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/_ctor",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Constructor",
              "modifiers": [
                "public",
                "generated"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/_ctor",
              "href": "fuse/reactive/expression/argument/_ctor"
            },
            "titles": {
              "indexTitle": "Argument",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument.Argument"
            }
          }
        ]
      }
    ],
    "properties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/reactive/expression/argument",
            "parentId": "fuse/reactive/expression",
            "type": "UxClass",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/reactive/expression/argument",
            "href": "fuse/reactive/expression/argument"
          },
          "titles": {
            "indexTitle": "Argument",
            "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Whether or not this argument has yielded a value yet.\nThis can only return false if `OnNewPartialArguments` was overridden.",
              "full": "Whether or not this argument has yielded a value yet.\nThis can only return false if `OnNewPartialArguments` was overridden."
            },
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/hasvalue",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/hasvalue",
              "href": "fuse/reactive/expression/argument/hasvalue"
            },
            "titles": {
              "indexTitle": "HasValue",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument.HasValue"
            }
          },
          {
            "comment": {
              "brief": "The current value of the argument. If `HasValue` is `false`, `null` is returned.",
              "full": "The current value of the argument. If `HasValue` is `false`, `null` is returned."
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/value",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Property",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/value",
              "href": "fuse/reactive/expression/argument/value"
            },
            "titles": {
              "indexTitle": "Value",
              "fullyQualifiedIndexTitle": "Fuse.Reactive.Argument.Value"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/reactive/expression/argument/equals_a09c80e3",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/gethashcode",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/gettype",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/reactive/expression/argument/tostring",
              "parentId": "fuse/reactive/expression/argument",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/reactive/expression/argument/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ]
  }
}