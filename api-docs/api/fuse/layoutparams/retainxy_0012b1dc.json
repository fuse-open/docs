{
  "entity": {
    "location": {
      "namespaceTitle": "Fuse",
      "namespaceUri": "fuse",
      "packageName": "Fuse.Nodes",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "x",
        "href": "uno/bool",
        "title": "bool",
        "fullyQualifiedTitle": "bool"
      },
      {
        "name": "y",
        "href": "uno/bool",
        "title": "bool",
        "fullyQualifiedTitle": "bool"
      }
    ],
    "id": {
      "id": "fuse/layoutparams/retainxy_0012b1dc",
      "parentId": "fuse/layoutparams",
      "type": "Method",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/layoutparams/retainxy_0012b1dc",
      "href": "fuse/layoutparams/retainxy_0012b1dc"
    },
    "titles": {
      "pageTitle": "LayoutParams.RetainXY Method (bool, bool)",
      "navigationTitle": "RetainXY Method (bool, bool)",
      "fullTitle": "Fuse.LayoutParams.RetainXY",
      "indexTitle": "RetainXY(bool, bool)",
      "fullyQualifiedIndexTitle": "Fuse.LayoutParams.RetainXY(bool, bool)"
    },
    "syntax": {
      "uno": "public voidRetainXY(bool x, bool y) {}"
    },
    "comment": {
      "brief": "Retains or discards the X/Y information.",
      "full": "Retains or discards the X/Y information.\n\nBe careful when using this, it is typically used in combination with RetainMaxXY (or RetainAxesXY in combination), or with a ConstrainMax. The layout must consider how it affects not just the X/Y values, but also the Min/Max XY values."
    }
  },
  "tableOfContents": {}
}