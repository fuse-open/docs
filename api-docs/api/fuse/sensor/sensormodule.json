{
  "entity": {
    "base": {
      "id": {
        "id": "fuse/scripting/nativeeventemittermodule",
        "parentId": "fuse/scripting",
        "type": "Class",
        "modifiers": [
          "public"
        ]
      },
      "uri": {
        "idUri": "fuse/scripting/nativeeventemittermodule",
        "href": "fuse/scripting/nativeeventemittermodule"
      },
      "titles": {
        "indexTitle": "NativeEventEmitterModule",
        "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule"
      }
    },
    "location": {
      "namespaceTitle": "Fuse.Sensor",
      "namespaceUri": "fuse/sensor",
      "packageName": "Fuse.Sensor",
      "packageVersion": "2.9.1"
    },
    "inheritance": {
      "root": {
        "uri": "uno/object",
        "title": "object",
        "children": [
          {
            "uri": "fuse/scripting/module",
            "title": "Fuse.Scripting.Module",
            "children": [
              {
                "uri": "fuse/scripting/nativemodule",
                "title": "Fuse.Scripting.NativeModule",
                "children": [
                  {
                    "uri": "fuse/scripting/nativeeventemittermodule",
                    "title": "Fuse.Scripting.NativeEventEmitterModule",
                    "children": [
                      {
                        "uri": "fuse/sensor/sensormodule",
                        "title": "Fuse.Sensor.SensorModule",
                        "children": [],
                        "isCurrent": true
                      }
                    ],
                    "isAncestor": true
                  }
                ],
                "isAncestor": true
              }
            ],
            "isAncestor": true
          }
        ],
        "isAncestor": true
      },
      "hasInheritance": true
    },
    "uxProperties": {
      "uxNamespaceTitle": "Fuse",
      "uxNamespaceUri": "fuse",
      "uxName": "Sensor.SensorModule"
    },
    "implementedInterfaces": [
      {
        "id": {
          "id": "fuse/scripting/imoduleprovider",
          "parentId": "fuse/scripting",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "fuse/scripting/imoduleprovider",
          "href": "fuse/scripting/imoduleprovider"
        },
        "titles": {
          "indexTitle": "IModuleProvider",
          "fullyQualifiedIndexTitle": "Fuse.Scripting.IModuleProvider"
        }
      },
      {
        "id": {
          "id": "uno/idisposable",
          "parentId": "uno",
          "type": "Interface",
          "modifiers": [
            "public",
            "abstract"
          ]
        },
        "uri": {
          "idUri": "uno/idisposable",
          "href": "uno/idisposable"
        },
        "titles": {
          "indexTitle": "IDisposable",
          "fullyQualifiedIndexTitle": "Uno.IDisposable"
        }
      }
    ],
    "attributes": [
      {
        "id": {
          "id": "uno/ux/uxglobalmoduleattribute",
          "parentId": "uno/ux",
          "type": "Class",
          "modifiers": [
            "public",
            "sealed"
          ]
        },
        "uri": {
          "idUri": "uno/ux/uxglobalmoduleattribute",
          "href": "uno/ux/uxglobalmoduleattribute"
        },
        "titles": {
          "indexTitle": "UXGlobalModuleAttribute",
          "fullyQualifiedIndexTitle": "Uno.UX.UXGlobalModuleAttribute"
        }
      }
    ],
    "id": {
      "id": "fuse/sensor/sensormodule",
      "parentId": "fuse/sensor",
      "type": "JsModule",
      "modifiers": [
        "public"
      ]
    },
    "uri": {
      "idUri": "fuse/sensor/sensormodule",
      "href": "fuse/sensor/sensormodule"
    },
    "titles": {
      "pageTitle": "SensorModule Class",
      "navigationTitle": "SensorModule Class",
      "fullTitle": "Fuse.Sensor.SensorModule",
      "indexTitle": "SensorModule",
      "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule"
    },
    "syntax": {
      "uno": "[Uno.UX.UXGlobalModule]\npublic class SensorModule : Fuse.Scripting.NativeEventEmitterModule {}",
      "ux": "<Sensor.SensorModule />"
    },
    "comment": {
      "brief": "This module provides easy access to sensors on the device. There are 8 types of sensors supported by this module, namely:\n* Accelerometer Sensor\n* Gyroscope sensor\n* Magnetometer sensor\n* Gravity Sensor\n* User Acceleration Sensor\n* Rotation sensor\n* Step Counter Sensor\n* Pressure sensor",
      "full": "This module provides easy access to sensors on the device. There are 8 types of sensors supported by this module, namely:\n* Accelerometer Sensor\n* Gyroscope sensor\n* Magnetometer sensor\n* Gravity Sensor\n* User Acceleration Sensor\n* Rotation sensor\n* Step Counter Sensor\n* Pressure sensor\n\nBesides being able to read sensor data, this module can also monitor changes in state of the battery and network connectivity\n\nUse [startListening](api:fuse/sensor/sensormodule/startlistening_bbef95e2.json) to get continual sensor data updates.\n And use [stopListening](api:fuse/sensor/sensormodule/stoplistening_bbef95e2.json) to stop getting continual sensor data updates.\n\nYou need to add a reference to `\"Fuse.Sensor\"` in your project file to use this feature.\n\nThis module is an @EventEmitter, so the methods from @EventEmitter can be used to listen to events.\n\n> Please note that this module will not work on Desktop Preview. When running on the device, not all devices have a complete sensor hardware,\n>  so not all sensor output data can be obtained, it all depends on the availability of sensors on the device.\n>  Make sure to check \"error\" event for possible error that encounter.\n\n## Example\n\nThe following example shows how to access accelerometer sensor:\n```xml\n    <JavaScript>\n        var Observable = require(\"FuseJS/Observable\");\n        var Sensor = require(\"FuseJS/Sensor\");\n        var accelerometerData = Observable(\"\")\n        var errorMessage = Observable(\"\")\n\n        Sensor.on(\"error\", function(failMessage) {\n            errorMessage.value = failMessage;\n        });\n\n        Sensor.on(\"changed\", function(data) {\n            if (data.type == Sensor.ACCELEROMETER) {\n                accelerometerData.value = \"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z;\n            }\n        });\n\n        function startAccelerometerContinuousListener() {\n            Sensor.startListening(Sensor.ACCELEROMETER);\n        }\n\n        function stopAccelerometerContinuousListener() {\n            Sensor.stopListening(Sensor.ACCELEROMETER);\n        }\n\n        module.exports = {\n            startAccelerometerContinuousListener,\n            stopAccelerometerContinuousListener,\n            accelerometerData,\n            errorMessage\n        };\n    </JavaScript>\n\n    <StackPanel ItemSpacing=\"5\" Margin=\"0,30,0,0\">\n        <Text>Accelerometer data :</Text>\n        <Text Value=\"{accelerometerData}\" />\n        <Text Value=\"{errorMessage}\" Color=\"Red\" />\n\n        <Button Text=\"Start continuous Accelerometer listener\" Clicked=\"{startAccelerometerContinuousListener}\" />\n        <Button Text=\"Stop continuous Accelerometer listener\" Clicked=\"{stopAccelerometerContinuousListener}\" />\n    </StackPanel>\n```\nIn the above example we're using `\"changed\"` event. Data returned by this module are JavaScript objects of the following form:\n```json\n    {\n        type: sensor type (in this case is Sensor.ACCELEROMETER),\n        x: value of x axis,\n        y: value of y axis,\n        z: value of z axis,\n    }\n```\n## Output\n\nData returned on the \"changed\" event argument are JavaScript objects with always have `type` property.\n Value of `type` property determine what type sensor data it contains.\n\nAccelerometer, Gyroscope, Magnetometer, Gravity, User Acceleration and Rotation data all have same form of JavaScript object as desribed in the example below:\n```js\n    var Sensor = require(\"FuseJS/Sensor\")\n    Sensor.on('changed', function(data) {\n        switch (data.type) {\n            case Sensor.ACCELEROMETER:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n            case Sensor.GYROSCOPE:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n            case Sensor.MAGNETOMETER:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n            case Sensor.GRAVITY:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n            case Sensor.USER_ACCELERATION:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n            case Sensor.ROTATION:\n                console.log(\"X axis : \" + data.x + \" Y axis : \" + data.y + \" Z axis : \" + data.z);\n                break;\n        }\n    });\n\n    function startListeningSensor() {\n        Sensor.startListening(Sensor.ACCELEROMETER);\n        Sensor.startListening(Sensor.GYROSCOPE);\n        Sensor.startListening(Sensor.MAGNETOMETER);\n        Sensor.startListening(Sensor.GRAVITY);\n        Sensor.startListening(Sensor.USER_ACCELERATION);\n        Sensor.startListening(Sensor.ROTATION);\n    }\n\n    function stopListeningSensor() {\n        Sensor.stopListening(Sensor.ACCELEROMETER);\n        Sensor.stopListening(Sensor.GYROSCOPE);\n        Sensor.stopListening(Sensor.MAGNETOMETER);\n        Sensor.stopListening(Sensor.GRAVITY);\n        Sensor.stopListening(Sensor.USER_ACCELERATION);\n        Sensor.stopListening(Sensor.ROTATION);\n    }\n```\nStep counter and pressure data has slightly different output JavaScript object as described in the example below:\n```js\n    var Sensor = require(\"FuseJS/Sensor\")\n    Sensor.on('changed', function(data) {\n        switch (data.type) {\n            case Sensor.STEP_COUNTER:\n                console.log(\"Num Steps taken : \" + data.x);\n                break;\n            case Sensor.PRESSURE:\n                console.log(\"Pressure in hPa / mbar : \" + data.x);\n                console.log(\"Relative Altitude (iOS only) in meters : \" + data.y);\n                break;\n        }\n    });\n\n    function startListeningSensor() {\n        Sensor.startListening(Sensor.STEP_COUNTER);\n        Sensor.startListening(Sensor.PRESSURE);\n    }\n\n    function stopListeningSensor() {\n        Sensor.stopListening(Sensor.STEP_COUNTER);\n        Sensor.stopListening(Sensor.PRESSURE);\n    }\n```\nLastly, monitoring state changes of battery or network connectivity has output JavaScript object as follow:\n```js\n    var Sensor = require(\"FuseJS/Sensor\")\n    Sensor.on('changed', function(data) {\n        switch (data.type) {\n            case Sensor.BATTERY:\n                console.log(\"Battery level : \" + data.level);\n                console.log(\"Battery state : \" + data.state); // possible values : charging, unplug, full, not charging, unknown\n                break;\n            case Sensor.CONNECTION_STATE:\n                console.log(\"connection state : \" + data.state); // boolan value : true connected, false disconnected\n                console.log(\"connection state string : \" + data.stateString); // possible values : 'connected' or 'disconnected'\n                break;\n        }\n    });\n\n    function startMonitoringState() {\n        Sensor.startListening(Sensor.BATTERY);\n        Sensor.startListening(Sensor.CONNECTION_STATE);\n    }\n\n    function stopMonitoringState() {\n        Sensor.stopListening(Sensor.BATTERY);\n        Sensor.stopListening(Sensor.CONNECTION_STATE);\n    }\n```\nTo handle errors from Sensor we can listen to the `\"error\"` event, as follows:\n```js\n    var Sensor = require(\"FuseJS/Sensor\")\n    Sensor.on(\"error\", function(err) { ... })\n```",
      "attributes": {
        "scriptModule": "FuseJS/Sensor",
        "scriptProperty": "(int) CONNECTION_STATE track network connectivity states."
      }
    }
  },
  "tableOfContents": {
    "attachedUxProperties": [
      {
        "items": [
          {
            "comment": {
              "brief": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.",
              "full": "The `ux:Global` attribute creates a global resource that is accessible everywhere in UX markup.\n\nSee @Resources for more information.\n\nThe `ux:Global` attribute on an UX element creates a single object (singleton) that is globally available.\nUsing this attribute will prevent the object from being inserted by default the object at its defined location\nin the UX tree."
            },
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "parameters": [
              {
                "name": "obj",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "key",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/resource_globalkey_setglobalkey_4c3ac72d",
              "parentId": "fuse/sensor/sensormodule",
              "type": "AttachedUxProperty",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/resource_globalkey_setglobalkey_4c3ac72d",
              "href": "uno/ux/resource/setglobalkey_4c3ac72d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Resource.GlobalKey",
              "fullyQualifiedIndexTitle": "Resource.GlobalKey"
            }
          }
        ]
      }
    ],
    "uxEvents": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/nativemodule",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/nativemodule",
            "href": "fuse/scripting/nativemodule"
          },
          "titles": {
            "indexTitle": "NativeModule",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/eventhandler",
              "title": "EventHandler (object, EventArgs)",
              "fullyQualifiedTitle": "Uno.EventHandler (object, Uno.EventArgs)"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/reset",
              "parentId": "fuse/sensor/sensormodule",
              "type": "UxEvent",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/reset",
              "href": "fuse/scripting/nativemodule/reset",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Reset",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule.Reset"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/eventhandler",
              "title": "EventHandler (object, EventArgs)",
              "fullyQualifiedTitle": "Uno.EventHandler (object, Uno.EventArgs)"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/evaluated",
              "parentId": "fuse/sensor/sensormodule",
              "type": "UxEvent",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/evaluated",
              "href": "fuse/scripting/module/evaluated",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluated",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluated"
            }
          }
        ]
      }
    ],
    "jsEvents": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/sensor/sensormodule",
            "parentId": "fuse/sensor",
            "type": "JsModule",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/sensor/sensormodule",
            "href": "fuse/sensor/sensormodule"
          },
          "titles": {
            "indexTitle": "SensorModule",
            "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Raised when the sensor changes.",
              "full": "Raised when the sensor changes.\n\nUse [startListening](api:fuse/sensor/sensormodule/startlistening_bbef95e2.json) to get these events.",
              "attributes": {
                "scriptEvent": "changed(location)",
                "parameters": [
                  {
                    "name": "data",
                    "description": "will contain the new data, see @SensorData or @BatteryData or @InternetConnectionData"
                  }
                ]
              }
            },
            "parameters": [
              {
                "name": "data",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/datachanged_a09c80e3",
              "parentId": "fuse/sensor/sensormodule",
              "type": "JsEvent",
              "modifiers": [
                "private"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/datachanged_a09c80e3",
              "href": "fuse/sensor/sensormodule/datachanged_a09c80e3"
            },
            "titles": {
              "indexTitle": "DataChanged(object)",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.DataChanged(object)"
            }
          },
          {
            "comment": {
              "brief": "Raised when an error occurs.",
              "full": "Raised when an error occurs.",
              "attributes": {
                "scriptEvent": "error(error)",
                "parameters": [
                  {
                    "name": "error",
                    "description": "a string describing the error"
                  }
                ]
              }
            },
            "parameters": [
              {
                "name": "error",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/onerror_968f99a6",
              "parentId": "fuse/sensor/sensormodule",
              "type": "JsEvent",
              "modifiers": [
                "private"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/onerror_968f99a6",
              "href": "fuse/sensor/sensormodule/onerror_968f99a6"
            },
            "titles": {
              "indexTitle": "OnError(string)",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.OnError(string)"
            }
          }
        ]
      }
    ],
    "jsMethods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/sensor/sensormodule",
            "parentId": "fuse/sensor",
            "type": "JsModule",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/sensor/sensormodule",
            "href": "fuse/sensor/sensormodule"
          },
          "titles": {
            "indexTitle": "SensorModule",
            "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "check whether sensor module is sensing for particular sensor.",
              "full": "check whether sensor module is sensing for particular sensor.",
              "attributes": {
                "scriptMethod": {
                  "name": "isSensing",
                  "parameters": [
                    "sensorType"
                  ]
                },
                "parameters": [
                  {
                    "name": "sensorType",
                    "description": "what type sensor that want to check. see @SensorType for details"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/issensing_bbef95e2",
              "parentId": "fuse/sensor/sensormodule",
              "type": "JsMethod",
              "modifiers": [
                "private"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/issensing_bbef95e2",
              "href": "fuse/sensor/sensormodule/issensing_bbef95e2"
            },
            "titles": {
              "indexTitle": "IsSensing(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.IsSensing(Fuse.Scripting.Context, object[])"
            }
          },
          {
            "comment": {
              "brief": "Starts the Sensor listening service.",
              "full": "Starts the Sensor listening service.\n\n[onChanged](api:fuse/sensor/sensormodule/datachanged_a09c80e3.json)\nevents will be generated as the sensor changes.\n\nUse [stopListening](api:fuse/sensor/sensormodule/stoplistening_bbef95e2.json) to stop the service.",
              "attributes": {
                "scriptMethod": {
                  "name": "startListening",
                  "parameters": [
                    "sensorType"
                  ]
                },
                "parameters": [
                  {
                    "name": "sensorType",
                    "description": "what type sensor that want to listen. see @SensorType for details"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/startlistening_bbef95e2",
              "parentId": "fuse/sensor/sensormodule",
              "type": "JsMethod",
              "modifiers": [
                "private"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/startlistening_bbef95e2",
              "href": "fuse/sensor/sensormodule/startlistening_bbef95e2"
            },
            "titles": {
              "indexTitle": "StartListening(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.StartListening(Fuse.Scripting.Context, object[])"
            }
          },
          {
            "comment": {
              "brief": "Stops the Sensor listening service.",
              "full": "Stops the Sensor listening service.",
              "attributes": {
                "scriptMethod": {
                  "name": "stopListening",
                  "parameters": [
                    "sensorType"
                  ]
                },
                "parameters": [
                  {
                    "name": "sensorType",
                    "description": "what type sensor that want to stop listen. see @SensorType for details"
                  }
                ]
              }
            },
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/stoplistening_bbef95e2",
              "parentId": "fuse/sensor/sensormodule",
              "type": "JsMethod",
              "modifiers": [
                "private"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/stoplistening_bbef95e2",
              "href": "fuse/sensor/sensormodule/stoplistening_bbef95e2"
            },
            "titles": {
              "indexTitle": "StopListening(Context, object[])",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.StopListening(Fuse.Scripting.Context, object[])"
            }
          }
        ]
      }
    ],
    "constructors": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/sensor/sensormodule",
            "parentId": "fuse/sensor",
            "type": "JsModule",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/sensor/sensormodule",
            "href": "fuse/sensor/sensormodule"
          },
          "titles": {
            "indexTitle": "SensorModule",
            "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule"
          }
        },
        "items": [
          {
            "id": {
              "id": "fuse/sensor/sensormodule/_ctor",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Constructor",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/_ctor",
              "href": "fuse/sensor/sensormodule/_ctor"
            },
            "titles": {
              "indexTitle": "SensorModule",
              "fullyQualifiedIndexTitle": "Fuse.Sensor.SensorModule.SensorModule"
            }
          }
        ]
      }
    ],
    "properties": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/isevaluated",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Property",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/isevaluated",
              "href": "fuse/scripting/module/isevaluated",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "IsEvaluated",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.IsEvaluated"
            }
          }
        ]
      }
    ],
    "methods": [
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/nativeeventemittermodule",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/nativeeventemittermodule",
            "href": "fuse/scripting/nativeeventemittermodule"
          },
          "titles": {
            "indexTitle": "NativeEventEmitterModule",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule"
          }
        },
        "items": [
          {
            "comment": {
              "brief": "Call `emit` with the given arguments on the underlying JS EventEmitter.",
              "full": "Call `emit` with the given arguments on the underlying JS EventEmitter.\n\nThe `emit` action is dispatched to the JS thread."
            },
            "parameters": [
              {
                "name": "args",
                "href": "uno/object",
                "title": "object[]",
                "fullyQualifiedTitle": "object[]"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/emit_95a738ba",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/emit_95a738ba",
              "href": "fuse/scripting/nativeeventemittermodule/emit_95a738ba",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Emit(object[])",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.Emit(object[])"
            }
          },
          {
            "comment": {
              "brief": "Call `emit(\"error\", reason)` on the underlying JS EventEmitter.",
              "full": "Call `emit(\"error\", reason)` on the underlying JS EventEmitter."
            },
            "parameters": [
              {
                "name": "reason",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/emiterror_968f99a6",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/emiterror_968f99a6",
              "href": "fuse/scripting/nativeeventemittermodule/emiterror_968f99a6",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EmitError(string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.EmitError(string)"
            }
          },
          {
            "comment": {
              "brief": "Call `emit(\"error\", new Error(reason))` on the underlying JS EventEmitter.",
              "full": "Call `emit(\"error\", new Error(reason))` on the underlying JS EventEmitter."
            },
            "parameters": [
              {
                "name": "reason",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/emiterrorobject_968f99a6",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/emiterrorobject_968f99a6",
              "href": "fuse/scripting/nativeeventemittermodule/emiterrorobject_968f99a6",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EmitErrorObject(string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.EmitErrorObject(string)"
            }
          },
          {
            "comment": {
              "brief": "Call `emit` on the underlying JS EventEmitter with factory-generated arguments.",
              "full": "Call `emit` on the underlying JS EventEmitter with factory-generated arguments.\n\nThe `argsFactory` parameter will be called on the JS\nthread with a valid context, allowing us to use it to\ngenerate the arguments to `emit`."
            },
            "parameters": [
              {
                "name": "argsFactory",
                "href": "uno/func_2",
                "title": "Func<Context, object[]> (Context)",
                "fullyQualifiedTitle": "Uno.Func<Fuse.Scripting.Context, object[]> (Fuse.Scripting.Context)"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/emitfactory_77c0158b",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/emitfactory_77c0158b",
              "href": "fuse/scripting/nativeeventemittermodule/emitfactory_77c0158b",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EmitFactory(Func<Context, object[]> (Context))",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.EmitFactory(Uno.Func<Fuse.Scripting.Context, object[]> (Fuse.Scripting.Context))"
            }
          },
          {
            "comment": {
              "brief": "Call `emit` on the underlying JS EventEmitter with factory-generated arguments.",
              "full": "Call `emit` on the underlying JS EventEmitter with factory-generated arguments.\n\nThe `argsFactory` parameter will be called on the JS\nthread with a valid context, allowing us to use it to\ngenerate the arguments to `emit`."
            },
            "parameters": [
              {
                "name": "argsFactory",
                "href": "uno/func_3",
                "title": "Func<Context, T, object[]> (Context, T)",
                "fullyQualifiedTitle": "Uno.Func<Fuse.Scripting.Context, T, object[]> (Fuse.Scripting.Context, T)"
              },
              {
                "name": "t",
                "isVirtual": true,
                "title": "T",
                "fullyQualifiedTitle": "Fuse.Scripting.T"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/emitfactory_1_964a64f9",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/emitfactory_1_964a64f9",
              "href": "fuse/scripting/nativeeventemittermodule/emitfactory_1_964a64f9",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EmitFactory<T>(Func<Context, T, object[]> (Context, T), T)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.EmitFactory<T>(Uno.Func<Fuse.Scripting.Context, T, object[]> (Fuse.Scripting.Context, T), T)"
            }
          },
          {
            "comment": {
              "brief": "Connect a @Callback to an event.",
              "full": "Connect a @Callback to an event.\n\nThe @Callback will be called whenever the event is triggered."
            },
            "parameters": [
              {
                "name": "eventName",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "listener",
                "href": "fuse/scripting/callback",
                "title": "Callback (Context, object[])",
                "fullyQualifiedTitle": "Fuse.Scripting.Callback (Fuse.Scripting.Context, object[])"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/on_a22edd7d",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/on_a22edd7d",
              "href": "fuse/scripting/nativeeventemittermodule/on_a22edd7d",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "On(object, Callback (Context, object[]))",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.On(object, Fuse.Scripting.Callback (Fuse.Scripting.Context, object[]))"
            }
          },
          {
            "comment": {
              "brief": "Connect a @NativeEvent to an event.",
              "full": "Connect a @NativeEvent to an event.\n\nThe @NativeEvent will be triggered whenever the event is triggered."
            },
            "parameters": [
              {
                "name": "eventName",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "nativeEvent",
                "href": "fuse/scripting/nativeevent",
                "title": "NativeEvent",
                "fullyQualifiedTitle": "Fuse.Scripting.NativeEvent"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/on_d9bc62ce",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/on_d9bc62ce",
              "href": "fuse/scripting/nativeeventemittermodule/on_d9bc62ce",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "On(object, NativeEvent)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeEventEmitterModule.On(object, Fuse.Scripting.NativeEvent)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/nativemodule",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/nativemodule",
            "href": "fuse/scripting/nativemodule"
          },
          "titles": {
            "indexTitle": "NativeModule",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule"
          }
        },
        "items": [
          {
            "parameters": [
              {
                "name": "member",
                "href": "fuse/scripting/nativemember",
                "title": "NativeMember",
                "fullyQualifiedTitle": "Fuse.Scripting.NativeMember"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/addmember_645dc1d4",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "protected"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/addmember_645dc1d4",
              "href": "fuse/scripting/nativemodule/addmember_645dc1d4",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "AddMember(NativeMember)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.NativeModule.AddMember(Fuse.Scripting.NativeMember)"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "fuse/scripting/module",
            "parentId": "fuse/scripting",
            "type": "Class",
            "modifiers": [
              "public",
              "abstract"
            ]
          },
          "uri": {
            "idUri": "fuse/scripting/module",
            "href": "fuse/scripting/module"
          },
          "titles": {
            "indexTitle": "Module",
            "fullyQualifiedIndexTitle": "Fuse.Scripting.Module"
          }
        },
        "items": [
          {
            "id": {
              "id": "fuse/sensor/sensormodule/dispose",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/dispose",
              "href": "fuse/scripting/module/dispose",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Dispose",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Dispose"
            }
          },
          {
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "result",
                "href": "fuse/scripting/moduleresult",
                "title": "ModuleResult",
                "fullyQualifiedTitle": "Fuse.Scripting.ModuleResult"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/evaluate_0c699bd3",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/evaluate_0c699bd3",
              "href": "fuse/scripting/module/evaluate_0c699bd3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluate(Context, ModuleResult)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluate(Fuse.Scripting.Context, Fuse.Scripting.ModuleResult)"
            }
          },
          {
            "returns": {
              "href": "fuse/scripting/moduleresult",
              "title": "ModuleResult",
              "fullyQualifiedTitle": "Fuse.Scripting.ModuleResult"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "id",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/evaluate_8fde98fd",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/evaluate_8fde98fd",
              "href": "fuse/scripting/module/evaluate_8fde98fd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Evaluate(Context, string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.Evaluate(Fuse.Scripting.Context, string)"
            }
          },
          {
            "returns": {
              "href": "uno/object",
              "title": "object",
              "fullyQualifiedTitle": "object"
            },
            "parameters": [
              {
                "name": "c",
                "href": "fuse/scripting/context",
                "title": "Context",
                "fullyQualifiedTitle": "Fuse.Scripting.Context"
              },
              {
                "name": "id",
                "href": "uno/string",
                "title": "string",
                "fullyQualifiedTitle": "string"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/evaluateexports_8fde98fd",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/evaluateexports_8fde98fd",
              "href": "fuse/scripting/module/evaluateexports_8fde98fd",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "EvaluateExports(Context, string)",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.EvaluateExports(Fuse.Scripting.Context, string)"
            }
          },
          {
            "comment": {
              "brief": "Returns the file source that will be watched by the Context for changes in Fuse preview.\nOverride in subclasses and return correct file source to support live updates\nin Fuse preview.",
              "full": "Returns the file source that will be watched by the Context for changes in Fuse preview.\nOverride in subclasses and return correct file source to support live updates\nin Fuse preview."
            },
            "returns": {
              "href": "uno/ux/filesource",
              "title": "FileSource",
              "fullyQualifiedTitle": "Uno.UX.FileSource"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/getfile",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/getfile",
              "href": "fuse/scripting/module/getfile",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetFile",
              "fullyQualifiedIndexTitle": "Fuse.Scripting.Module.GetFile"
            }
          }
        ]
      },
      {
        "declaredIn": {
          "id": {
            "id": "uno/object",
            "parentId": "uno",
            "type": "Class",
            "modifiers": [
              "public",
              "intrinsic"
            ]
          },
          "uri": {
            "idUri": "uno/object",
            "href": "uno/object"
          },
          "titles": {
            "indexTitle": "object",
            "fullyQualifiedIndexTitle": "object"
          }
        },
        "items": [
          {
            "returns": {
              "href": "uno/bool",
              "title": "bool",
              "fullyQualifiedTitle": "bool"
            },
            "parameters": [
              {
                "name": "o",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              }
            ],
            "id": {
              "id": "fuse/sensor/sensormodule/equals_a09c80e3",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/equals_a09c80e3",
              "href": "uno/object/equals_a09c80e3",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "Equals(object)",
              "fullyQualifiedIndexTitle": "Uno.Object.Equals(object)"
            }
          },
          {
            "returns": {
              "href": "uno/int",
              "title": "int",
              "fullyQualifiedTitle": "int"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/gethashcode",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/gethashcode",
              "href": "uno/object/gethashcode",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetHashCode",
              "fullyQualifiedIndexTitle": "Uno.Object.GetHashCode"
            }
          },
          {
            "returns": {
              "href": "uno/type",
              "title": "Type",
              "fullyQualifiedTitle": "Uno.Type"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/gettype",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/gettype",
              "href": "uno/object/gettype",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "GetType",
              "fullyQualifiedIndexTitle": "Uno.Object.GetType"
            }
          },
          {
            "returns": {
              "href": "uno/string",
              "title": "string",
              "fullyQualifiedTitle": "string"
            },
            "id": {
              "id": "fuse/sensor/sensormodule/tostring",
              "parentId": "fuse/sensor/sensormodule",
              "type": "Method",
              "modifiers": [
                "public",
                "virtual"
              ]
            },
            "uri": {
              "idUri": "fuse/sensor/sensormodule/tostring",
              "href": "uno/object/tostring",
              "isVirtual": true
            },
            "titles": {
              "indexTitle": "ToString",
              "fullyQualifiedIndexTitle": "Uno.Object.ToString"
            }
          }
        ]
      }
    ]
  }
}