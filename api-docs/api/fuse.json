{
  "entity": {
    "id": {
      "id": "fuse",
      "type": "Namespace",
      "modifiers": []
    },
    "uri": {
      "idUri": "fuse",
      "href": "fuse"
    },
    "titles": {
      "pageTitle": "Fuse Namespace",
      "navigationTitle": "Fuse Namespace",
      "fullTitle": "Fuse",
      "indexTitle": "Fuse",
      "fullyQualifiedIndexTitle": "Fuse"
    },
    "syntax": {
      "uno": "namespace Fuse {}"
    }
  },
  "tableOfContents": {
    "namespaces": [
      {
        "items": [
          {
            "id": {
              "id": "fuse/android",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/android",
              "href": "fuse/android"
            },
            "titles": {
              "indexTitle": "Fuse.Android",
              "fullyQualifiedIndexTitle": "Fuse.Android"
            }
          },
          {
            "id": {
              "id": "fuse/animations",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/animations",
              "href": "fuse/animations"
            },
            "titles": {
              "indexTitle": "Fuse.Animations",
              "fullyQualifiedIndexTitle": "Fuse.Animations"
            }
          },
          {
            "id": {
              "id": "fuse/camera",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/camera",
              "href": "fuse/camera"
            },
            "titles": {
              "indexTitle": "Fuse.Camera",
              "fullyQualifiedIndexTitle": "Fuse.Camera"
            }
          },
          {
            "id": {
              "id": "fuse/cameraroll",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/cameraroll",
              "href": "fuse/cameraroll"
            },
            "titles": {
              "indexTitle": "Fuse.CameraRoll",
              "fullyQualifiedIndexTitle": "Fuse.CameraRoll"
            }
          },
          {
            "id": {
              "id": "fuse/charting",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/charting",
              "href": "fuse/charting"
            },
            "titles": {
              "indexTitle": "Fuse.Charting",
              "fullyQualifiedIndexTitle": "Fuse.Charting"
            }
          },
          {
            "id": {
              "id": "fuse/controls",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/controls",
              "href": "fuse/controls"
            },
            "titles": {
              "indexTitle": "Fuse.Controls",
              "fullyQualifiedIndexTitle": "Fuse.Controls"
            }
          },
          {
            "id": {
              "id": "fuse/designer",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/designer",
              "href": "fuse/designer"
            },
            "titles": {
              "indexTitle": "Fuse.Designer",
              "fullyQualifiedIndexTitle": "Fuse.Designer"
            }
          },
          {
            "id": {
              "id": "fuse/drawing",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/drawing",
              "href": "fuse/drawing"
            },
            "titles": {
              "indexTitle": "Fuse.Drawing",
              "fullyQualifiedIndexTitle": "Fuse.Drawing"
            }
          },
          {
            "id": {
              "id": "fuse/effects",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/effects",
              "href": "fuse/effects"
            },
            "titles": {
              "indexTitle": "Fuse.Effects",
              "fullyQualifiedIndexTitle": "Fuse.Effects"
            }
          },
          {
            "id": {
              "id": "fuse/elements",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/elements",
              "href": "fuse/elements"
            },
            "titles": {
              "indexTitle": "Fuse.Elements",
              "fullyQualifiedIndexTitle": "Fuse.Elements"
            }
          },
          {
            "id": {
              "id": "fuse/filesystem",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/filesystem",
              "href": "fuse/filesystem"
            },
            "titles": {
              "indexTitle": "Fuse.FileSystem",
              "fullyQualifiedIndexTitle": "Fuse.FileSystem"
            }
          },
          {
            "id": {
              "id": "fuse/geolocation",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/geolocation",
              "href": "fuse/geolocation"
            },
            "titles": {
              "indexTitle": "Fuse.GeoLocation",
              "fullyQualifiedIndexTitle": "Fuse.GeoLocation"
            }
          },
          {
            "id": {
              "id": "fuse/gestures",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/gestures",
              "href": "fuse/gestures"
            },
            "titles": {
              "indexTitle": "Fuse.Gestures",
              "fullyQualifiedIndexTitle": "Fuse.Gestures"
            }
          },
          {
            "id": {
              "id": "fuse/imagetools",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/imagetools",
              "href": "fuse/imagetools"
            },
            "titles": {
              "indexTitle": "Fuse.ImageTools",
              "fullyQualifiedIndexTitle": "Fuse.ImageTools"
            }
          },
          {
            "id": {
              "id": "fuse/input",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/input",
              "href": "fuse/input"
            },
            "titles": {
              "indexTitle": "Fuse.Input",
              "fullyQualifiedIndexTitle": "Fuse.Input"
            }
          },
          {
            "id": {
              "id": "fuse/internal",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/internal",
              "href": "fuse/internal"
            },
            "titles": {
              "indexTitle": "Fuse.Internal",
              "fullyQualifiedIndexTitle": "Fuse.Internal"
            }
          },
          {
            "id": {
              "id": "fuse/ios",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/ios",
              "href": "fuse/ios"
            },
            "titles": {
              "indexTitle": "Fuse.iOS",
              "fullyQualifiedIndexTitle": "Fuse.iOS"
            }
          },
          {
            "id": {
              "id": "fuse/launcherimpl",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/launcherimpl",
              "href": "fuse/launcherimpl"
            },
            "titles": {
              "indexTitle": "Fuse.LauncherImpl",
              "fullyQualifiedIndexTitle": "Fuse.LauncherImpl"
            }
          },
          {
            "id": {
              "id": "fuse/layouts",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/layouts",
              "href": "fuse/layouts"
            },
            "titles": {
              "indexTitle": "Fuse.Layouts",
              "fullyQualifiedIndexTitle": "Fuse.Layouts"
            }
          },
          {
            "id": {
              "id": "fuse/localnotifications",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/localnotifications",
              "href": "fuse/localnotifications"
            },
            "titles": {
              "indexTitle": "Fuse.LocalNotifications",
              "fullyQualifiedIndexTitle": "Fuse.LocalNotifications"
            }
          },
          {
            "id": {
              "id": "fuse/models",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/models",
              "href": "fuse/models"
            },
            "titles": {
              "indexTitle": "Fuse.Models",
              "fullyQualifiedIndexTitle": "Fuse.Models"
            }
          },
          {
            "id": {
              "id": "fuse/motion",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/motion",
              "href": "fuse/motion"
            },
            "titles": {
              "indexTitle": "Fuse.Motion",
              "fullyQualifiedIndexTitle": "Fuse.Motion"
            }
          },
          {
            "id": {
              "id": "fuse/navigation",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/navigation",
              "href": "fuse/navigation"
            },
            "titles": {
              "indexTitle": "Fuse.Navigation",
              "fullyQualifiedIndexTitle": "Fuse.Navigation"
            }
          },
          {
            "id": {
              "id": "fuse/physics",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/physics",
              "href": "fuse/physics"
            },
            "titles": {
              "indexTitle": "Fuse.Physics",
              "fullyQualifiedIndexTitle": "Fuse.Physics"
            }
          },
          {
            "id": {
              "id": "fuse/platform",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/platform",
              "href": "fuse/platform"
            },
            "titles": {
              "indexTitle": "Fuse.Platform",
              "fullyQualifiedIndexTitle": "Fuse.Platform"
            }
          },
          {
            "id": {
              "id": "fuse/pushnotifications",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/pushnotifications",
              "href": "fuse/pushnotifications"
            },
            "titles": {
              "indexTitle": "Fuse.PushNotifications",
              "fullyQualifiedIndexTitle": "Fuse.PushNotifications"
            }
          },
          {
            "id": {
              "id": "fuse/reactive",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/reactive",
              "href": "fuse/reactive"
            },
            "titles": {
              "indexTitle": "Fuse.Reactive",
              "fullyQualifiedIndexTitle": "Fuse.Reactive"
            }
          },
          {
            "id": {
              "id": "fuse/resources",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/resources",
              "href": "fuse/resources"
            },
            "titles": {
              "indexTitle": "Fuse.Resources",
              "fullyQualifiedIndexTitle": "Fuse.Resources"
            }
          },
          {
            "id": {
              "id": "fuse/scripting",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/scripting",
              "href": "fuse/scripting"
            },
            "titles": {
              "indexTitle": "Fuse.Scripting",
              "fullyQualifiedIndexTitle": "Fuse.Scripting"
            }
          },
          {
            "id": {
              "id": "fuse/selection",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/selection",
              "href": "fuse/selection"
            },
            "titles": {
              "indexTitle": "Fuse.Selection",
              "fullyQualifiedIndexTitle": "Fuse.Selection"
            }
          },
          {
            "id": {
              "id": "fuse/share",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/share",
              "href": "fuse/share"
            },
            "titles": {
              "indexTitle": "Fuse.Share",
              "fullyQualifiedIndexTitle": "Fuse.Share"
            }
          },
          {
            "id": {
              "id": "fuse/storage",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/storage",
              "href": "fuse/storage"
            },
            "titles": {
              "indexTitle": "Fuse.Storage",
              "fullyQualifiedIndexTitle": "Fuse.Storage"
            }
          },
          {
            "id": {
              "id": "fuse/testing",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/testing",
              "href": "fuse/testing"
            },
            "titles": {
              "indexTitle": "Fuse.Testing",
              "fullyQualifiedIndexTitle": "Fuse.Testing"
            }
          },
          {
            "id": {
              "id": "fuse/text",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/text",
              "href": "fuse/text"
            },
            "titles": {
              "indexTitle": "Fuse.Text",
              "fullyQualifiedIndexTitle": "Fuse.Text"
            }
          },
          {
            "id": {
              "id": "fuse/triggers",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/triggers",
              "href": "fuse/triggers"
            },
            "titles": {
              "indexTitle": "Fuse.Triggers",
              "fullyQualifiedIndexTitle": "Fuse.Triggers"
            }
          },
          {
            "id": {
              "id": "fuse/vibration",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/vibration",
              "href": "fuse/vibration"
            },
            "titles": {
              "indexTitle": "Fuse.Vibration",
              "fullyQualifiedIndexTitle": "Fuse.Vibration"
            }
          },
          {
            "id": {
              "id": "fuse/videotools",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/videotools",
              "href": "fuse/videotools"
            },
            "titles": {
              "indexTitle": "Fuse.VideoTools",
              "fullyQualifiedIndexTitle": "Fuse.VideoTools"
            }
          },
          {
            "id": {
              "id": "fuse/websocket",
              "parentId": "fuse",
              "type": "Namespace",
              "modifiers": []
            },
            "uri": {
              "idUri": "fuse/websocket",
              "href": "fuse/websocket"
            },
            "titles": {
              "indexTitle": "Fuse.WebSocket",
              "fullyQualifiedIndexTitle": "Fuse.WebSocket"
            }
          }
        ]
      }
    ],
    "uxClasses": [
      {
        "items": [
          {
            "comment": {
              "brief": "Allows placing a node in a different place in the UX tree than the location of this\nbehavior, while keeping the data context from this behavior.",
              "full": "Allows placing a node in a different place in the UX tree than the location of this\nbehavior, while keeping the data context from this behavior.\n\n## Example\n    <Panel ux:Class=\"MyPage\">\n        <Visual ux:Dependency=\"navBar\" />\n        <string ux:Property=\"Content\" />\n        <float4 ux:Property=\"Highlight\" />\n        <Text Alignment=\"Center\" Value=\"{ReadProperty Content}\" />\n        <WhileActive>\n            <AlternateRoot ParentNode=\"navBar\">\n                <Rectangle Color=\"{ReadProperty Highlight}\" />\n            </AlternateRoot>\n        </WhileActive>\n    </Panel>\n\n    <ClientPanel>\n        <Panel ux:Name=\"navBar\" Dock=\"Top\" Height=\"56\" />\n        <PageControl>\n            <MyPage Content=\"Page 1\" Highlight=\"#18f\" navBar=\"navBar\" />\n            <MyPage Content=\"Page 2\" Highlight=\"#1f8\" navBar=\"navBar\" />\n        </PageControl>\n    </ClientPanel>"
            },
            "id": {
              "id": "fuse/alternateroot",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/alternateroot",
              "href": "fuse/alternateroot"
            },
            "titles": {
              "indexTitle": "AlternateRoot",
              "fullyQualifiedIndexTitle": "Fuse.AlternateRoot"
            }
          },
          {
            "comment": {
              "brief": "Defers the creation of nodes to improve initialization time.",
              "full": "Defers the creation of nodes to improve initialization time.\n\n`Deferred` says that the content is not required immediately and may be created somewhat later. This allows the app to startup faster, or to create new pages faster. Without `Deferred` the nodes are initialized all in the same frame, which can lead to delays. With `Deferred` the node creation is staggered over several frames. This allows the app to start rendering and displaying prior to being completely initialized.\n\nA common use is with an @Each:\n\n    <Each Items=\"{items}\">\n        <Deferred>\n            <StackPanel Orientation=\"Horizontal\">\n                <Text Value=\"{name}\"/>\n                <Text Value=\"{address}\"/>\n                <Text Value=\"{phone}\"/>\n            </StackPanel>\n        </Deferred>\n    </Each>\n\nNote that the delay is measured in frames: deferred content will still be added quickly. Nonetheless it may result in some popping of the new elements and a change in layout.\n\nYou only need to use this feature when you are having initializaiton time problems at startup or on new pages. Wrapping the content of @Each in `Deferred` is a simple change that can help when you are using lists of items. The individual pages of a top-level @PageControl may also be suitable for `Deferred`.\n\nDo not use this on the pages of a @Navigator or other control that accepts templates. Templates are already created on demand and wrapping them in `Deferred` usually won't be helpful."
            },
            "id": {
              "id": "fuse/deferred",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/deferred",
              "href": "fuse/deferred"
            },
            "titles": {
              "indexTitle": "Deferred",
              "fullyQualifiedIndexTitle": "Fuse.Deferred"
            }
          },
          {
            "comment": {
              "brief": "Represents a specific typeface.",
              "full": "Represents a specific typeface.\n\nGlobal resource fonts can be specified directly on @Text and @TextInput objects:\n\n    <Text Font=\"PlatformDefault\" />\n\nOr inline based on an `.otf` or `.ttf` file:\n\n    <Text Value=\"Hello!\">\n        <Font File=\"arial.ttf\" />\n    </Text>\n\nTo create a global resource font from a file, use the `ux:Global` attribute:\n\n    <Font File=\"arial.ttf\" ux:Global=\"MyDefaultFont\" />\n    <Text Font=\"MyDefaultFont\" />"
            },
            "id": {
              "id": "fuse/font",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/font",
              "href": "fuse/font"
            },
            "titles": {
              "indexTitle": "Font",
              "fullyQualifiedIndexTitle": "Fuse.Font"
            }
          },
          {
            "comment": {
              "brief": "Represents the computed results of a particular intersection found during\nhit testing.",
              "full": "Represents the computed results of a particular intersection found during\nhit testing."
            },
            "id": {
              "id": "fuse/hittestresult",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/hittestresult",
              "href": "fuse/hittestresult"
            },
            "titles": {
              "indexTitle": "HitTestResult",
              "fullyQualifiedIndexTitle": "Fuse.HitTestResult"
            }
          },
          {
            "comment": {
              "brief": "Allows creating a class that contains several nodes and resources that are added directly to their Parent, as though included directly.",
              "full": "Allows creating a class that contains several nodes and resources that are added directly to their Parent, as though included directly.\n\n    <NodeGroup ux:Class=\"GridLine\">\n        <float4 ux:Property=\"Color\"/>\n        <string ux:Property=\"Title\"/>\n        <string ux:Property=\"Emoji\"/>\n\n        <Rectangle Color=\"{Property this.Color}\"/>\n        <Text Value=\"{Property this.Title}\"/>\n        <Text Value=\"{Property this.Emoji}\"/>\n    </NodeGroup>\n\n    <Grid Columns=\"50,1*,auto\" DefaultRow=\"auto\">\n        <GridLine Color=\"#AFA\" Title=\"Happy One\" Emoji=\"😀\"/>\n        <GridLine Color=\"#FFA\" Title=\"Cry Baby\" Emoji=\"😭\"/>\n        <GridLine Color=\"#FAA\" Title=\"Mr. Angry\" Emoji=\"😠\"/>\n    </Grid>\n\nA `NodeGroup` may be used as a target for `Each.TemplateSource` or `Instance.TemplateSource`. This can be used to create classes that position templated items.\n\n    <NodeGroup ux:Class=\"TitleBar\">\n        <Grid Columns=\"40,1*,40\" Alignment=\"Top\">\n            <Panel>\n                <Instance TemplateSource=\"this\" TemplateKey=\"leftOption\">\n                    <MyMenuButton/>\n                </Instance>\n            </Panel>\n            <Panel>\n                <Instance TemplateSource=\"this\" TemplateKey=\"title\">\n                    <Text Value=\"{Page Title}\"/>\n                </Instance>\n            </Panel>\n            <Panel TemplateSource=\"this\" TemplateKey=\"contextMenu\"/>\n        </Grid>\n    </NodeGroup>\n\n    <Page>\n        <TitleBar>\n            <Panel ux:Template=\"contextMenu\">\n                <MyShareButton/>\n            </Panel>\n        </TitleBar>\n    </Page>\n\n    <Page>\n        <TitleBar>\n            <Panel ux:Template=\"leftOption\"/><!-- leave empty -->\n            <Image File=\"pageTitle.png\" ux:Template=\"title\"/>\n        </TitleBar>\n    </Page>"
            },
            "id": {
              "id": "fuse/nodegroup",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/nodegroup",
              "href": "fuse/nodegroup"
            },
            "titles": {
              "indexTitle": "NodeGroup",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroup"
            }
          },
          {
            "id": {
              "id": "fuse/orthographicfrustum",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/orthographicfrustum",
              "href": "fuse/orthographicfrustum"
            },
            "titles": {
              "indexTitle": "OrthographicFrustum",
              "fullyQualifiedIndexTitle": "Fuse.OrthographicFrustum"
            }
          },
          {
            "id": {
              "id": "fuse/perspectivefrustum",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/perspectivefrustum",
              "href": "fuse/perspectivefrustum"
            },
            "titles": {
              "indexTitle": "PerspectiveFrustum",
              "fullyQualifiedIndexTitle": "Fuse.PerspectiveFrustum"
            }
          },
          {
            "comment": {
              "brief": "Play bundled .wav files",
              "full": "Play bundled .wav files\n\nThis is intended for playing the small one-shot sounds like button-clicks & notification chimes.\n\nYou'll find this trigger action in the Fuse.Audio package, which have to be referenced from your Uno project file.\nFor example:\n\n    {\n        \"Packages\": [\n            \"Fuse\",\n            \"FuseJS\",\n            \"Fuse.Audio\"\n        ]\n    }\n\n## Example\n\n    <StackPanel Margin=\"20\">\n        <Button Margin=\"10\" Text=\"Test Sound\">\n            <Clicked>\n                <PlaySound File=\"chime.wav\" />\n            </Clicked>\n        </Button>\n    </StackPanel>"
            },
            "id": {
              "id": "fuse/playsound",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/playsound",
              "href": "fuse/playsound"
            },
            "titles": {
              "indexTitle": "PlaySound",
              "fullyQualifiedIndexTitle": "Fuse.PlaySound"
            }
          },
          {
            "id": {
              "id": "fuse/properties",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/properties",
              "href": "fuse/properties"
            },
            "titles": {
              "indexTitle": "Properties",
              "fullyQualifiedIndexTitle": "Fuse.Properties"
            }
          },
          {
            "comment": {
              "brief": "Rotates the element by the degrees specified.",
              "full": "Rotates the element by the degrees specified.\n\n# Example\nThe following example rotates a rectangle 45 degrees\n\n    <Rectangle Width=\"100\" Height=\"50\">\n        <Rotation Degrees=\"90\"/>\n    </Rectangle>\n\nFor animated rotations, consider using a @Rotate animator instead of animating\nthe properties of this class."
            },
            "id": {
              "id": "fuse/rotation",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/rotation",
              "href": "fuse/rotation"
            },
            "titles": {
              "indexTitle": "Rotation",
              "fullyQualifiedIndexTitle": "Fuse.Rotation"
            }
          },
          {
            "comment": {
              "brief": "Enlarges or shrinks the element by the factor specified.",
              "full": "Enlarges or shrinks the element by the factor specified.\n\n# Example\nThe following example will make the `Rectangle` twice as big as the original size:\n\n    <Rectangle Width=\"100\" Height=\"100\">\n        <Scaling Factor=\"2\"/>\n    </Rectangle>\n\nFor animated scaling, consider using a @Scale animator instead of animating the properties of this class.\n\nThe standard options for `RelativeTo` are:\n\n* `Identity`: The default. This treats `Factor` as a multiplier. For example, `Factor=\"2\"` scales a Visual to twice its size\n*  `SizeFactor`: Scales relative to the target size of `RelativeNode` multiplied by `Factor`. The actual scaling is then the required amount to scale the source element to that target size.\n* `SizeChange`: Scales relative to the previous size of the visual prior to a layout change. The actual scaling is then the required amount to scale the source element to that target size."
            },
            "id": {
              "id": "fuse/scaling",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/scaling",
              "href": "fuse/scaling"
            },
            "titles": {
              "indexTitle": "Scaling",
              "fullyQualifiedIndexTitle": "Fuse.Scaling"
            }
          },
          {
            "comment": {
              "brief": "Applies a shear to the visual (skews it). If you wish to animate the shear use a @Skew animator instead.",
              "full": "Applies a shear to the visual (skews it). If you wish to animate the shear use a @Skew animator instead.\n\nA shear is 2D, applying to only the X, and Y axes."
            },
            "id": {
              "id": "fuse/shear",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/shear",
              "href": "fuse/shear"
            },
            "titles": {
              "indexTitle": "Shear",
              "fullyQualifiedIndexTitle": "Fuse.Shear"
            }
          },
          {
            "comment": {
              "brief": "A system-specific typeface from the target device.",
              "full": "A system-specific typeface from the target device.\n\nThis allows us to get fonts available on the target system on Android and iOS.\nBy using this we can save space by not bundling fonts that are known to be available on the target system with our app.\n\nReturns the default font if no matching font is found.\n\n## Example\n\nThe following example shows how to use a bold font from the Baskerville font family:\n\n    <SystemFont Family=\"Baskerville\" Style=\"Normal\" Weight=\"Bold\" ux:Global=\"BaskervilleBold\" />\n    <Text Font=\"BaskervilleBold\">Hello, world!</Text>\n\nAndroid typically uses abstract font families (e.g. `sans-serif`),\nwhereas iOS uses concrete (e.g. `Helvetica Neue`), so it is often the case that\nwe want to specify different font families that are depending on the target. To do this,\nwe can use local resources:\n\n    <Android>\n        <SystemFont Family=\"monospace\" Style=\"Normal\" Weight=\"Normal\" ux:Key=\"Monospace\" />\n    </Android>\n    <iOS>\n        <SystemFont Family=\"Courier\" Style=\"Normal\" Weight=\"Normal\" ux:Key=\"Monospace\" />\n    </iOS>\n    <Text Font=\"{Resource Monospace}\">Hello, world!</Text>\n\nNote that this only works on iOS and Android, and that it is not guaranteed to\nbe consistent across devices, OSes, or OS versions."
            },
            "id": {
              "id": "fuse/systemfont",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/systemfont",
              "href": "fuse/systemfont"
            },
            "titles": {
              "indexTitle": "SystemFont",
              "fullyQualifiedIndexTitle": "Fuse.SystemFont"
            }
          },
          {
            "comment": {
              "brief": "Represents a linear offset in space.\nFor animated translation, consider using a @Move animator instead of\nanimating the properties of this class.",
              "full": "Represents a linear offset in space.\nFor animated translation, consider using a @Move animator instead of\nanimating the properties of this class."
            },
            "id": {
              "id": "fuse/translation",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/translation",
              "href": "fuse/translation"
            },
            "titles": {
              "indexTitle": "Translation",
              "fullyQualifiedIndexTitle": "Fuse.Translation"
            }
          },
          {
            "comment": {
              "brief": "Defines a custom event that can be raised by a component and responded\nto by a user of that component.",
              "full": "Defines a custom event that can be raised by a component and responded\nto by a user of that component.\n\n> *Note:* See [this article](/docs/basics/creating-components#events-userevent)\n> for a more complete explanation of user events.\n\nUser events are attached to the node they are declared in, and only that\nnode and its children can raise and handle the event.\n\n## Usage\n\nWe put a @UserEvent at the root of our component class to indicate that it can raise a particular event.\nWhere we place our @UserEvent is important, since a node has to be in its subtree to raise or handle it.\n\n    <Panel ux:Class=\"MyComponent\">\n        <UserEvent ux:Name=\"myEvent\" />\n    </Panel>\n\nThis creates an event named `myEvent`.\n\n>**Note:** To make a @UserEvent that can be raised or handled from anywhere in the app, declare it on the root @App node, like this:\n>\n>```\n><App>\n>     <UserEvent ux:Name=\"myGlobalEvent\" />\n>     <!-- The rest of our app goes here -->\n></App>\n>```\n\nWe can now use @RaiseUserEvent to raise the event from UX.\n\n    <Panel ux:Class=\"MyComponent\">\n        <UserEvent ux:Name=\"myEvent\" />\n\n        <Clicked>\n            <RaiseUserEvent EventName=\"myEvent\" />\n        </Clicked>\n    </Panel>\n\nOr we can raise it from JavaScript.\n\n    <Panel ux:Class=\"MyComponent\">\n        <UserEvent ux:Name=\"myEvent\" />\n\n        <JavaScript>\n            setTimeout(function() {\n                myEvent.raise();\n            }, 5000);\n        </JavaScript>\n    </Panel>\n\nWhen we instantiate our component, we can respond to its events using the @OnUserEvent trigger.\n\n    <MyComponent>\n        <OnUserEvent EventName=\"myEvent\">\n            <!-- Actions/animators go here -->\n        </OnUserEvent>\n    </MyComponent>\n\nNote that we are referencing our @UserEvent by name even though it is declared outside of our current scope.\nWe can do this because `EventName` refers to the `Name` of the event. Setting `ux:Name` also sets `Name`, which means that in this example, the `Name` will be `myEvent`.\nThe actual instance of @UserEvent will be resolved at runtime.\n\nWe can also handle events in JavaScript.\n\n    <JavaScript>\n        function eventHandler() {\n            //do something\n        }\n\n        module.exports = { eventHandler: eventHandler };\n    </JavaScript>\n\n    <MyComponent>\n        <OnUserEvent EventName=\"myEvent\" Handler=\"{eventHandler}\"/>\n    </MyComponent>\n\nWe can pass arguments when raising an event.\n\n    myEvent.raise({\n        userName: \"james\",\n        isAdmin: false\n    });\n\nThis is also possible when raising the event from UX.\n\n    <RaiseUserEvent EventName=\"myEvent\">\n        <UserEventArg Name=\"userName\" StringValue=\"james\" />\n        <UserEventArg Name=\"isAdmin\" BoolValue=\"false\" />\n    </RaiseUserEvent>\n\nThe arguments are then passed to the event handler.\n\n    <JavaScript>\n        function eventHandler(args) {\n            console.log(\"Username: \" + args.userName + \", Is admin: \" + args.isAdmin);\n        }\n\n        module.exports = { eventHandler: eventHandler };\n    </JavaScript>\n\n    <OnUserEvent EventName=\"myEvent\" Handler=\"{eventHandler}\" />"
            },
            "id": {
              "id": "fuse/userevent",
              "parentId": "fuse",
              "type": "UxClass",
              "modifiers": [
                "public",
                "partial"
              ]
            },
            "uri": {
              "idUri": "fuse/userevent",
              "href": "fuse/userevent"
            },
            "titles": {
              "indexTitle": "UserEvent",
              "fullyQualifiedIndexTitle": "Fuse.UserEvent"
            }
          }
        ]
      }
    ],
    "classes": [
      {
        "items": [
          {
            "comment": {
              "brief": "Base class for apps.\nA Fuse project should contain exactly one `App` tag, which is the root\nnode for the entire application.",
              "full": "Base class for apps.\nA Fuse project should contain exactly one `App` tag, which is the root\nnode for the entire application."
            },
            "id": {
              "id": "fuse/app",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/app",
              "href": "fuse/app"
            },
            "titles": {
              "indexTitle": "App",
              "fullyQualifiedIndexTitle": "Fuse.App"
            }
          },
          {
            "comment": {
              "brief": "Base class for Fuse @Apps.\nThis class contains implementation and interface that is common between all platforms. You\nonly need to derive from this class when adding support for a new platform.\nFuse already provides derived classes for each supported platform, all of them named @App, that you\nshould use as base class when creating an app for an already supported platform.",
              "full": "Base class for Fuse @Apps.\nThis class contains implementation and interface that is common between all platforms. You\nonly need to derive from this class when adding support for a new platform.\nFuse already provides derived classes for each supported platform, all of them named @App, that you\nshould use as base class when creating an app for an already supported platform."
            },
            "id": {
              "id": "fuse/appbase",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/appbase",
              "href": "fuse/appbase"
            },
            "titles": {
              "indexTitle": "AppBase",
              "fullyQualifiedIndexTitle": "Fuse.AppBase"
            }
          },
          {
            "comment": {
              "brief": "Base class for UX nodes without visual appearance.",
              "full": "Base class for UX nodes without visual appearance."
            },
            "id": {
              "id": "fuse/behavior",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/behavior",
              "href": "fuse/behavior"
            },
            "titles": {
              "indexTitle": "Behavior",
              "fullyQualifiedIndexTitle": "Fuse.Behavior"
            }
          },
          {
            "comment": {
              "brief": "Base class for binding classes that provide data for a @Node properties.",
              "full": "Base class for binding classes that provide data for a @Node properties."
            },
            "id": {
              "id": "fuse/binding",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/binding",
              "href": "fuse/binding"
            },
            "titles": {
              "indexTitle": "Binding",
              "fullyQualifiedIndexTitle": "Fuse.Binding"
            }
          },
          {
            "id": {
              "id": "fuse/collision",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/collision",
              "href": "fuse/collision"
            },
            "titles": {
              "indexTitle": "Collision",
              "fullyQualifiedIndexTitle": "Fuse.Collision"
            }
          },
          {
            "id": {
              "id": "fuse/computeexception",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/computeexception",
              "href": "fuse/computeexception"
            },
            "titles": {
              "indexTitle": "ComputeException",
              "fullyQualifiedIndexTitle": "Fuse.ComputeException"
            }
          },
          {
            "comment": {
              "brief": "Assume that any of these properties can be null (except Type).",
              "full": "Assume that any of these properties can be null (except Type)."
            },
            "id": {
              "id": "fuse/diagnostic",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/diagnostic",
              "href": "fuse/diagnostic"
            },
            "titles": {
              "indexTitle": "Diagnostic",
              "fullyQualifiedIndexTitle": "Fuse.Diagnostic"
            }
          },
          {
            "comment": {
              "brief": "Static API for reporting diagnostic warnings and errors for display in visual tools",
              "full": "Static API for reporting diagnostic warnings and errors for display in visual tools\n\nThe `User...` messages indicate the user (programmer) has done something wrong and needs\nto modify their code. These will most likely be displayed prominantly to the user. This should be seen\nfrom the point of view of a typical UX/JS user, not somebody writing Uno code.\n\nThe `Internal...` messages are for situations that can't be directly attributed to a user error. They\nare an indication of a fuselibs error, or a Uno programmer error.\n\nThe `Unknown...` messages are for errors coming from the native platform or in places\nwhere the cause of the error really isn't known, but probably isn't a user or internal programming\nerror.\n\nThe `object` of the error messages should be the object which is generating the error; the Node\nwhich it would most likely be associated with in the UX tree. This is typically `this` in instance\ncontexts."
            },
            "id": {
              "id": "fuse/diagnostics",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/diagnostics",
              "href": "fuse/diagnostics"
            },
            "titles": {
              "indexTitle": "Diagnostics",
              "fullyQualifiedIndexTitle": "Fuse.Diagnostics"
            }
          },
          {
            "id": {
              "id": "fuse/drawcontext",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/drawcontext",
              "href": "fuse/drawcontext"
            },
            "titles": {
              "indexTitle": "DrawContext",
              "fullyQualifiedIndexTitle": "Fuse.DrawContext"
            }
          },
          {
            "id": {
              "id": "fuse/fastmatrix",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/fastmatrix",
              "href": "fuse/fastmatrix"
            },
            "titles": {
              "indexTitle": "FastMatrix",
              "fullyQualifiedIndexTitle": "Fuse.FastMatrix"
            }
          },
          {
            "id": {
              "id": "fuse/framebufferpool",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/framebufferpool",
              "href": "fuse/framebufferpool"
            },
            "titles": {
              "indexTitle": "FramebufferPool",
              "fullyQualifiedIndexTitle": "Fuse.FramebufferPool"
            }
          },
          {
            "comment": {
              "brief": "Allows dispatching actions on a separate thread with access to a grpahics\ncontext that shares data with the main graphics context of the @App.\nThis is for example used to do asynchronous loading of textures.",
              "full": "Allows dispatching actions on a separate thread with access to a grpahics\ncontext that shares data with the main graphics context of the @App.\nThis is for example used to do asynchronous loading of textures."
            },
            "id": {
              "id": "fuse/graphicsworker",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/graphicsworker",
              "href": "fuse/graphicsworker"
            },
            "titles": {
              "indexTitle": "GraphicsWorker",
              "fullyQualifiedIndexTitle": "Fuse.GraphicsWorker"
            }
          },
          {
            "comment": {
              "brief": "Holds common information needed while traversing a visual tree to perform\nhit testing.",
              "full": "Holds common information needed while traversing a visual tree to perform\nhit testing."
            },
            "id": {
              "id": "fuse/hittestcontext",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/hittestcontext",
              "href": "fuse/hittestcontext"
            },
            "titles": {
              "indexTitle": "HitTestContext",
              "fullyQualifiedIndexTitle": "Fuse.HitTestContext"
            }
          },
          {
            "comment": {
              "brief": "Contains tools for serializing scripting objects (based on `IArray` and `IObject`) to Json notation.",
              "full": "Contains tools for serializing scripting objects (based on `IArray` and `IObject`) to Json notation."
            },
            "id": {
              "id": "fuse/json",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static",
                "partial"
              ]
            },
            "uri": {
              "idUri": "fuse/json",
              "href": "fuse/json"
            },
            "titles": {
              "indexTitle": "Json",
              "fullyQualifiedIndexTitle": "Fuse.Json"
            }
          },
          {
            "id": {
              "id": "fuse/launcher",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/launcher",
              "href": "fuse/launcher"
            },
            "titles": {
              "indexTitle": "Launcher",
              "fullyQualifiedIndexTitle": "Fuse.Launcher"
            }
          },
          {
            "id": {
              "id": "fuse/marshal",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static",
                "partial"
              ]
            },
            "uri": {
              "idUri": "fuse/marshal",
              "href": "fuse/marshal"
            },
            "titles": {
              "indexTitle": "Marshal",
              "fullyQualifiedIndexTitle": "Fuse.Marshal"
            }
          },
          {
            "id": {
              "id": "fuse/marshalexception",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/marshalexception",
              "href": "fuse/marshalexception"
            },
            "titles": {
              "indexTitle": "MarshalException",
              "fullyQualifiedIndexTitle": "Fuse.MarshalException"
            }
          },
          {
            "comment": {
              "brief": "Holds a global registry of the names of currently rooted objects within the @App.",
              "full": "Holds a global registry of the names of currently rooted objects within the @App."
            },
            "id": {
              "id": "fuse/nameregistry",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/nameregistry",
              "href": "fuse/nameregistry"
            },
            "titles": {
              "indexTitle": "NameRegistry",
              "fullyQualifiedIndexTitle": "Fuse.NameRegistry"
            }
          },
          {
            "comment": {
              "brief": "Represents a name-value pair, as denoted by `name: value` in UX expressions.",
              "full": "Represents a name-value pair, as denoted by `name: value` in UX expressions.\n\nImplements `IObject`, which means the `NameValuePair` can be viewed as an object\nwith a single property.\n\nImplements `IArray`, which means the `NameValuePair` can be viewed as an array\nwith a single element.\n\nAn `IArray` containing some `NameValuePairs` can be converted to an `IObject`\nimplementation containing all those properties using the `ObjectFromArray` method."
            },
            "id": {
              "id": "fuse/namevaluepair",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/namevaluepair",
              "href": "fuse/namevaluepair"
            },
            "titles": {
              "indexTitle": "NameValuePair",
              "fullyQualifiedIndexTitle": "Fuse.NameValuePair"
            }
          },
          {
            "comment": {
              "brief": "Nodes are the basic building blocks of Fuse apps.",
              "full": "Nodes are the basic building blocks of Fuse apps.\n\nNodes are typically instantiated in UX Markup, and come in many different subclasses.\n\nSubclasses inheriting @Visual have a visual representation on the screen, and/or manages input for a\nspecific visual region.\n\nSubclasses inheriting @Behaviors modify the behavior of @Visuals.",
              "attributes": {
                "topic": "Nodes"
              }
            },
            "id": {
              "id": "fuse/node",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract",
                "partial"
              ]
            },
            "uri": {
              "idUri": "fuse/node",
              "href": "fuse/node"
            },
            "titles": {
              "indexTitle": "Node",
              "fullyQualifiedIndexTitle": "Fuse.Node"
            }
          },
          {
            "comment": {
              "brief": "A common base class that adds nodes and resources to the parent node while active.",
              "full": "A common base class that adds nodes and resources to the parent node while active.\n\n[subclass Fuse.NodeGroupBase]\n\nBe aware there is no ordering between the Nodes, Resources, and Templates. These are each independent lists which have their own order."
            },
            "id": {
              "id": "fuse/nodegroupbase",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/nodegroupbase",
              "href": "fuse/nodegroupbase"
            },
            "titles": {
              "indexTitle": "NodeGroupBase",
              "fullyQualifiedIndexTitle": "Fuse.NodeGroupBase"
            }
          },
          {
            "id": {
              "id": "fuse/pendingremovevisual",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/pendingremovevisual",
              "href": "fuse/pendingremovevisual"
            },
            "titles": {
              "indexTitle": "PendingRemoveVisual",
              "fullyQualifiedIndexTitle": "Fuse.PendingRemoveVisual"
            }
          },
          {
            "comment": {
              "brief": "Contains information about a new size and location for a visual element.",
              "full": "Contains information about a new size and location for a visual element.\n\nEvent handlers for the [Element.Placed](api:fuse/elements/element/placed) event will be called with\nan instance of `PlacedArgs`, containing the following fields:\n\n    {\n        x,      // X-coordinate of the element's new position\n        y,      // Y-coordinate of the element's new position\n        width,  // The new width of the element.\n        height  // The new height of the element\n    }\n\nAll coordinates are in the parent node's local space, in points."
            },
            "id": {
              "id": "fuse/placedargs",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/placedargs",
              "href": "fuse/placedargs"
            },
            "titles": {
              "indexTitle": "PlacedArgs",
              "fullyQualifiedIndexTitle": "Fuse.PlacedArgs"
            }
          },
          {
            "id": {
              "id": "fuse/propertyhandle",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/propertyhandle",
              "href": "fuse/propertyhandle"
            },
            "titles": {
              "indexTitle": "PropertyHandle",
              "fullyQualifiedIndexTitle": "Fuse.PropertyHandle"
            }
          },
          {
            "comment": {
              "brief": "A common base that provides for translation relative to other nodes.",
              "full": "A common base that provides for translation relative to other nodes."
            },
            "id": {
              "id": "fuse/relativetransform_1",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/relativetransform_1",
              "href": "fuse/relativetransform_1"
            },
            "titles": {
              "indexTitle": "RelativeTransform<TransformMode>",
              "fullyQualifiedIndexTitle": "Fuse.RelativeTransform<TransformMode>"
            }
          },
          {
            "comment": {
              "brief": "Successive events cancel each other out. Only one thing in the tree can be brought into\nview a time/per-frame. This also means that `Node` could be null, indicating this frame\nthere is no more request (in case a request was sent and needs to be cancelled).",
              "full": "Successive events cancel each other out. Only one thing in the tree can be brought into\nview a time/per-frame. This also means that `Node` could be null, indicating this frame\nthere is no more request (in case a request was sent and needs to be cancelled)."
            },
            "id": {
              "id": "fuse/requestbringintoviewargs",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/requestbringintoviewargs",
              "href": "fuse/requestbringintoviewargs"
            },
            "titles": {
              "indexTitle": "RequestBringIntoViewArgs",
              "fullyQualifiedIndexTitle": "Fuse.RequestBringIntoViewArgs"
            }
          },
          {
            "id": {
              "id": "fuse/requiresrootedexception",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/requiresrootedexception",
              "href": "fuse/requiresrootedexception"
            },
            "titles": {
              "indexTitle": "RequiresRootedException",
              "fullyQualifiedIndexTitle": "Fuse.RequiresRootedException"
            }
          },
          {
            "id": {
              "id": "fuse/rootviewport",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/rootviewport",
              "href": "fuse/rootviewport"
            },
            "titles": {
              "indexTitle": "RootViewport",
              "fullyQualifiedIndexTitle": "Fuse.RootViewport"
            }
          },
          {
            "id": {
              "id": "fuse/scalingmodes",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/scalingmodes",
              "href": "fuse/scalingmodes"
            },
            "titles": {
              "indexTitle": "ScalingModes",
              "fullyQualifiedIndexTitle": "Fuse.ScalingModes"
            }
          },
          {
            "comment": {
              "brief": "A global stopwatch timer that has time=0 when the app launched",
              "full": "A global stopwatch timer that has time=0 when the app launched"
            },
            "id": {
              "id": "fuse/time",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/time",
              "href": "fuse/time"
            },
            "titles": {
              "indexTitle": "Time",
              "fullyQualifiedIndexTitle": "Fuse.Time"
            }
          },
          {
            "comment": {
              "brief": "Provides callback services on the UI thread based on elapsed time.",
              "full": "Provides callback services on the UI thread based on elapsed time."
            },
            "id": {
              "id": "fuse/timer",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "fuse/timer",
              "href": "fuse/timer"
            },
            "titles": {
              "indexTitle": "Timer",
              "fullyQualifiedIndexTitle": "Fuse.Timer"
            }
          },
          {
            "id": {
              "id": "fuse/toast",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/toast",
              "href": "fuse/toast"
            },
            "titles": {
              "indexTitle": "Toast",
              "fullyQualifiedIndexTitle": "Fuse.Toast"
            }
          },
          {
            "comment": {
              "brief": "Transforms are used to move, rotate, scale and skew elements beyond their assigned placement by the Fuse layout engine.",
              "full": "Transforms are used to move, rotate, scale and skew elements beyond their assigned placement by the Fuse layout engine.\n\nTransforms are added to elements just like other elements and triggers.\n\n# Example\nIn this example, we scale a circle to become three times its original size:\n\n    <Circle Color=\"Green\" Width=\"50\" Height=\"50\">\n        <Scaling Factor=\"3\" />\n    </Circle>\n\n## Available transforms\n[subclass Fuse.Transform]",
              "attributes": {
                "topic": "Transforms"
              }
            },
            "id": {
              "id": "fuse/transform",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/transform",
              "href": "fuse/transform"
            },
            "titles": {
              "indexTitle": "Transform",
              "fullyQualifiedIndexTitle": "Fuse.Transform"
            }
          },
          {
            "id": {
              "id": "fuse/translationmodes",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/translationmodes",
              "href": "fuse/translationmodes"
            },
            "titles": {
              "indexTitle": "TranslationModes",
              "fullyQualifiedIndexTitle": "Fuse.TranslationModes"
            }
          },
          {
            "comment": {
              "brief": "Holds information about an unhandled exception",
              "full": "Holds information about an unhandled exception"
            },
            "id": {
              "id": "fuse/unhandledexceptionargs",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/unhandledexceptionargs",
              "href": "fuse/unhandledexceptionargs"
            },
            "titles": {
              "indexTitle": "UnhandledExceptionArgs",
              "fullyQualifiedIndexTitle": "Fuse.UnhandledExceptionArgs"
            }
          },
          {
            "id": {
              "id": "fuse/updatemanager",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/updatemanager",
              "href": "fuse/updatemanager"
            },
            "titles": {
              "indexTitle": "UpdateManager",
              "fullyQualifiedIndexTitle": "Fuse.UpdateManager"
            }
          },
          {
            "id": {
              "id": "fuse/usereventargs",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/usereventargs",
              "href": "fuse/usereventargs"
            },
            "titles": {
              "indexTitle": "UserEventArgs",
              "fullyQualifiedIndexTitle": "Fuse.UserEventArgs"
            }
          },
          {
            "comment": {
              "brief": "Get information about the current Fuse library version",
              "full": "Get information about the current Fuse library version"
            },
            "id": {
              "id": "fuse/version",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/version",
              "href": "fuse/version"
            },
            "titles": {
              "indexTitle": "Version",
              "fullyQualifiedIndexTitle": "Fuse.Version"
            }
          },
          {
            "id": {
              "id": "fuse/viewporthelpers",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "fuse/viewporthelpers",
              "href": "fuse/viewporthelpers"
            },
            "titles": {
              "indexTitle": "ViewportHelpers",
              "fullyQualifiedIndexTitle": "Fuse.ViewportHelpers"
            }
          },
          {
            "comment": {
              "brief": "Visuals are nodes with a visual representation.",
              "full": "Visuals are nodes with a visual representation.\n\nThis is the base class of all visual objects within an app, both objects with actual\nvisual appearance and invisible objects that contain other visuals. Examples of visuals\nare @Rectangle, @Panel, @Button and @WebView.\n\nVisuals manage pointer input for an area of the screen and respond accordingly.\nThe area for which the visual receives pointer input is determined by the @HitTest\nmethod. The area does not need to be a rectangular area, it can be any complex shape.\n\nVisuals can have many different types of children, including other visuals, @Behaviors,\nand @Transforms. The @Children has a certain order which is the order in which the children\nare laid out during layout. This order is by default is identical to the Z-order. However,\nthe Z-order can be manipulated separately from the child-order.\n\nVisuals can have input focus if the `Focus.IsFocusable` property is set to `true`.",
              "attributes": {
                "topic": "Visual"
              }
            },
            "id": {
              "id": "fuse/visual",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract",
                "partial"
              ]
            },
            "uri": {
              "idUri": "fuse/visual",
              "href": "fuse/visual"
            },
            "titles": {
              "indexTitle": "Visual",
              "fullyQualifiedIndexTitle": "Fuse.Visual"
            }
          },
          {
            "comment": {
              "brief": "This class will be specialized for speed not accuracy: the effective bounds checked may be larger\nthan the strict bounds defined by the inputs.",
              "full": "This class will be specialized for speed not accuracy: the effective bounds checked may be larger\nthan the strict bounds defined by the inputs.\n\nInstances of this type are immutable."
            },
            "id": {
              "id": "fuse/visualbounds",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/visualbounds",
              "href": "fuse/visualbounds"
            },
            "titles": {
              "indexTitle": "VisualBounds",
              "fullyQualifiedIndexTitle": "Fuse.VisualBounds"
            }
          },
          {
            "id": {
              "id": "fuse/visualevent_2",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/visualevent_2",
              "href": "fuse/visualevent_2"
            },
            "titles": {
              "indexTitle": "VisualEvent<THandler, TArgs>",
              "fullyQualifiedIndexTitle": "Fuse.VisualEvent<THandler, TArgs>"
            }
          },
          {
            "id": {
              "id": "fuse/visualeventargs",
              "parentId": "fuse",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/visualeventargs",
              "href": "fuse/visualeventargs"
            },
            "titles": {
              "indexTitle": "VisualEventArgs",
              "fullyQualifiedIndexTitle": "Fuse.VisualEventArgs"
            }
          }
        ]
      }
    ],
    "delegates": [
      {
        "items": [
          {
            "parameters": [
              {
                "name": "d",
                "href": "fuse/diagnostic",
                "title": "Diagnostic",
                "fullyQualifiedTitle": "Fuse.Diagnostic"
              }
            ],
            "id": {
              "id": "fuse/diagnostichandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/diagnostichandler",
              "href": "fuse/diagnostichandler"
            },
            "titles": {
              "indexTitle": "DiagnosticHandler (Diagnostic)",
              "fullyQualifiedIndexTitle": "Fuse.DiagnosticHandler (Fuse.Diagnostic)"
            }
          },
          {
            "parameters": [
              {
                "name": "result",
                "href": "fuse/hittestresult",
                "title": "HitTestResult",
                "fullyQualifiedTitle": "Fuse.HitTestResult"
              }
            ],
            "id": {
              "id": "fuse/hittestcallback",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/hittestcallback",
              "href": "fuse/hittestcallback"
            },
            "titles": {
              "indexTitle": "HitTestCallback (HitTestResult)",
              "fullyQualifiedIndexTitle": "Fuse.HitTestCallback (Fuse.HitTestResult)"
            }
          },
          {
            "parameters": [
              {
                "name": "sender",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "args",
                "href": "fuse/placedargs",
                "title": "PlacedArgs",
                "fullyQualifiedTitle": "Fuse.PlacedArgs"
              }
            ],
            "id": {
              "id": "fuse/placedhandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/placedhandler",
              "href": "fuse/placedhandler"
            },
            "titles": {
              "indexTitle": "PlacedHandler (object, PlacedArgs)",
              "fullyQualifiedIndexTitle": "Fuse.PlacedHandler (object, Fuse.PlacedArgs)"
            }
          },
          {
            "parameters": [
              {
                "name": "sender",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "args",
                "href": "fuse/requestbringintoviewargs",
                "title": "RequestBringIntoViewArgs",
                "fullyQualifiedTitle": "Fuse.RequestBringIntoViewArgs"
              }
            ],
            "id": {
              "id": "fuse/requestbringintoviewhandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/requestbringintoviewhandler",
              "href": "fuse/requestbringintoviewhandler"
            },
            "titles": {
              "indexTitle": "RequestBringIntoViewHandler (object, RequestBringIntoViewArgs)",
              "fullyQualifiedIndexTitle": "Fuse.RequestBringIntoViewHandler (object, Fuse.RequestBringIntoViewArgs)"
            }
          },
          {
            "comment": {
              "brief": "Signature of a method that can handle an unhandled exception",
              "full": "Signature of a method that can handle an unhandled exception"
            },
            "parameters": [
              {
                "name": "sender",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "args",
                "href": "fuse/unhandledexceptionargs",
                "title": "UnhandledExceptionArgs",
                "fullyQualifiedTitle": "Fuse.UnhandledExceptionArgs"
              }
            ],
            "id": {
              "id": "fuse/unhandledexceptionhandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/unhandledexceptionhandler",
              "href": "fuse/unhandledexceptionhandler"
            },
            "titles": {
              "indexTitle": "UnhandledExceptionHandler (object, UnhandledExceptionArgs)",
              "fullyQualifiedIndexTitle": "Fuse.UnhandledExceptionHandler (object, Fuse.UnhandledExceptionArgs)"
            }
          },
          {
            "parameters": [
              {
                "name": "sender",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "args",
                "href": "fuse/usereventargs",
                "title": "UserEventArgs",
                "fullyQualifiedTitle": "Fuse.UserEventArgs"
              }
            ],
            "id": {
              "id": "fuse/usereventhandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/usereventhandler",
              "href": "fuse/usereventhandler"
            },
            "titles": {
              "indexTitle": "UserEventHandler (object, UserEventArgs)",
              "fullyQualifiedIndexTitle": "Fuse.UserEventHandler (object, Fuse.UserEventArgs)"
            }
          },
          {
            "parameters": [
              {
                "name": "sender",
                "href": "uno/object",
                "title": "object",
                "fullyQualifiedTitle": "object"
              },
              {
                "name": "args",
                "href": "fuse/visualeventargs",
                "title": "VisualEventArgs",
                "fullyQualifiedTitle": "Fuse.VisualEventArgs"
              }
            ],
            "id": {
              "id": "fuse/visualeventhandler",
              "parentId": "fuse",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/visualeventhandler",
              "href": "fuse/visualeventhandler"
            },
            "titles": {
              "indexTitle": "VisualEventHandler (object, VisualEventArgs)",
              "fullyQualifiedIndexTitle": "Fuse.VisualEventHandler (object, Fuse.VisualEventArgs)"
            }
          }
        ]
      }
    ],
    "enums": [
      {
        "items": [
          {
            "id": {
              "id": "fuse/diagnostictype",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/diagnostictype",
              "href": "fuse/diagnostictype"
            },
            "titles": {
              "indexTitle": "DiagnosticType",
              "fullyQualifiedIndexTitle": "Fuse.DiagnosticType"
            }
          },
          {
            "id": {
              "id": "fuse/invalidatelayoutreason",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/invalidatelayoutreason",
              "href": "fuse/invalidatelayoutreason"
            },
            "titles": {
              "indexTitle": "InvalidateLayoutReason",
              "fullyQualifiedIndexTitle": "Fuse.InvalidateLayoutReason"
            }
          },
          {
            "comment": {
              "brief": "Enumerates the layers of a @Visual.",
              "full": "Enumerates the layers of a @Visual."
            },
            "id": {
              "id": "fuse/layer",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/layer",
              "href": "fuse/layer"
            },
            "titles": {
              "indexTitle": "Layer",
              "fullyQualifiedIndexTitle": "Fuse.Layer"
            }
          },
          {
            "id": {
              "id": "fuse/layoutdependent",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/layoutdependent",
              "href": "fuse/layoutdependent"
            },
            "titles": {
              "indexTitle": "LayoutDependent",
              "fullyQualifiedIndexTitle": "Fuse.LayoutDependent"
            }
          },
          {
            "comment": {
              "brief": "The allowed values for priority of actions within the Layout stage.",
              "full": "The allowed values for priority of actions within the Layout stage."
            },
            "id": {
              "id": "fuse/layoutpriority",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/layoutpriority",
              "href": "fuse/layoutpriority"
            },
            "titles": {
              "indexTitle": "LayoutPriority",
              "fullyQualifiedIndexTitle": "Fuse.LayoutPriority"
            }
          },
          {
            "comment": {
              "brief": "The influence this visual has on the layout and inside content controls, such as @PageControl or @ScrollView.",
              "full": "The influence this visual has on the layout and inside content controls, such as @PageControl or @ScrollView."
            },
            "id": {
              "id": "fuse/layoutrole",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/layoutrole",
              "href": "fuse/layoutrole"
            },
            "titles": {
              "indexTitle": "LayoutRole",
              "fullyQualifiedIndexTitle": "Fuse.LayoutRole"
            }
          },
          {
            "id": {
              "id": "fuse/marginboxdependent",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/marginboxdependent",
              "href": "fuse/marginboxdependent"
            },
            "titles": {
              "indexTitle": "MarginBoxDependent",
              "fullyQualifiedIndexTitle": "Fuse.MarginBoxDependent"
            }
          },
          {
            "id": {
              "id": "fuse/updatestage",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/updatestage",
              "href": "fuse/updatestage"
            },
            "titles": {
              "indexTitle": "UpdateStage",
              "fullyQualifiedIndexTitle": "Fuse.UpdateStage"
            }
          },
          {
            "id": {
              "id": "fuse/visualcontext",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/visualcontext",
              "href": "fuse/visualcontext"
            },
            "titles": {
              "indexTitle": "VisualContext",
              "fullyQualifiedIndexTitle": "Fuse.VisualContext"
            }
          },
          {
            "id": {
              "id": "fuse/visualeventmode",
              "parentId": "fuse",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/visualeventmode",
              "href": "fuse/visualeventmode"
            },
            "titles": {
              "indexTitle": "VisualEventMode",
              "fullyQualifiedIndexTitle": "Fuse.VisualEventMode"
            }
          }
        ]
      }
    ],
    "interfaces": [
      {
        "items": [
          {
            "id": {
              "id": "fuse/iactualplacement",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iactualplacement",
              "href": "fuse/iactualplacement"
            },
            "titles": {
              "indexTitle": "IActualPlacement",
              "fullyQualifiedIndexTitle": "Fuse.IActualPlacement"
            }
          },
          {
            "comment": {
              "brief": "Represents an array-like collection.",
              "full": "Represents an array-like collection.\n\nThe underlaying type is not neccessarily an Uno array or collection.\n\nAllthough read-only through this interface, the array is not neccessarily immutable.\nChanges to the array can only happen on the UI thread. This means the UI thread can safely\nread properties from this array.\n\nIf the object also supports `Fuse.Reactive.IObservableArray, consumers can subscribe to the\narray to receive change notifications.",
              "attributes": {
                "deprecated": true
              }
            },
            "id": {
              "id": "fuse/iarray",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iarray",
              "href": "fuse/iarray"
            },
            "titles": {
              "indexTitle": "IArray",
              "fullyQualifiedIndexTitle": "Fuse.IArray"
            }
          },
          {
            "id": {
              "id": "fuse/ibeginremovevisuallistener",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/ibeginremovevisuallistener",
              "href": "fuse/ibeginremovevisuallistener"
            },
            "titles": {
              "indexTitle": "IBeginRemoveVisualListener",
              "fullyQualifiedIndexTitle": "Fuse.IBeginRemoveVisualListener"
            }
          },
          {
            "id": {
              "id": "fuse/icommonviewport",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/icommonviewport",
              "href": "fuse/icommonviewport"
            },
            "titles": {
              "indexTitle": "ICommonViewport",
              "fullyQualifiedIndexTitle": "Fuse.ICommonViewport"
            }
          },
          {
            "id": {
              "id": "fuse/iframe",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iframe",
              "href": "fuse/iframe"
            },
            "titles": {
              "indexTitle": "IFrame",
              "fullyQualifiedIndexTitle": "Fuse.IFrame"
            }
          },
          {
            "id": {
              "id": "fuse/ifrustum",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/ifrustum",
              "href": "fuse/ifrustum"
            },
            "titles": {
              "indexTitle": "IFrustum",
              "fullyQualifiedIndexTitle": "Fuse.IFrustum"
            }
          },
          {
            "comment": {
              "brief": "Interface of objects that listens to changes in names, as recorded by the @NameRegistry.",
              "full": "Interface of objects that listens to changes in names, as recorded by the @NameRegistry."
            },
            "id": {
              "id": "fuse/inamelistener",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/inamelistener",
              "href": "fuse/inamelistener"
            },
            "titles": {
              "indexTitle": "INameListener",
              "fullyQualifiedIndexTitle": "Fuse.INameListener"
            }
          },
          {
            "comment": {
              "brief": "Represents a key-value object, where the keys can be enumerated and looked up by string name.",
              "full": "Represents a key-value object, where the keys can be enumerated and looked up by string name.\n\nThe enumerable keys do not neccessarily correspond to Uno properties on the object.\n\nAllthough read-only through this interface, the object is not neccessarily immutable.\nChanges to the object can only happen on the UI thread. This means the UI thread can safely\nread properties from this object.\n\nIf the object also supports `Fuse.Reactive.IObservableObject`, consumers can subscribe\nto receive change notifications.",
              "attributes": {
                "deprecated": true
              }
            },
            "id": {
              "id": "fuse/iobject",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iobject",
              "href": "fuse/iobject"
            },
            "titles": {
              "indexTitle": "IObject",
              "fullyQualifiedIndexTitle": "Fuse.IObject"
            }
          },
          {
            "id": {
              "id": "fuse/iparentobserver",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iparentobserver",
              "href": "fuse/iparentobserver"
            },
            "titles": {
              "indexTitle": "IParentObserver",
              "fullyQualifiedIndexTitle": "Fuse.IParentObserver"
            }
          },
          {
            "id": {
              "id": "fuse/iproperties",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iproperties",
              "href": "fuse/iproperties"
            },
            "titles": {
              "indexTitle": "IProperties",
              "fullyQualifiedIndexTitle": "Fuse.IProperties"
            }
          },
          {
            "comment": {
              "brief": "Defines the current drawing viewports. This really has nothing to do with the IViewport but was\nhistorically connected to it.",
              "full": "Defines the current drawing viewports. This really has nothing to do with the IViewport but was\nhistorically connected to it."
            },
            "id": {
              "id": "fuse/irenderviewport",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/irenderviewport",
              "href": "fuse/irenderviewport"
            },
            "titles": {
              "indexTitle": "IRenderViewport",
              "fullyQualifiedIndexTitle": "Fuse.IRenderViewport"
            }
          },
          {
            "id": {
              "id": "fuse/irootvisualprovider",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/irootvisualprovider",
              "href": "fuse/irootvisualprovider"
            },
            "titles": {
              "indexTitle": "IRootVisualProvider",
              "fullyQualifiedIndexTitle": "Fuse.IRootVisualProvider"
            }
          },
          {
            "id": {
              "id": "fuse/iscalingmode",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iscalingmode",
              "href": "fuse/iscalingmode"
            },
            "titles": {
              "indexTitle": "IScalingMode",
              "fullyQualifiedIndexTitle": "Fuse.IScalingMode"
            }
          },
          {
            "id": {
              "id": "fuse/iscriptexception",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iscriptexception",
              "href": "fuse/iscriptexception"
            },
            "titles": {
              "indexTitle": "IScriptException",
              "fullyQualifiedIndexTitle": "Fuse.IScriptException"
            }
          },
          {
            "id": {
              "id": "fuse/itemplatesource",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/itemplatesource",
              "href": "fuse/itemplatesource"
            },
            "titles": {
              "indexTitle": "ITemplateSource",
              "fullyQualifiedIndexTitle": "Fuse.ITemplateSource"
            }
          },
          {
            "comment": {
              "brief": "A singleton interface that calculates the transform.",
              "full": "A singleton interface that calculates the transform."
            },
            "id": {
              "id": "fuse/itransformmode",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/itransformmode",
              "href": "fuse/itransformmode"
            },
            "titles": {
              "indexTitle": "ITransformMode",
              "fullyQualifiedIndexTitle": "Fuse.ITransformMode"
            }
          },
          {
            "id": {
              "id": "fuse/itransformrelative",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/itransformrelative",
              "href": "fuse/itransformrelative"
            },
            "titles": {
              "indexTitle": "ITransformRelative",
              "fullyQualifiedIndexTitle": "Fuse.ITransformRelative"
            }
          },
          {
            "id": {
              "id": "fuse/itranslationmode",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/itranslationmode",
              "href": "fuse/itranslationmode"
            },
            "titles": {
              "indexTitle": "ITranslationMode",
              "fullyQualifiedIndexTitle": "Fuse.ITranslationMode"
            }
          },
          {
            "id": {
              "id": "fuse/iupdatelistener",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iupdatelistener",
              "href": "fuse/iupdatelistener"
            },
            "titles": {
              "indexTitle": "IUpdateListener",
              "fullyQualifiedIndexTitle": "Fuse.IUpdateListener"
            }
          },
          {
            "comment": {
              "brief": "Defines the current logical viewport for input translation.",
              "full": "Defines the current logical viewport for input translation.\n\nEach viewport defines a new world."
            },
            "id": {
              "id": "fuse/iviewport",
              "parentId": "fuse",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "fuse/iviewport",
              "href": "fuse/iviewport"
            },
            "titles": {
              "indexTitle": "IViewport",
              "fullyQualifiedIndexTitle": "Fuse.IViewport"
            }
          }
        ]
      }
    ],
    "structs": [
      {
        "items": [
          {
            "id": {
              "id": "fuse/box",
              "parentId": "fuse",
              "type": "Struct",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/box",
              "href": "fuse/box"
            },
            "titles": {
              "indexTitle": "Box",
              "fullyQualifiedIndexTitle": "Fuse.Box"
            }
          },
          {
            "comment": {
              "brief": "If a size parameter is not availble it will reutrn 0, via Size, X, Y",
              "full": "If a size parameter is not availble it will reutrn 0, via Size, X, Y\n\n`struct` was chosen here over `class` for performance reasons. A lot of these objects are\ncreated for node in the tree and in performance testing the structs were simply performing\na lot better."
            },
            "id": {
              "id": "fuse/layoutparams",
              "parentId": "fuse",
              "type": "Struct",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/layoutparams",
              "href": "fuse/layoutparams"
            },
            "titles": {
              "indexTitle": "LayoutParams",
              "fullyQualifiedIndexTitle": "Fuse.LayoutParams"
            }
          },
          {
            "id": {
              "id": "fuse/ray",
              "parentId": "fuse",
              "type": "Struct",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "fuse/ray",
              "href": "fuse/ray"
            },
            "titles": {
              "indexTitle": "Ray",
              "fullyQualifiedIndexTitle": "Fuse.Ray"
            }
          }
        ]
      }
    ]
  }
}