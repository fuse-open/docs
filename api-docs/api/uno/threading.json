{
  "entity": {
    "id": {
      "id": "uno/threading",
      "parentId": "uno",
      "type": "Namespace",
      "modifiers": []
    },
    "uri": {
      "idUri": "uno/threading",
      "href": "uno/threading"
    },
    "titles": {
      "pageTitle": "Uno.Threading Namespace",
      "navigationTitle": "Uno.Threading Namespace",
      "fullTitle": "Uno.Threading",
      "indexTitle": "Uno.Threading",
      "fullyQualifiedIndexTitle": "Uno.Threading"
    },
    "syntax": {
      "uno": "namespace Threading {}"
    }
  },
  "tableOfContents": {
    "classes": [
      {
        "items": [
          {
            "id": {
              "id": "uno/threading/autoresetevent",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "uno/threading/autoresetevent",
              "href": "uno/threading/autoresetevent"
            },
            "titles": {
              "indexTitle": "AutoResetEvent",
              "fullyQualifiedIndexTitle": "Uno.Threading.AutoResetEvent"
            }
          },
          {
            "id": {
              "id": "uno/threading/concurrentdictionary_2",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/concurrentdictionary_2",
              "href": "uno/threading/concurrentdictionary_2"
            },
            "titles": {
              "indexTitle": "ConcurrentDictionary<TKey, TValue>",
              "fullyQualifiedIndexTitle": "Uno.Threading.ConcurrentDictionary<TKey, TValue>"
            }
          },
          {
            "id": {
              "id": "uno/threading/concurrentqueue_1",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/concurrentqueue_1",
              "href": "uno/threading/concurrentqueue_1"
            },
            "titles": {
              "indexTitle": "ConcurrentQueue<T>",
              "fullyQualifiedIndexTitle": "Uno.Threading.ConcurrentQueue<T>"
            }
          },
          {
            "id": {
              "id": "uno/threading/eventwaithandle",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/eventwaithandle",
              "href": "uno/threading/eventwaithandle"
            },
            "titles": {
              "indexTitle": "EventWaitHandle",
              "fullyQualifiedIndexTitle": "Uno.Threading.EventWaitHandle"
            }
          },
          {
            "id": {
              "id": "uno/threading/future",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "uno/threading/future",
              "href": "uno/threading/future"
            },
            "titles": {
              "indexTitle": "Future",
              "fullyQualifiedIndexTitle": "Uno.Threading.Future"
            }
          },
          {
            "id": {
              "id": "uno/threading/future_1",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "uno/threading/future_1",
              "href": "uno/threading/future_1"
            },
            "titles": {
              "indexTitle": "Future<T>",
              "fullyQualifiedIndexTitle": "Uno.Threading.Future<T>"
            }
          },
          {
            "id": {
              "id": "uno/threading/idispatcherextensions",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "uno/threading/idispatcherextensions",
              "href": "uno/threading/idispatcherextensions"
            },
            "titles": {
              "indexTitle": "IDispatcherExtensions",
              "fullyQualifiedIndexTitle": "Uno.Threading.IDispatcherExtensions"
            }
          },
          {
            "id": {
              "id": "uno/threading/lockguard",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/lockguard",
              "href": "uno/threading/lockguard"
            },
            "titles": {
              "indexTitle": "LockGuard",
              "fullyQualifiedIndexTitle": "Uno.Threading.LockGuard"
            }
          },
          {
            "id": {
              "id": "uno/threading/mainthreadattribute",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/mainthreadattribute",
              "href": "uno/threading/mainthreadattribute"
            },
            "titles": {
              "indexTitle": "MainThreadAttribute",
              "fullyQualifiedIndexTitle": "Uno.Threading.MainThreadAttribute"
            }
          },
          {
            "id": {
              "id": "uno/threading/manualresetevent",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "uno/threading/manualresetevent",
              "href": "uno/threading/manualresetevent"
            },
            "titles": {
              "indexTitle": "ManualResetEvent",
              "fullyQualifiedIndexTitle": "Uno.Threading.ManualResetEvent"
            }
          },
          {
            "id": {
              "id": "uno/threading/monitor",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "static"
              ]
            },
            "uri": {
              "idUri": "uno/threading/monitor",
              "href": "uno/threading/monitor"
            },
            "titles": {
              "indexTitle": "Monitor",
              "fullyQualifiedIndexTitle": "Uno.Threading.Monitor"
            }
          },
          {
            "id": {
              "id": "uno/threading/mutex",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "uno/threading/mutex",
              "href": "uno/threading/mutex"
            },
            "titles": {
              "indexTitle": "Mutex",
              "fullyQualifiedIndexTitle": "Uno.Threading.Mutex"
            }
          },
          {
            "comment": {
              "brief": "Uno-side Promise based on the [A+ standard](https://promisesaplus.com/).",
              "full": "Uno-side Promise based on the [A+ standard](https://promisesaplus.com/).\n\nThis can be used in multiple ways:\n\n## Statically\n\nYou can use the `Run` function to wrap whatever argument-less function you want as a `Promise`, like this:\n\n    bool doStuff()\n    {\n        //stuff is done\n        success = doOtherStuff();\n        return success;\n    }\n\n    void onSuccess(bool value)\n    {\n        //Success!\n    }\n\n    void onFail(Exception e)\n    {\n        // Oh no!\n    }\n\n    public void DoSomeFancyStuff()\n    {\n        var promise = Promise.Run(doStuff).Then(onSuccess, onFail);\n    }\n\n## Make your own promises\n\nYou can also extend `Promise` and handle it yourself. Simply call `Resolve` or `Reject` once you have a result or a failure. The [Native Facebook login example](https://github.com/fusetools/fuse-samples/blob/feature-NativeFacebookLogin/Samples/NativeFacebookLogin/FacebookLogin/FacebookLoginModule.uno) is a good example of this being done in practice.\n\nNotice that `Resolve` and `Reject` are public, so you can also theoretically both resolve and reject promises from elsewhere.\n\n# Making Promises accessible from JavaScript modules\n\nA Promise can be wrapped in a @(NativePromise) and fed to a @(NativeModule) through `AddMember`. You can read more about creating custom js modules, and how to populate them with functions and promises, [here](articles:native-interop/native-js-modules.md)"
            },
            "id": {
              "id": "uno/threading/promise_1",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/promise_1",
              "href": "uno/threading/promise_1"
            },
            "titles": {
              "indexTitle": "Promise<T>",
              "fullyQualifiedIndexTitle": "Uno.Threading.Promise<T>"
            }
          },
          {
            "id": {
              "id": "uno/threading/semaphore",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "uno/threading/semaphore",
              "href": "uno/threading/semaphore"
            },
            "titles": {
              "indexTitle": "Semaphore",
              "fullyQualifiedIndexTitle": "Uno.Threading.Semaphore"
            }
          },
          {
            "id": {
              "id": "uno/threading/thread",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public",
                "sealed"
              ]
            },
            "uri": {
              "idUri": "uno/threading/thread",
              "href": "uno/threading/thread"
            },
            "titles": {
              "indexTitle": "Thread",
              "fullyQualifiedIndexTitle": "Uno.Threading.Thread"
            }
          },
          {
            "id": {
              "id": "uno/threading/threadpool",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/threadpool",
              "href": "uno/threading/threadpool"
            },
            "titles": {
              "indexTitle": "ThreadPool",
              "fullyQualifiedIndexTitle": "Uno.Threading.ThreadPool"
            }
          },
          {
            "id": {
              "id": "uno/threading/threadstateexception",
              "parentId": "uno/threading",
              "type": "Class",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/threadstateexception",
              "href": "uno/threading/threadstateexception"
            },
            "titles": {
              "indexTitle": "ThreadStateException",
              "fullyQualifiedIndexTitle": "Uno.Threading.ThreadStateException"
            }
          }
        ]
      }
    ],
    "delegates": [
      {
        "items": [
          {
            "id": {
              "id": "uno/threading/threadstart",
              "parentId": "uno/threading",
              "type": "Delegate",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/threadstart",
              "href": "uno/threading/threadstart"
            },
            "titles": {
              "indexTitle": "ThreadStart",
              "fullyQualifiedIndexTitle": "Uno.Threading.ThreadStart"
            }
          }
        ]
      }
    ],
    "enums": [
      {
        "items": [
          {
            "id": {
              "id": "uno/threading/eventresetmode",
              "parentId": "uno/threading",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/eventresetmode",
              "href": "uno/threading/eventresetmode"
            },
            "titles": {
              "indexTitle": "EventResetMode",
              "fullyQualifiedIndexTitle": "Uno.Threading.EventResetMode"
            }
          },
          {
            "id": {
              "id": "uno/threading/futurestate",
              "parentId": "uno/threading",
              "type": "Enum",
              "modifiers": [
                "public"
              ]
            },
            "uri": {
              "idUri": "uno/threading/futurestate",
              "href": "uno/threading/futurestate"
            },
            "titles": {
              "indexTitle": "FutureState",
              "fullyQualifiedIndexTitle": "Uno.Threading.FutureState"
            }
          }
        ]
      }
    ],
    "interfaces": [
      {
        "items": [
          {
            "id": {
              "id": "uno/threading/idispatcher",
              "parentId": "uno/threading",
              "type": "Interface",
              "modifiers": [
                "public",
                "abstract"
              ]
            },
            "uri": {
              "idUri": "uno/threading/idispatcher",
              "href": "uno/threading/idispatcher"
            },
            "titles": {
              "indexTitle": "IDispatcher",
              "fullyQualifiedIndexTitle": "Uno.Threading.IDispatcher"
            }
          }
        ]
      }
    ]
  }
}