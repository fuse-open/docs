{
  "entity": {
    "location": {
      "namespaceTitle": "FuseJS",
      "namespaceUri": "fusejs",
      "packageName": "FuseJS",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/threading/future_1",
      "title": "Future<byte[]>",
      "fullyQualifiedTitle": "Uno.Threading.Future<byte[]>"
    },
    "id": {
      "id": "fusejs/bundle/readbuffer_95a738ba",
      "parentId": "fusejs/bundle",
      "type": "JsMethod",
      "modifiers": [
        "public",
        "static"
      ]
    },
    "uri": {
      "idUri": "fusejs/bundle/readbuffer_95a738ba",
      "href": "fusejs/bundle/readbuffer_95a738ba"
    },
    "titles": {
      "pageTitle": "Bundle.ReadBuffer Method (object[])",
      "navigationTitle": "ReadBuffer Method (object[])",
      "fullTitle": "FuseJS.Bundle.ReadBuffer",
      "indexTitle": "ReadBuffer(object[])",
      "fullyQualifiedIndexTitle": "FuseJS.Bundle.ReadBuffer(object[])"
    },
    "syntax": {
      "uno": "public static Uno.Threading.Future<byte[]> ReadBuffer(object[] args) {}"
    },
    "comment": {
      "brief": "Read a bundled file as an ArrayBuffer of bytes",
      "full": "Read a bundled file as an ArrayBuffer of bytes\n\n```\nvar Observable = require(\"FuseJS/Observable\");\nvar Bundle = require(\"FuseJS/Bundle\");\nvar ImageTools = require(\"FuseJS/ImageTools\");\nvar imageUrlToDisplay = Observable();\n\nBundle.readBuffer(\"assets/image.jpg\").then(function(buffer) {\n    //Do something with the image data here\n});\n```",
      "attributes": {
        "scriptMethod": {
          "name": "readBuffer",
          "parameters": [
            "bundlePath"
          ]
        },
        "returns": {
          "typeHint": "Promise",
          "text": "A promise of an ArrayBuffer of data"
        }
      }
    }
  },
  "tableOfContents": {}
}