{
  "entity": {
    "location": {
      "namespaceTitle": "FuseJS",
      "namespaceUri": "fusejs",
      "packageName": "FuseJS",
      "packageVersion": "1.8.0-rc2"
    },
    "parameters": [
      {
        "name": "context",
        "href": "fuse/scripting/context",
        "title": "Context",
        "fullyQualifiedTitle": "Fuse.Scripting.Context"
      },
      {
        "name": "args",
        "href": "uno/object",
        "title": "object[]",
        "fullyQualifiedTitle": "object[]"
      }
    ],
    "returns": {
      "href": "uno/object",
      "title": "object",
      "fullyQualifiedTitle": "object"
    },
    "id": {
      "id": "fusejs/base64/decodebuffer_bbef95e2",
      "parentId": "fusejs/base64",
      "type": "JsMethod",
      "modifiers": [
        "private"
      ]
    },
    "uri": {
      "idUri": "fusejs/base64/decodebuffer_bbef95e2",
      "href": "fusejs/base64/decodebuffer_bbef95e2"
    },
    "titles": {
      "pageTitle": "Base64.DecodeBuffer Method (Context, object[])",
      "navigationTitle": "DecodeBuffer Method (Context, object[])",
      "fullTitle": "FuseJS.Base64.DecodeBuffer",
      "indexTitle": "DecodeBuffer(Context, object[])",
      "fullyQualifiedIndexTitle": "FuseJS.Base64.DecodeBuffer(Fuse.Scripting.Context, object[])"
    },
    "syntax": {
      "uno": "private object DecodeBuffer(Fuse.Scripting.Context context, object[] args) {}"
    },
    "comment": {
      "brief": "Decodes the given base64 string to an ArrayBuffer.",
      "full": "Decodes the given base64 string to an ArrayBuffer.\n\n    var Base64 = require(\"FuseJS/Base64\");\n    var buf = Base64.decodeBuffer(\"NxMAAA==\");\n    var view = new Int32Array(data);\n    // Should print 0x1337\n    console.log(\"0x\" + view[0].toString(16));\n\n*",
      "attributes": {
        "scriptMethod": {
          "name": "decodeBuffer",
          "parameters": [
            "base64String"
          ]
        },
        "returns": {
          "typeHint": "ArrayBuffer",
          "text": "Decoded ArrayBuffer"
        },
        "parameters": [
          {
            "name": "base64String",
            "typeHint": "String",
            "description": "base64 encoded string"
          }
        ]
      }
    }
  },
  "tableOfContents": {}
}